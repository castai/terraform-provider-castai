// Package sdk provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.11.0 DO NOT EDIT.
package sdk

import (
	"encoding/json"
	"fmt"
	"time"
)

const (
	ApiKeyAuthScopes = "ApiKeyAuth.Scopes"
	BearerAuthScopes = "BearerAuth.Scopes"
)

// Defines values for CastaiEvictorV1LabelSelectorExpressionOperator.
const (
	CastaiEvictorV1LabelSelectorExpressionOperatorDoesNotExist CastaiEvictorV1LabelSelectorExpressionOperator = "DoesNotExist"
	CastaiEvictorV1LabelSelectorExpressionOperatorExists       CastaiEvictorV1LabelSelectorExpressionOperator = "Exists"
	CastaiEvictorV1LabelSelectorExpressionOperatorIn           CastaiEvictorV1LabelSelectorExpressionOperator = "In"
	CastaiEvictorV1LabelSelectorExpressionOperatorInvalid      CastaiEvictorV1LabelSelectorExpressionOperator = "Invalid"
	CastaiEvictorV1LabelSelectorExpressionOperatorNotIn        CastaiEvictorV1LabelSelectorExpressionOperator = "NotIn"
)

// Defines values for CastaiInventoryV1beta1AttachableGPUDeviceManufacturer.
const (
	CastaiInventoryV1beta1AttachableGPUDeviceManufacturerAMD     CastaiInventoryV1beta1AttachableGPUDeviceManufacturer = "AMD"
	CastaiInventoryV1beta1AttachableGPUDeviceManufacturerNVIDIA  CastaiInventoryV1beta1AttachableGPUDeviceManufacturer = "NVIDIA"
	CastaiInventoryV1beta1AttachableGPUDeviceManufacturerUNKNOWN CastaiInventoryV1beta1AttachableGPUDeviceManufacturer = "UNKNOWN"
)

// Defines values for CastaiInventoryV1beta1AzureReservationReservationPlan.
const (
	ONEYEAR   CastaiInventoryV1beta1AzureReservationReservationPlan = "ONE_YEAR"
	THREEYEAR CastaiInventoryV1beta1AzureReservationReservationPlan = "THREE_YEAR"
)

// Defines values for CastaiInventoryV1beta1CommitmentScalingStrategy.
const (
	CPUBased CastaiInventoryV1beta1CommitmentScalingStrategy = "CPUBased"
	Default  CastaiInventoryV1beta1CommitmentScalingStrategy = "Default"
	RamBased CastaiInventoryV1beta1CommitmentScalingStrategy = "RamBased"
)

// Defines values for CastaiInventoryV1beta1CommitmentStatus.
const (
	Active   CastaiInventoryV1beta1CommitmentStatus = "Active"
	Inactive CastaiInventoryV1beta1CommitmentStatus = "Inactive"
)

// Defines values for CastaiInventoryV1beta1DiscountPricingType.
const (
	CastaiInventoryV1beta1DiscountPricingTypeTYPEFIXED      CastaiInventoryV1beta1DiscountPricingType = "TYPE_FIXED"
	CastaiInventoryV1beta1DiscountPricingTypeTYPEPERCENTAGE CastaiInventoryV1beta1DiscountPricingType = "TYPE_PERCENTAGE"
	CastaiInventoryV1beta1DiscountPricingTypeTYPEUNKNOWN    CastaiInventoryV1beta1DiscountPricingType = "TYPE_UNKNOWN"
)

// Defines values for CastaiInventoryV1beta1GCPResourceCUDCUDPlan.
const (
	THIRTYSIXMONTH CastaiInventoryV1beta1GCPResourceCUDCUDPlan = "THIRTY_SIX_MONTH"
	TWELVEMONTH    CastaiInventoryV1beta1GCPResourceCUDCUDPlan = "TWELVE_MONTH"
)

// Defines values for CastaiInventoryV1beta1GPUDeviceManufacturer.
const (
	CastaiInventoryV1beta1GPUDeviceManufacturerAMD     CastaiInventoryV1beta1GPUDeviceManufacturer = "AMD"
	CastaiInventoryV1beta1GPUDeviceManufacturerNVIDIA  CastaiInventoryV1beta1GPUDeviceManufacturer = "NVIDIA"
	CastaiInventoryV1beta1GPUDeviceManufacturerUNKNOWN CastaiInventoryV1beta1GPUDeviceManufacturer = "UNKNOWN"
)

// Defines values for CastaiInventoryV1beta1InstanceTypeCPUManufacturer.
const (
	CastaiInventoryV1beta1InstanceTypeCPUManufacturerAMD     CastaiInventoryV1beta1InstanceTypeCPUManufacturer = "AMD"
	CastaiInventoryV1beta1InstanceTypeCPUManufacturerAMPERE  CastaiInventoryV1beta1InstanceTypeCPUManufacturer = "AMPERE"
	CastaiInventoryV1beta1InstanceTypeCPUManufacturerAPPLE   CastaiInventoryV1beta1InstanceTypeCPUManufacturer = "APPLE"
	CastaiInventoryV1beta1InstanceTypeCPUManufacturerAWS     CastaiInventoryV1beta1InstanceTypeCPUManufacturer = "AWS"
	CastaiInventoryV1beta1InstanceTypeCPUManufacturerINTEL   CastaiInventoryV1beta1InstanceTypeCPUManufacturer = "INTEL"
	CastaiInventoryV1beta1InstanceTypeCPUManufacturerUNKNOWN CastaiInventoryV1beta1InstanceTypeCPUManufacturer = "UNKNOWN"
)

// Defines values for CastaiInventoryV1beta1InstanceTypeAvailabilityType.
const (
	CastaiInventoryV1beta1InstanceTypeAvailabilityTypePRIVATE CastaiInventoryV1beta1InstanceTypeAvailabilityType = "PRIVATE"
	CastaiInventoryV1beta1InstanceTypeAvailabilityTypePUBLIC  CastaiInventoryV1beta1InstanceTypeAvailabilityType = "PUBLIC"
	CastaiInventoryV1beta1InstanceTypeAvailabilityTypeUNKNOWN CastaiInventoryV1beta1InstanceTypeAvailabilityType = "UNKNOWN"
)

// Defines values for CastaiInventoryV1beta1StorageDriver.
const (
	CastaiInventoryV1beta1StorageDriverInvalid CastaiInventoryV1beta1StorageDriver = "invalid"
	CastaiInventoryV1beta1StorageDriverNvme    CastaiInventoryV1beta1StorageDriver = "nvme"
	CastaiInventoryV1beta1StorageDriverSata    CastaiInventoryV1beta1StorageDriver = "sata"
)

// Defines values for CastaiInventoryV1beta1StorageInfoDeviceType.
const (
	Hdd     CastaiInventoryV1beta1StorageInfoDeviceType = "hdd"
	Invalid CastaiInventoryV1beta1StorageInfoDeviceType = "invalid"
	Ssd     CastaiInventoryV1beta1StorageInfoDeviceType = "ssd"
)

// Defines values for CastaiSsoV1beta1OIDCType.
const (
	CastaiSsoV1beta1OIDCTypeTYPEBACKCHANNEL  CastaiSsoV1beta1OIDCType = "TYPE_BACK_CHANNEL"
	CastaiSsoV1beta1OIDCTypeTYPEFRONTCHANNEL CastaiSsoV1beta1OIDCType = "TYPE_FRONT_CHANNEL"
	CastaiSsoV1beta1OIDCTypeTYPEUNKNOWN      CastaiSsoV1beta1OIDCType = "TYPE_UNKNOWN"
)

// Defines values for CastaiSsoV1beta1SSOConnectionStatus.
const (
	STATUSACTIVE   CastaiSsoV1beta1SSOConnectionStatus = "STATUS_ACTIVE"
	STATUSFAILED   CastaiSsoV1beta1SSOConnectionStatus = "STATUS_FAILED"
	STATUSINACTIVE CastaiSsoV1beta1SSOConnectionStatus = "STATUS_INACTIVE"
	STATUSUNKNOWN  CastaiSsoV1beta1SSOConnectionStatus = "STATUS_UNKNOWN"
)

// Defines values for ExternalclusterV1ClusterReconcileInfoReconcileMode.
const (
	ExternalclusterV1ClusterReconcileInfoReconcileModeDisabled    ExternalclusterV1ClusterReconcileInfoReconcileMode = "disabled"
	ExternalclusterV1ClusterReconcileInfoReconcileModeEnabled     ExternalclusterV1ClusterReconcileInfoReconcileMode = "enabled"
	ExternalclusterV1ClusterReconcileInfoReconcileModePaused      ExternalclusterV1ClusterReconcileInfoReconcileMode = "paused"
	ExternalclusterV1ClusterReconcileInfoReconcileModeUnspecified ExternalclusterV1ClusterReconcileInfoReconcileMode = "unspecified"
)

// Defines values for ExternalclusterV1ClusterReconcileInfoReconcileStatus.
const (
	ExternalclusterV1ClusterReconcileInfoReconcileStatusFailed  ExternalclusterV1ClusterReconcileInfoReconcileStatus = "failed"
	ExternalclusterV1ClusterReconcileInfoReconcileStatusOk      ExternalclusterV1ClusterReconcileInfoReconcileStatus = "ok"
	ExternalclusterV1ClusterReconcileInfoReconcileStatusUnknown ExternalclusterV1ClusterReconcileInfoReconcileStatus = "unknown"
	ExternalclusterV1ClusterReconcileInfoReconcileStatusWarning ExternalclusterV1ClusterReconcileInfoReconcileStatus = "warning"
)

// Defines values for ExternalclusterV1NodeType.
const (
	Master          ExternalclusterV1NodeType = "master"
	NODETYPEINVALID ExternalclusterV1NodeType = "NODE_TYPE_INVALID"
	NODETYPEMASTER  ExternalclusterV1NodeType = "NODE_TYPE_MASTER"
	NODETYPEWORKER  ExternalclusterV1NodeType = "NODE_TYPE_WORKER"
	Worker          ExternalclusterV1NodeType = "worker"
)

// Defines values for K8sSelectorV1Operator.
const (
	DoesNotExist  K8sSelectorV1Operator = "DoesNotExist"
	DoesNotExist1 K8sSelectorV1Operator = "doesNotExist"
	Exists        K8sSelectorV1Operator = "Exists"
	Exists1       K8sSelectorV1Operator = "exists"
	Gt            K8sSelectorV1Operator = "Gt"
	Gt1           K8sSelectorV1Operator = "gt"
	IN            K8sSelectorV1Operator = "IN"
	In            K8sSelectorV1Operator = "in"
	Lt            K8sSelectorV1Operator = "Lt"
	Lt1           K8sSelectorV1Operator = "lt"
	NotIn         K8sSelectorV1Operator = "NotIn"
	NotIn1        K8sSelectorV1Operator = "notIn"
)

// Defines values for NodeconfigV1AKSConfigImageFamily.
const (
	NodeconfigV1AKSConfigImageFamilyFAMILYAZURELINUX  NodeconfigV1AKSConfigImageFamily = "FAMILY_AZURE_LINUX"
	NodeconfigV1AKSConfigImageFamilyFAMILYUBUNTU      NodeconfigV1AKSConfigImageFamily = "FAMILY_UBUNTU"
	NodeconfigV1AKSConfigImageFamilyFAMILYUNSPECIFIED NodeconfigV1AKSConfigImageFamily = "FAMILY_UNSPECIFIED"
	NodeconfigV1AKSConfigImageFamilyFAMILYWINDOWS2019 NodeconfigV1AKSConfigImageFamily = "FAMILY_WINDOWS_2019"
	NodeconfigV1AKSConfigImageFamilyFAMILYWINDOWS2022 NodeconfigV1AKSConfigImageFamily = "FAMILY_WINDOWS_2022"
	NodeconfigV1AKSConfigImageFamilyFamilyAzureLinux  NodeconfigV1AKSConfigImageFamily = "family_azure_linux"
	NodeconfigV1AKSConfigImageFamilyFamilyUbuntu      NodeconfigV1AKSConfigImageFamily = "family_ubuntu"
	NodeconfigV1AKSConfigImageFamilyFamilyWindows2019 NodeconfigV1AKSConfigImageFamily = "family_windows_2019"
	NodeconfigV1AKSConfigImageFamilyFamilyWindows2022 NodeconfigV1AKSConfigImageFamily = "family_windows_2022"
)

// Defines values for NodeconfigV1AKSConfigOsDiskType.
const (
	OSDISKTYPEPREMIUMSSD  NodeconfigV1AKSConfigOsDiskType = "OS_DISK_TYPE_PREMIUM_SSD"
	OSDISKTYPESTANDARD    NodeconfigV1AKSConfigOsDiskType = "OS_DISK_TYPE_STANDARD"
	OSDISKTYPESTANDARDSSD NodeconfigV1AKSConfigOsDiskType = "OS_DISK_TYPE_STANDARD_SSD"
	OSDISKTYPEUNSPECIFIED NodeconfigV1AKSConfigOsDiskType = "OS_DISK_TYPE_UNSPECIFIED"
)

// Defines values for NodeconfigV1ContainerRuntime.
const (
	NodeconfigV1ContainerRuntimeCONTAINERD  NodeconfigV1ContainerRuntime = "CONTAINERD"
	NodeconfigV1ContainerRuntimeContainerd  NodeconfigV1ContainerRuntime = "containerd"
	NodeconfigV1ContainerRuntimeDOCKERD     NodeconfigV1ContainerRuntime = "DOCKERD"
	NodeconfigV1ContainerRuntimeDockerd     NodeconfigV1ContainerRuntime = "dockerd"
	NodeconfigV1ContainerRuntimeUNSPECIFIED NodeconfigV1ContainerRuntime = "UNSPECIFIED"
	NodeconfigV1ContainerRuntimeUnspecified NodeconfigV1ContainerRuntime = "unspecified"
)

// Defines values for NodeconfigV1EKSConfigImageFamily.
const (
	NodeconfigV1EKSConfigImageFamilyFAMILYAL2          NodeconfigV1EKSConfigImageFamily = "FAMILY_AL2"
	NodeconfigV1EKSConfigImageFamilyFAMILYAL2023       NodeconfigV1EKSConfigImageFamily = "FAMILY_AL2023"
	NodeconfigV1EKSConfigImageFamilyFAMILYBOTTLEROCKET NodeconfigV1EKSConfigImageFamily = "FAMILY_BOTTLEROCKET"
	NodeconfigV1EKSConfigImageFamilyFAMILYUNSPECIFIED  NodeconfigV1EKSConfigImageFamily = "FAMILY_UNSPECIFIED"
	NodeconfigV1EKSConfigImageFamilyFamilyAl2          NodeconfigV1EKSConfigImageFamily = "family_al2"
	NodeconfigV1EKSConfigImageFamilyFamilyAl2023       NodeconfigV1EKSConfigImageFamily = "family_al2023"
	NodeconfigV1EKSConfigImageFamilyFamilyBottlerocket NodeconfigV1EKSConfigImageFamily = "family_bottlerocket"
)

// Defines values for NodetemplatesV1AvailableInstanceTypeOs.
const (
	NodetemplatesV1AvailableInstanceTypeOsLinux   NodetemplatesV1AvailableInstanceTypeOs = "linux"
	NodetemplatesV1AvailableInstanceTypeOsUnknown NodetemplatesV1AvailableInstanceTypeOs = "unknown"
	NodetemplatesV1AvailableInstanceTypeOsWindows NodetemplatesV1AvailableInstanceTypeOs = "windows"
)

// Defines values for NodetemplatesV1AvailableInstanceTypeStorageOptimizedOption.
const (
	Always   NodetemplatesV1AvailableInstanceTypeStorageOptimizedOption = "Always"
	Never    NodetemplatesV1AvailableInstanceTypeStorageOptimizedOption = "Never"
	OnDemand NodetemplatesV1AvailableInstanceTypeStorageOptimizedOption = "OnDemand"
)

// Defines values for NodetemplatesV1TaintEffect.
const (
	NoExecute  NodetemplatesV1TaintEffect = "NoExecute"
	NoSchedule NodetemplatesV1TaintEffect = "NoSchedule"
)

// Defines values for NodetemplatesV1TemplateConstraintsCPUManufacturer.
const (
	AMD    NodetemplatesV1TemplateConstraintsCPUManufacturer = "AMD"
	AMPERE NodetemplatesV1TemplateConstraintsCPUManufacturer = "AMPERE"
	APPLE  NodetemplatesV1TemplateConstraintsCPUManufacturer = "APPLE"
	AWS    NodetemplatesV1TemplateConstraintsCPUManufacturer = "AWS"
	INTEL  NodetemplatesV1TemplateConstraintsCPUManufacturer = "INTEL"
)

// Defines values for NodetemplatesV1TemplateConstraintsConstraintState.
const (
	DISABLED NodetemplatesV1TemplateConstraintsConstraintState = "DISABLED"
	ENABLED  NodetemplatesV1TemplateConstraintsConstraintState = "ENABLED"
	NOTSET   NodetemplatesV1TemplateConstraintsConstraintState = "NOT_SET"
)

// Defines values for PoliciesV1EvictorStatus.
const (
	Compatible   PoliciesV1EvictorStatus = "Compatible"
	Incompatible PoliciesV1EvictorStatus = "Incompatible"
	Missing      PoliciesV1EvictorStatus = "Missing"
	Unknown      PoliciesV1EvictorStatus = "Unknown"
)

// Defines values for PoliciesV1SpotInterruptionPredictionsType.
const (
	AWSRebalanceRecommendations   PoliciesV1SpotInterruptionPredictionsType = "AWSRebalanceRecommendations"
	CASTAIInterruptionPredictions PoliciesV1SpotInterruptionPredictionsType = "CASTAIInterruptionPredictions"
)

// Defines values for ScheduledrebalancingV1JobStatus.
const (
	JobStatusFailed     ScheduledrebalancingV1JobStatus = "JobStatusFailed"
	JobStatusFinished   ScheduledrebalancingV1JobStatus = "JobStatusFinished"
	JobStatusInProgress ScheduledrebalancingV1JobStatus = "JobStatusInProgress"
	JobStatusPending    ScheduledrebalancingV1JobStatus = "JobStatusPending"
	JobStatusSkipped    ScheduledrebalancingV1JobStatus = "JobStatusSkipped"
)

// Defines values for ScheduledrebalancingV1TargetNodeSelectionAlgorithm.
const (
	TargetNodeSelectionAlgorithmNormalizedPrice ScheduledrebalancingV1TargetNodeSelectionAlgorithm = "TargetNodeSelectionAlgorithmNormalizedPrice"
	TargetNodeSelectionAlgorithmUtilization     ScheduledrebalancingV1TargetNodeSelectionAlgorithm = "TargetNodeSelectionAlgorithmUtilization"
	TargetNodeSelectionAlgorithmUtilizedPrice   ScheduledrebalancingV1TargetNodeSelectionAlgorithm = "TargetNodeSelectionAlgorithmUtilizedPrice"
)

// Defines values for WorkloadoptimizationV1ApplyType.
const (
	DEFERRED  WorkloadoptimizationV1ApplyType = "DEFERRED"
	IMMEDIATE WorkloadoptimizationV1ApplyType = "IMMEDIATE"
	UNKNOWN   WorkloadoptimizationV1ApplyType = "UNKNOWN"
)

// Defines values for WorkloadoptimizationV1EventType.
const (
	EVENTTYPECONFIGURATIONCHANGED       WorkloadoptimizationV1EventType = "EVENT_TYPE_CONFIGURATION_CHANGED"
	EVENTTYPECONFIGURATIONCHANGEDV2     WorkloadoptimizationV1EventType = "EVENT_TYPE_CONFIGURATION_CHANGEDV2"
	EVENTTYPEINVALID                    WorkloadoptimizationV1EventType = "EVENT_TYPE_INVALID"
	EVENTTYPEOOMKILL                    WorkloadoptimizationV1EventType = "EVENT_TYPE_OOM_KILL"
	EVENTTYPERECOMMENDATIONAPPLIED      WorkloadoptimizationV1EventType = "EVENT_TYPE_RECOMMENDATION_APPLIED"
	EVENTTYPERECOMMENDEDPODCOUNTCHANGED WorkloadoptimizationV1EventType = "EVENT_TYPE_RECOMMENDED_POD_COUNT_CHANGED"
	EVENTTYPERECOMMENDEDREQUESTSCHANGED WorkloadoptimizationV1EventType = "EVENT_TYPE_RECOMMENDED_REQUESTS_CHANGED"
	EVENTTYPESCALINGPOLICYCREATED       WorkloadoptimizationV1EventType = "EVENT_TYPE_SCALING_POLICY_CREATED"
	EVENTTYPESCALINGPOLICYDELETED       WorkloadoptimizationV1EventType = "EVENT_TYPE_SCALING_POLICY_DELETED"
	EVENTTYPESURGE                      WorkloadoptimizationV1EventType = "EVENT_TYPE_SURGE"
)

// Defines values for WorkloadoptimizationV1GetAgentStatusResponseAgentStatus.
const (
	AGENTSTATUSINVALID WorkloadoptimizationV1GetAgentStatusResponseAgentStatus = "AGENT_STATUS_INVALID"
	AGENTSTATUSRUNNING WorkloadoptimizationV1GetAgentStatusResponseAgentStatus = "AGENT_STATUS_RUNNING"
	AGENTSTATUSUNKNOWN WorkloadoptimizationV1GetAgentStatusResponseAgentStatus = "AGENT_STATUS_UNKNOWN"
)

// Defines values for WorkloadoptimizationV1ManagedBy.
const (
	ANNOTATIONS WorkloadoptimizationV1ManagedBy = "ANNOTATIONS"
	API         WorkloadoptimizationV1ManagedBy = "API"
)

// Defines values for WorkloadoptimizationV1ManagementOption.
const (
	MANAGED   WorkloadoptimizationV1ManagementOption = "MANAGED"
	READONLY  WorkloadoptimizationV1ManagementOption = "READ_ONLY"
	UNDEFINED WorkloadoptimizationV1ManagementOption = "UNDEFINED"
)

// Defines values for WorkloadoptimizationV1RecommendationEventType.
const (
	RECOMMENDATIONEVENTTYPEINVALID WorkloadoptimizationV1RecommendationEventType = "RECOMMENDATION_EVENT_TYPE_INVALID"
	RECOMMENDATIONEVENTTYPEREVERT  WorkloadoptimizationV1RecommendationEventType = "RECOMMENDATION_EVENT_TYPE_REVERT"
)

// Defines values for WorkloadoptimizationV1ResourceConfigFunction.
const (
	WorkloadoptimizationV1ResourceConfigFunctionMAX      WorkloadoptimizationV1ResourceConfigFunction = "MAX"
	WorkloadoptimizationV1ResourceConfigFunctionQUANTILE WorkloadoptimizationV1ResourceConfigFunction = "QUANTILE"
)

// Defines values for WorkloadoptimizationV1ResourcePoliciesFunction.
const (
	WorkloadoptimizationV1ResourcePoliciesFunctionMAX      WorkloadoptimizationV1ResourcePoliciesFunction = "MAX"
	WorkloadoptimizationV1ResourcePoliciesFunctionQUANTILE WorkloadoptimizationV1ResourcePoliciesFunction = "QUANTILE"
)

// UsersAPIUpdateOrganizationUserRequest defines model for UsersAPI_UpdateOrganizationUser_request.
type UsersAPIUpdateOrganizationUserRequest struct {
	Role *string `json:"role,omitempty"`
}

// WorkloadOptimizationAPIAssignScalingPolicyWorkloadsRequest defines model for WorkloadOptimizationAPI_AssignScalingPolicyWorkloads_request.
type WorkloadOptimizationAPIAssignScalingPolicyWorkloadsRequest struct {
	WorkloadIds *[]string `json:"workloadIds,omitempty"`
}

// Auth token used to authenticate via api.
type CastaiAuthtokenV1beta1AuthToken struct {
	// (read only) Indicates whether the token is active.
	Active *bool `json:"active,omitempty"`

	// (read only) Time when the token was created (unix timestamp in nanoseconds).
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// created_by is used to link this token to a user who created it.
	CreatedBy *string `json:"createdBy"`

	// (read only) ID of the token.
	Id *string `json:"id,omitempty"`

	// (read only) Time when this token was last used (unix timestamp in nanoseconds).
	LastUsedAt *time.Time `json:"lastUsedAt,omitempty"`

	// (required) User provided name of the token.
	Name string `json:"name"`

	// whether token has readonly permissions.
	Readonly bool `json:"readonly"`

	// service_account_id is used to link this token to a service account.
	ServiceAccountId *string `json:"serviceAccountId"`

	// (read only, visible once on creation) actual token used to authenticate via api.
	Token *string `json:"token"`

	// token_prefix contains the first 3 characters of the generated token.
	TokenPrefix *string `json:"tokenPrefix"`
}

// AuthTokenUpdate is used to update an existing auth token.
type CastaiAuthtokenV1beta1AuthTokenUpdate struct {
	Active *bool `json:"active,omitempty"`
}

// CastaiAuthtokenV1beta1DeleteAuthTokenResponse defines model for castai.authtoken.v1beta1.DeleteAuthTokenResponse.
type CastaiAuthtokenV1beta1DeleteAuthTokenResponse = map[string]interface{}

// CastaiAuthtokenV1beta1ListAuthTokensResponse defines model for castai.authtoken.v1beta1.ListAuthTokensResponse.
type CastaiAuthtokenV1beta1ListAuthTokensResponse struct {
	Items *[]CastaiAuthtokenV1beta1AuthToken `json:"items,omitempty"`
}

// AdvancedConfig the evictor advanced configuration.
type CastaiEvictorV1AdvancedConfig struct {
	EvictionConfig []CastaiEvictorV1EvictionConfig `json:"evictionConfig"`
}

// EvictionConfig used to specify more granular settings per node/pod filters.
type CastaiEvictorV1EvictionConfig struct {
	NodeSelector *CastaiEvictorV1NodeSelector    `json:"nodeSelector,omitempty"`
	PodSelector  *CastaiEvictorV1PodSelector     `json:"podSelector,omitempty"`
	Settings     CastaiEvictorV1EvictionSettings `json:"settings"`
}

// CastaiEvictorV1EvictionSettings defines model for castai.evictor.v1.EvictionSettings.
type CastaiEvictorV1EvictionSettings struct {
	Aggressive      *CastaiEvictorV1EvictionSettingsSettingEnabled `json:"aggressive,omitempty"`
	Disposable      *CastaiEvictorV1EvictionSettingsSettingEnabled `json:"disposable,omitempty"`
	RemovalDisabled *CastaiEvictorV1EvictionSettingsSettingEnabled `json:"removalDisabled,omitempty"`
}

// CastaiEvictorV1EvictionSettingsSettingEnabled defines model for castai.evictor.v1.EvictionSettings.SettingEnabled.
type CastaiEvictorV1EvictionSettingsSettingEnabled struct {
	Enabled bool `json:"enabled"`
}

// LabelSelector is a proto mirror of the metav1.LabelSelector K8s API object. Properties `match_labels` and
// `match_expressions` are ANDed.
type CastaiEvictorV1LabelSelector struct {
	// A more advanced label query with operators. Multiple expressions are ANDed.
	MatchExpressions *[]CastaiEvictorV1LabelSelectorExpression `json:"matchExpressions,omitempty"`

	// Used to query resource labels.
	MatchLabels *CastaiEvictorV1LabelSelector_MatchLabels `json:"matchLabels,omitempty"`
}

// Used to query resource labels.
type CastaiEvictorV1LabelSelector_MatchLabels struct {
	AdditionalProperties map[string]string `json:"-"`
}

// Expression is a proto mirror of the metav1.LabelSelectorRequirement K8s API object.
type CastaiEvictorV1LabelSelectorExpression struct {
	// Key is a label.
	Key string `json:"key"`

	// Operator set of operators which can be used in the label selector expressions.
	Operator CastaiEvictorV1LabelSelectorExpressionOperator `json:"operator"`

	// Values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the
	// operator is Exists or DoesNotExist, the values array must be empty.
	Values *[]string `json:"values,omitempty"`
}

// Operator set of operators which can be used in the label selector expressions.
type CastaiEvictorV1LabelSelectorExpressionOperator string

// CastaiEvictorV1NodeSelector defines model for castai.evictor.v1.NodeSelector.
type CastaiEvictorV1NodeSelector struct {
	// LabelSelector is a proto mirror of the metav1.LabelSelector K8s API object. Properties `match_labels` and
	// `match_expressions` are ANDed.
	LabelSelector CastaiEvictorV1LabelSelector `json:"labelSelector"`
}

// CastaiEvictorV1PodSelector defines model for castai.evictor.v1.PodSelector.
type CastaiEvictorV1PodSelector struct {
	Kind *string `json:"kind,omitempty"`

	// LabelSelector is a proto mirror of the metav1.LabelSelector K8s API object. Properties `match_labels` and
	// `match_expressions` are ANDed.
	LabelSelector *CastaiEvictorV1LabelSelector `json:"labelSelector,omitempty"`
	Namespace     *string                       `json:"namespace,omitempty"`
}

// CastaiInventoryV1beta1AddReservationResponse defines model for castai.inventory.v1beta1.AddReservationResponse.
type CastaiInventoryV1beta1AddReservationResponse struct {
	Reservation *CastaiInventoryV1beta1ReservationDetails `json:"reservation,omitempty"`
}

// AppliedDiscount represents a discount applied to the instance type.
type CastaiInventoryV1beta1AppliedDiscount struct {
	Id      *string                                  `json:"id,omitempty"`
	Pricing *[]CastaiInventoryV1beta1DiscountPricing `json:"pricing,omitempty"`
}

// CastaiInventoryV1beta1AttachableDisk defines model for castai.inventory.v1beta1.AttachableDisk.
type CastaiInventoryV1beta1AttachableDisk struct {
	Name *string `json:"name,omitempty"`
}

// CastaiInventoryV1beta1AttachableGPUDevice defines model for castai.inventory.v1beta1.AttachableGPUDevice.
type CastaiInventoryV1beta1AttachableGPUDevice struct {
	BlacklistedAt *time.Time `json:"blacklistedAt,omitempty"`

	// Count of GPU to be attached.
	Count *int32 `json:"count,omitempty"`

	// GPU manufacturer.
	Manufacturer *CastaiInventoryV1beta1AttachableGPUDeviceManufacturer `json:"manufacturer,omitempty"`

	// Total amount of memory of the GPUs to be attached MiB.
	MemoryMib *int32 `json:"memoryMib,omitempty"`

	// Name of the GPU. For example nvidia-tesla-k80.
	Name *string `json:"name,omitempty"`

	// Total price of GPUs per hour.
	PriceHourly *string `json:"priceHourly,omitempty"`
}

// GPU manufacturer.
type CastaiInventoryV1beta1AttachableGPUDeviceManufacturer string

// CastaiInventoryV1beta1AzureReservation defines model for castai.inventory.v1beta1.AzureReservation.
type CastaiInventoryV1beta1AzureReservation struct {
	Count                 *int32                                        `json:"count,omitempty"`
	Id                    *string                                       `json:"id,omitempty"`
	InstanceType          *string                                       `json:"instanceType,omitempty"`
	InstanceTypeCpu       *string                                       `json:"instanceTypeCpu,omitempty"`
	InstanceTypeMemoryMib *string                                       `json:"instanceTypeMemoryMib,omitempty"`
	InstanceTypesUsage    *CastaiInventoryV1beta1InstanceTypeBasedUsage `json:"instanceTypesUsage,omitempty"`

	// - ONE_YEAR: 1 year commitment plan
	//  - THREE_YEAR: 3 year commitment plan
	Plan               *CastaiInventoryV1beta1AzureReservationReservationPlan `json:"plan,omitempty"`
	Scope              *string                                                `json:"scope,omitempty"`
	ScopeResourceGroup *string                                                `json:"scopeResourceGroup,omitempty"`
	ScopeSubscription  *string                                                `json:"scopeSubscription,omitempty"`
	Status             *string                                                `json:"status,omitempty"`
}

// - ONE_YEAR: 1 year commitment plan
//   - THREE_YEAR: 3 year commitment plan
type CastaiInventoryV1beta1AzureReservationReservationPlan string

// CastaiInventoryV1beta1AzureReservationImport defines model for castai.inventory.v1beta1.AzureReservationImport.
type CastaiInventoryV1beta1AzureReservationImport struct {
	ExpirationDate     *string `json:"expirationDate,omitempty"`
	Name               *string `json:"name,omitempty"`
	ProductName        *string `json:"productName,omitempty"`
	PurchaseDate       *string `json:"purchaseDate,omitempty"`
	Quantity           *int32  `json:"quantity,omitempty"`
	Region             *string `json:"region,omitempty"`
	ReservationId      *string `json:"reservationId,omitempty"`
	Scope              *string `json:"scope,omitempty"`
	ScopeResourceGroup *string `json:"scopeResourceGroup,omitempty"`
	ScopeSubscription  *string `json:"scopeSubscription,omitempty"`
	Status             *string `json:"status,omitempty"`
	Term               *string `json:"term,omitempty"`
	Type               *string `json:"type,omitempty"`
}

// CPUPlatform describes the CPU platforms the instance type can be equipped with.
type CastaiInventoryV1beta1CPUPlatform struct {
	// All Core Turbo Frequency (GHz). Only available for GCP.
	AllCoreTurboFrequency *float64 `json:"allCoreTurboFrequency,omitempty"`

	// Base Frequency of the platform (GHz).
	BaseFrequency *float64 `json:"baseFrequency,omitempty"`

	// Generation of the platform. Only available for GCP.
	Generation *string `json:"generation,omitempty"`

	// Platform name. Only available for GCP.
	Platform *string `json:"platform,omitempty"`

	// Processor name.
	ProcessorName *string `json:"processorName,omitempty"`

	// Single Core Turbo Frequency (GHz). Only available for GCP.
	SingleCoreTurboFrequency *float64 `json:"singleCoreTurboFrequency,omitempty"`
}

// CastaiInventoryV1beta1ClusterAggregatedUsage defines model for castai.inventory.v1beta1.ClusterAggregatedUsage.
type CastaiInventoryV1beta1ClusterAggregatedUsage struct {
	ClusterId         *string                                  `json:"clusterId,omitempty"`
	NodeIds           *[]string                                `json:"nodeIds,omitempty"`
	Nodes             *[]CastaiInventoryV1beta1NodeUsage       `json:"nodes,omitempty"`
	Usage             *float64                                 `json:"usage"`
	UsageDistribution *CastaiInventoryV1beta1UsageDistribution `json:"usageDistribution,omitempty"`
}

// CastaiInventoryV1beta1Commitment defines model for castai.inventory.v1beta1.Commitment.
type CastaiInventoryV1beta1Commitment struct {
	// Allowed usage specifies the part of the commitment that is allowed to be used. 1.0 means 100% of the commitment. Currently it's only supported for GCP CUDs.
	AllowedUsage            *float32                                `json:"allowedUsage,omitempty"`
	AzureReservationContext *CastaiInventoryV1beta1AzureReservation `json:"azureReservationContext,omitempty"`
	EndDate                 *time.Time                              `json:"endDate"`
	GcpResourceCudContext   *CastaiInventoryV1beta1GCPResourceCUD   `json:"gcpResourceCudContext,omitempty"`
	Id                      *string                                 `json:"id,omitempty"`
	Name                    *string                                 `json:"name,omitempty"`
	Prioritization          *bool                                   `json:"prioritization,omitempty"`
	Region                  *string                                 `json:"region,omitempty"`

	// Scaling strategy specifies how to use commitment by autoscaler.
	//
	//  - Default: If some commitment resource is utilised fully, only part of instance type can be covered by this commitment.
	// In some cases not using commitment will be cheaper and cheaper option will be chosen by autoscaler.
	//  - CPUBased: Aim to use as much CPU from commitment as possible. Even if instance is partially covered and cheaper option is available.
	//  - RamBased: Aim to use as much RAM from commitment as possible. Even if instance is partially covered and cheaper option is available.
	ScalingStrategy *CastaiInventoryV1beta1CommitmentScalingStrategy `json:"scalingStrategy,omitempty"`
	StartDate       *time.Time                                       `json:"startDate,omitempty"`

	// - Inactive: Inactive commitment
	//  - Active: Active commitment
	Status    *CastaiInventoryV1beta1CommitmentStatus `json:"status,omitempty"`
	UpdatedAt *time.Time                              `json:"updatedAt,omitempty"`
}

// Scaling strategy specifies how to use commitment by autoscaler.
//
//   - Default: If some commitment resource is utilised fully, only part of instance type can be covered by this commitment.
//
// In some cases not using commitment will be cheaper and cheaper option will be chosen by autoscaler.
//   - CPUBased: Aim to use as much CPU from commitment as possible. Even if instance is partially covered and cheaper option is available.
//   - RamBased: Aim to use as much RAM from commitment as possible. Even if instance is partially covered and cheaper option is available.
type CastaiInventoryV1beta1CommitmentScalingStrategy string

// - Inactive: Inactive commitment
//   - Active: Active commitment
type CastaiInventoryV1beta1CommitmentStatus string

// CastaiInventoryV1beta1CommitmentAssignment defines model for castai.inventory.v1beta1.CommitmentAssignment.
type CastaiInventoryV1beta1CommitmentAssignment struct {
	ClusterId    *string `json:"clusterId,omitempty"`
	CommitmentId *string `json:"commitmentId,omitempty"`
	Id           *string `json:"id,omitempty"`
	Priority     *int32  `json:"priority,omitempty"`
}

// CastaiInventoryV1beta1CountableInstanceType defines model for castai.inventory.v1beta1.CountableInstanceType.
type CastaiInventoryV1beta1CountableInstanceType struct {
	ClusterId *string `json:"clusterId,omitempty"`
	Count     *int32  `json:"count,omitempty"`

	// InstanceType is a cloud service provider specific VM type with basic data.
	InstanceType *CastaiInventoryV1beta1InstanceType `json:"instanceType,omitempty"`
}

// CastaiInventoryV1beta1DiscountPricing defines model for castai.inventory.v1beta1.DiscountPricing.
type CastaiInventoryV1beta1DiscountPricing struct {
	// Resource usage lower bound for multi-tiered discounts. Currently unsupported as only single-tiered discounts are supported.
	From *int32 `json:"from"`

	// Resource usage upper bound for multi-tiered discounts. Currently unsupported as only single-tiered discounts are supported.
	To *int32 `json:"to"`

	// - TYPE_FIXED: Specifies a fixed price discount. If set, the price will be overridden with the value of the discount. For example if the public price is $3 and the discount is "1" ($1), the final price will
	// be $1.
	//  - TYPE_PERCENTAGE: Specifies a percentage discount. If set, the price will be reduced by the percentage value. For example if the public price is $5 and the discount value is "0.1" (10%), the final price will be
	// $4.
	Type  *CastaiInventoryV1beta1DiscountPricingType `json:"type,omitempty"`
	Value *string                                    `json:"value,omitempty"`
}

// - TYPE_FIXED: Specifies a fixed price discount. If set, the price will be overridden with the value of the discount. For example if the public price is $3 and the discount is "1" ($1), the final price will
// be $1.
//   - TYPE_PERCENTAGE: Specifies a percentage discount. If set, the price will be reduced by the percentage value. For example if the public price is $5 and the discount value is "0.1" (10%), the final price will be
//
// $4.
type CastaiInventoryV1beta1DiscountPricingType string

// CastaiInventoryV1beta1GCPCommitmentImport defines model for castai.inventory.v1beta1.GCPCommitmentImport.
type CastaiInventoryV1beta1GCPCommitmentImport struct {
	AutoRenew         *bool                                `json:"autoRenew,omitempty"`
	Category          *string                              `json:"category,omitempty"`
	CreationTimestamp *string                              `json:"creationTimestamp,omitempty"`
	Description       *string                              `json:"description,omitempty"`
	EndTimestamp      *string                              `json:"endTimestamp,omitempty"`
	Id                *string                              `json:"id,omitempty"`
	Kind              *string                              `json:"kind,omitempty"`
	Name              *string                              `json:"name,omitempty"`
	Plan              *string                              `json:"plan,omitempty"`
	Region            *string                              `json:"region,omitempty"`
	Resources         *[]CastaiInventoryV1beta1GCPResource `json:"resources,omitempty"`
	SelfLink          *string                              `json:"selfLink,omitempty"`
	StartTimestamp    *string                              `json:"startTimestamp,omitempty"`
	Status            *string                              `json:"status,omitempty"`
	StatusMessage     *string                              `json:"statusMessage,omitempty"`
	Type              *string                              `json:"type,omitempty"`
}

// CastaiInventoryV1beta1GCPResource defines model for castai.inventory.v1beta1.GCPResource.
type CastaiInventoryV1beta1GCPResource struct {
	Amount *string `json:"amount,omitempty"`
	Type   *string `json:"type,omitempty"`
}

// CastaiInventoryV1beta1GCPResourceCUD defines model for castai.inventory.v1beta1.GCPResourceCUD.
type CastaiInventoryV1beta1GCPResourceCUD struct {
	Cpu                *string                                       `json:"cpu,omitempty"`
	CudId              *string                                       `json:"cudId,omitempty"`
	InstanceTypesUsage *CastaiInventoryV1beta1InstanceTypeBasedUsage `json:"instanceTypesUsage,omitempty"`
	MemoryMb           *string                                       `json:"memoryMb,omitempty"`

	// - TWELVE_MONTH: 1 year commitment plan
	//  - THIRTY_SIX_MONTH: 3 year commitment plan
	Plan   *CastaiInventoryV1beta1GCPResourceCUDCUDPlan `json:"plan,omitempty"`
	Price  *CastaiInventoryV1beta1GCPResourceCUDPrice   `json:"price,omitempty"`
	Status *string                                      `json:"status,omitempty"`
	Type   *string                                      `json:"type,omitempty"`
}

// - TWELVE_MONTH: 1 year commitment plan
//   - THIRTY_SIX_MONTH: 3 year commitment plan
type CastaiInventoryV1beta1GCPResourceCUDCUDPlan string

// CastaiInventoryV1beta1GCPResourceCUDPrice defines model for castai.inventory.v1beta1.GCPResourceCUDPrice.
type CastaiInventoryV1beta1GCPResourceCUDPrice struct {
	Cpu      *string `json:"cpu,omitempty"`
	MemoryGb *string `json:"memoryGb,omitempty"`
}

// CastaiInventoryV1beta1GPUDevice defines model for castai.inventory.v1beta1.GPUDevice.
type CastaiInventoryV1beta1GPUDevice struct {
	BlacklistedAt *time.Time `json:"blacklistedAt,omitempty"`
	Count         *int32     `json:"count,omitempty"`

	// - UNKNOWN: UNKNOWN is invalid.
	//  - NVIDIA: NVIDIA.
	//  - AMD: AMD.
	Manufacturer *CastaiInventoryV1beta1GPUDeviceManufacturer `json:"manufacturer,omitempty"`
	MemoryMib    *int32                                       `json:"memoryMib,omitempty"`
	Name         *string                                      `json:"name,omitempty"`

	// Price per GPU per hour.
	PriceHourly *string `json:"priceHourly,omitempty"`
}

// - UNKNOWN: UNKNOWN is invalid.
//   - NVIDIA: NVIDIA.
//   - AMD: AMD.
type CastaiInventoryV1beta1GPUDeviceManufacturer string

// CastaiInventoryV1beta1GPUInfo defines model for castai.inventory.v1beta1.GPUInfo.
type CastaiInventoryV1beta1GPUInfo struct {
	GpuDevices *[]CastaiInventoryV1beta1GPUDevice `json:"gpuDevices,omitempty"`
}

// CastaiInventoryV1beta1GenericReservation defines model for castai.inventory.v1beta1.GenericReservation.
type CastaiInventoryV1beta1GenericReservation struct {
	Count                 *int32     `json:"count"`
	DeepLinkToReservation *string    `json:"deepLinkToReservation"`
	EndDate               *time.Time `json:"endDate"`
	ExpirationDate        *time.Time `json:"expirationDate"`
	InstanceType          *string    `json:"instanceType"`
	Name                  *string    `json:"name,omitempty"`
	Price                 *string    `json:"price"`
	ProductName           *string    `json:"productName"`
	Provider              *string    `json:"provider"`
	PurchaseDate          *time.Time `json:"purchaseDate"`
	Quantity              *int32     `json:"quantity"`
	Region                *string    `json:"region,omitempty"`
	StartDate             *time.Time `json:"startDate"`
	Type                  *string    `json:"type"`
	ZoneId                *string    `json:"zoneId"`
	ZoneName              *string    `json:"zoneName"`
}

// CastaiInventoryV1beta1GenericReservationsList defines model for castai.inventory.v1beta1.GenericReservationsList.
type CastaiInventoryV1beta1GenericReservationsList struct {
	Items *[]CastaiInventoryV1beta1GenericReservation `json:"items,omitempty"`
}

// CastaiInventoryV1beta1GetCommitmentAssignmentsResponse defines model for castai.inventory.v1beta1.GetCommitmentAssignmentsResponse.
type CastaiInventoryV1beta1GetCommitmentAssignmentsResponse struct {
	Assignments *[]CastaiInventoryV1beta1CommitmentAssignment `json:"assignments,omitempty"`
}

// CastaiInventoryV1beta1GetCommitmentResponse defines model for castai.inventory.v1beta1.GetCommitmentResponse.
type CastaiInventoryV1beta1GetCommitmentResponse struct {
	Commitment *CastaiInventoryV1beta1Commitment `json:"commitment,omitempty"`
}

// CastaiInventoryV1beta1GetCommitmentsAssignmentsResponse defines model for castai.inventory.v1beta1.GetCommitmentsAssignmentsResponse.
type CastaiInventoryV1beta1GetCommitmentsAssignmentsResponse struct {
	CommitmentsAssignments *[]CastaiInventoryV1beta1CommitmentAssignment `json:"commitmentsAssignments,omitempty"`
}

// CastaiInventoryV1beta1GetCommitmentsResponse defines model for castai.inventory.v1beta1.GetCommitmentsResponse.
type CastaiInventoryV1beta1GetCommitmentsResponse struct {
	Commitments *[]CastaiInventoryV1beta1Commitment `json:"commitments,omitempty"`
}

// CastaiInventoryV1beta1GetGCPCommitmentsImportScriptResponse defines model for castai.inventory.v1beta1.GetGCPCommitmentsImportScriptResponse.
type CastaiInventoryV1beta1GetGCPCommitmentsImportScriptResponse struct {
	Script *string `json:"script,omitempty"`
}

// CastaiInventoryV1beta1GetOrganizationReservationsBalanceResponse defines model for castai.inventory.v1beta1.GetOrganizationReservationsBalanceResponse.
type CastaiInventoryV1beta1GetOrganizationReservationsBalanceResponse struct {
	Reservations *[]CastaiInventoryV1beta1ReservationBalanceV2 `json:"reservations,omitempty"`
}

// CastaiInventoryV1beta1GetOrganizationResourceUsageResponse defines model for castai.inventory.v1beta1.GetOrganizationResourceUsageResponse.
type CastaiInventoryV1beta1GetOrganizationResourceUsageResponse struct {
	InstanceTypes *[]CastaiInventoryV1beta1InstanceTypeAggregate `json:"instanceTypes,omitempty"`
}

// CastaiInventoryV1beta1GetReservationsBalanceResponse defines model for castai.inventory.v1beta1.GetReservationsBalanceResponse.
type CastaiInventoryV1beta1GetReservationsBalanceResponse struct {
	Reservations *[]CastaiInventoryV1beta1ReservationBalance `json:"reservations,omitempty"`
}

// CastaiInventoryV1beta1GetReservationsResponse defines model for castai.inventory.v1beta1.GetReservationsResponse.
type CastaiInventoryV1beta1GetReservationsResponse struct {
	Reservations *[]CastaiInventoryV1beta1ReservationDetails `json:"reservations,omitempty"`
}

// CastaiInventoryV1beta1InstanceReliability defines model for castai.inventory.v1beta1.InstanceReliability.
type CastaiInventoryV1beta1InstanceReliability struct {
	SpotReclaimRateHigh *string `json:"spotReclaimRateHigh,omitempty"`
	SpotReclaimRateLow  *string `json:"spotReclaimRateLow,omitempty"`
}

// InstanceType is a cloud service provider specific VM type with basic data.
type CastaiInventoryV1beta1InstanceType struct {
	// Specifies the applied discounts on the instance type.
	AppliedDiscounts *[]CastaiInventoryV1beta1AppliedDiscount `json:"appliedDiscounts,omitempty"`
	Architecture     *string                                  `json:"architecture,omitempty"`

	// Contains a list of possible attachable disk types for the given instance types. Currently supported for GCP only.
	AttachableDisks  *[]CastaiInventoryV1beta1AttachableDisk         `json:"attachableDisks,omitempty"`
	Availability     *CastaiInventoryV1beta1InstanceTypeAvailability `json:"availability,omitempty"`
	BareMetal        *bool                                           `json:"bareMetal,omitempty"`
	Burstable        *bool                                           `json:"burstable,omitempty"`
	CastChoice       *bool                                           `json:"castChoice,omitempty"`
	ComputeOptimized *bool                                           `json:"computeOptimized,omitempty"`

	// Describes the manufacturers of the CPUs the instance type can be equipped with.
	CpuManufacturers *[]CastaiInventoryV1beta1InstanceTypeCPUManufacturer `json:"cpuManufacturers,omitempty"`

	// CPU base price of the instance type. $/CPU hour.
	CpuPrice *string `json:"cpuPrice,omitempty"`

	// CreatedAt is the timestamp of the creation of this instance type object.
	CreatedAt      *time.Time                     `json:"createdAt,omitempty"`
	CustomInstance *bool                          `json:"customInstance,omitempty"`
	GpuInfo        *CastaiInventoryV1beta1GPUInfo `json:"gpuInfo,omitempty"`

	// ID of the instance type.
	Id *string `json:"id,omitempty"`

	// InstanceType name. This value is provider specific.
	InstanceType *string `json:"instanceType,omitempty"`

	// Describes the network settings for the instance type.
	NetworkInfo *CastaiInventoryV1beta1NetworkInfo `json:"networkInfo,omitempty"`
	Obsolete    *bool                              `json:"obsolete,omitempty"`
	Os          *string                            `json:"os,omitempty"`

	// Price of the instance type. $/hour.
	Price *string `json:"price,omitempty"`

	// Provider name of the instance type.
	Provider *string `json:"provider,omitempty"`

	// Ram (in MiB) available on the instance type.
	Ram *string `json:"ram,omitempty"`

	// RAM base price of the instance type. $/GiB hour.
	RamPrice *string `json:"ramPrice,omitempty"`

	// Region of the instance type. This value is provider specific.
	Region          *string                                    `json:"region,omitempty"`
	SpotReliability *CastaiInventoryV1beta1InstanceReliability `json:"spotReliability,omitempty"`

	// StorageInfo describes the available local volumes for an instance type.
	StorageInfo *CastaiInventoryV1beta1StorageInfo `json:"storageInfo,omitempty"`

	// UpdatedAt is the timestamp of the last update operation on this instance type object.
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`

	// Vcpu available on the instance type.
	Vcpu  *string                               `json:"vcpu,omitempty"`
	Zones *[]CastaiInventoryV1beta1InstanceZone `json:"zones,omitempty"`
}

// CastaiInventoryV1beta1InstanceTypeCPUManufacturer defines model for castai.inventory.v1beta1.InstanceType.CPUManufacturer.
type CastaiInventoryV1beta1InstanceTypeCPUManufacturer string

// CastaiInventoryV1beta1InstanceTypeAggregate defines model for castai.inventory.v1beta1.InstanceTypeAggregate.
type CastaiInventoryV1beta1InstanceTypeAggregate struct {
	// Availability zone ID of the instance type.
	AzId      *string `json:"azId,omitempty"`
	ClusterId *string `json:"clusterId,omitempty"`
	Count     *int32  `json:"count,omitempty"`

	// InstanceType name. This value is provider specific.
	InstanceType *string `json:"instanceType,omitempty"`

	// NodeIds of nodes that are using this instance type
	// Deprecated: Use nodes instead.
	NodeIds *[]string                          `json:"nodeIds,omitempty"`
	Nodes   *[]CastaiInventoryV1beta1NodeUsage `json:"nodes,omitempty"`

	// Price of the instance type. $/hour.
	Price *string `json:"price,omitempty"`

	// Provider name of the instance type.
	Provider *string `json:"provider,omitempty"`

	// Ram (in MiB) available on the instance type.
	Ram *string `json:"ram,omitempty"`

	// Region of the instance type. This value is provider specific.
	Region *string `json:"region,omitempty"`

	// Spot defines if the instance type is a spot instance.
	Spot              *bool                                    `json:"spot,omitempty"`
	UsageDistribution *CastaiInventoryV1beta1UsageDistribution `json:"usageDistribution,omitempty"`

	// Vcpu available on the instance type.
	Vcpu *string `json:"vcpu,omitempty"`
}

// CastaiInventoryV1beta1InstanceTypeAvailability defines model for castai.inventory.v1beta1.InstanceTypeAvailability.
type CastaiInventoryV1beta1InstanceTypeAvailability struct {
	// Type of the instance type availability.
	Type *CastaiInventoryV1beta1InstanceTypeAvailabilityType `json:"type,omitempty"`
}

// Type of the instance type availability.
type CastaiInventoryV1beta1InstanceTypeAvailabilityType string

// CastaiInventoryV1beta1InstanceTypeBasedUsage defines model for castai.inventory.v1beta1.InstanceTypeBasedUsage.
type CastaiInventoryV1beta1InstanceTypeBasedUsage struct {
	Clusters          *[]CastaiInventoryV1beta1ClusterAggregatedUsage `json:"clusters,omitempty"`
	InstanceTypes     *[]CastaiInventoryV1beta1InstanceTypeAggregate  `json:"instanceTypes,omitempty"`
	Usage             *float64                                        `json:"usage"`
	UsageDistribution *CastaiInventoryV1beta1UsageDistribution        `json:"usageDistribution,omitempty"`
}

// CastaiInventoryV1beta1InstanceZone defines model for castai.inventory.v1beta1.InstanceZone.
type CastaiInventoryV1beta1InstanceZone struct {
	// Specifies the applied discounts on the instance zone.
	AppliedDiscounts     *[]CastaiInventoryV1beta1AppliedDiscount     `json:"appliedDiscounts,omitempty"`
	AttachableGpuDevices *[]CastaiInventoryV1beta1AttachableGPUDevice `json:"attachableGpuDevices,omitempty"`
	AttachedGpuDevices   *[]CastaiInventoryV1beta1GPUDevice           `json:"attachedGpuDevices,omitempty"`
	AzId                 *string                                      `json:"azId,omitempty"`

	// Describes the CPU platforms the instance type can be equipped with.
	CpuPlatforms      *[]CastaiInventoryV1beta1CPUPlatform `json:"cpuPlatforms,omitempty"`
	CpuPrice          *string                              `json:"cpuPrice,omitempty"`
	LastUnavailableAt *time.Time                           `json:"lastUnavailableAt,omitempty"`
	Price             *string                              `json:"price,omitempty"`
	RamPrice          *string                              `json:"ramPrice,omitempty"`
	Spot              *bool                                `json:"spot,omitempty"`
	Unavailable       *bool                                `json:"unavailable,omitempty"`
}

// CastaiInventoryV1beta1ListRegionsResponse defines model for castai.inventory.v1beta1.ListRegionsResponse.
type CastaiInventoryV1beta1ListRegionsResponse struct {
	NextPageToken *string                         `json:"nextPageToken,omitempty"`
	Regions       *[]CastaiInventoryV1beta1Region `json:"regions,omitempty"`
}

// CastaiInventoryV1beta1ListZonesResponse defines model for castai.inventory.v1beta1.ListZonesResponse.
type CastaiInventoryV1beta1ListZonesResponse struct {
	NextPageToken *string                       `json:"nextPageToken,omitempty"`
	Zones         *[]CastaiInventoryV1beta1Zone `json:"zones,omitempty"`
}

// Describes the network settings for the instance type.
type CastaiInventoryV1beta1NetworkInfo struct {
	// Base bandwidth in Mbps.
	BaseBandwidthMbps *int32 `json:"baseBandwidthMbps,omitempty"`

	// Burst bandwidth in Mbps. It's equal to base bandwidth if not specified.
	BurstBandwidthMbps *int32 `json:"burstBandwidthMbps,omitempty"`

	// Indicates if the AWS instance type supports EFA (Elastic Fabric Adapter).
	EfaSupported *bool `json:"efaSupported,omitempty"`

	// The maximum number of IPv4 addresses per network interface.
	Ipv4AddressesPerInterface *int32 `json:"ipv4AddressesPerInterface,omitempty"`

	// The maximum number of network interfaces for the instance type.
	MaximumNetworkInterfaces *int32 `json:"maximumNetworkInterfaces,omitempty"`
}

// CastaiInventoryV1beta1NodeUsage defines model for castai.inventory.v1beta1.NodeUsage.
type CastaiInventoryV1beta1NodeUsage struct {
	NodeId            *string                                  `json:"nodeId,omitempty"`
	UsageDistribution *CastaiInventoryV1beta1UsageDistribution `json:"usageDistribution,omitempty"`
}

// CastaiInventoryV1beta1OverwriteReservationsResponse defines model for castai.inventory.v1beta1.OverwriteReservationsResponse.
type CastaiInventoryV1beta1OverwriteReservationsResponse struct {
	Reservations *[]CastaiInventoryV1beta1ReservationDetails `json:"reservations,omitempty"`
}

// CastaiInventoryV1beta1Region defines model for castai.inventory.v1beta1.Region.
type CastaiInventoryV1beta1Region struct {
	Category           *string                             `json:"category,omitempty"`
	CreateTime         *time.Time                          `json:"createTime,omitempty"`
	Csp                *string                             `json:"csp,omitempty"`
	DisplayName        *string                             `json:"displayName,omitempty"`
	Id                 *string                             `json:"id,omitempty"`
	Name               *string                             `json:"name,omitempty"`
	UnavailabilityTime *time.Time                          `json:"unavailabilityTime"`
	UpdateTime         *time.Time                          `json:"updateTime,omitempty"`
	Zones              *[]CastaiInventoryV1beta1RegionZone `json:"zones,omitempty"`
}

// CastaiInventoryV1beta1RegionZone defines model for castai.inventory.v1beta1.Region.Zone.
type CastaiInventoryV1beta1RegionZone struct {
	CreateTime         *time.Time `json:"createTime,omitempty"`
	Id                 *string    `json:"id,omitempty"`
	Name               *string    `json:"name,omitempty"`
	UnavailabilityTime *time.Time `json:"unavailabilityTime"`
	UpdateTime         *time.Time `json:"updateTime,omitempty"`
	ZoneId             *string    `json:"zoneId,omitempty"`
}

// CastaiInventoryV1beta1ReplaceCommitmentAssignmentsResponse defines model for castai.inventory.v1beta1.ReplaceCommitmentAssignmentsResponse.
type CastaiInventoryV1beta1ReplaceCommitmentAssignmentsResponse struct {
	Assignments *[]CastaiInventoryV1beta1CommitmentAssignment `json:"assignments,omitempty"`
}

// CastaiInventoryV1beta1ReservationBalance defines model for castai.inventory.v1beta1.ReservationBalance.
type CastaiInventoryV1beta1ReservationBalance struct {
	InstanceTypes *[]CastaiInventoryV1beta1CountableInstanceType `json:"instanceTypes,omitempty"`
	Reservation   *CastaiInventoryV1beta1ReservationDetails      `json:"reservation,omitempty"`
	Usage         *float64                                       `json:"usage,omitempty"`
}

// CastaiInventoryV1beta1ReservationBalanceV2 defines model for castai.inventory.v1beta1.ReservationBalanceV2.
type CastaiInventoryV1beta1ReservationBalanceV2 struct {
	InstanceTypes *[]CastaiInventoryV1beta1InstanceTypeAggregate `json:"instanceTypes,omitempty"`
	Reservation   *CastaiInventoryV1beta1ReservationDetails      `json:"reservation,omitempty"`
	Usage         *float64                                       `json:"usage,omitempty"`
}

// CastaiInventoryV1beta1ReservationDetails defines model for castai.inventory.v1beta1.ReservationDetails.
type CastaiInventoryV1beta1ReservationDetails struct {
	Count         *int32     `json:"count,omitempty"`
	Cpu           *string    `json:"cpu,omitempty"`
	CreatedAt     *time.Time `json:"createdAt,omitempty"`
	EndDate       *time.Time `json:"endDate"`
	InstanceType  *string    `json:"instanceType,omitempty"`
	Name          *string    `json:"name,omitempty"`
	Price         *string    `json:"price,omitempty"`
	Provider      *string    `json:"provider,omitempty"`
	RamMib        *string    `json:"ramMib,omitempty"`
	Region        *string    `json:"region,omitempty"`
	ReservationId *string    `json:"reservationId,omitempty"`
	StartDate     *time.Time `json:"startDate,omitempty"`
	UpdatedAt     *time.Time `json:"updatedAt,omitempty"`
	ZoneId        *string    `json:"zoneId"`
	ZoneName      *string    `json:"zoneName"`
}

// StorageDriver is the type of driver used for the local storage volume interface and CPU communication.
//
//   - invalid: Invalid is invalid.
//   - nvme: NVMe driver is designed specifically for SSD drives and could be considered "optimized" for SSD usage.
//   - sata: SATA driver is designed for HDD drives with spinning technology but also supports SSD drives.
type CastaiInventoryV1beta1StorageDriver string

// StorageInfo describes the available local volumes for an instance type.
type CastaiInventoryV1beta1StorageInfo struct {
	// List of local storage devices available on the instance type.
	Devices *[]CastaiInventoryV1beta1StorageInfoDevice `json:"devices,omitempty"`

	// StorageDriver is the type of driver used for the local storage volume interface and CPU communication.
	//
	//  - invalid: Invalid is invalid.
	//  - nvme: NVMe driver is designed specifically for SSD drives and could be considered "optimized" for SSD usage.
	//  - sata: SATA driver is designed for HDD drives with spinning technology but also supports SSD drives.
	Driver *CastaiInventoryV1beta1StorageDriver `json:"driver,omitempty"`

	// TotalSizeGiB is a sum of all storage devices' size.
	TotalSizeGib *int32 `json:"totalSizeGib,omitempty"`
}

// Device is a local storage block device available on the instance type.
type CastaiInventoryV1beta1StorageInfoDevice struct {
	// The size in GiB.
	SizeGib *int32 `json:"sizeGib,omitempty"`

	// Type is the technology used for the local storage device.
	//
	//  - invalid: Invalid is invalid.
	//  - ssd: SSD.
	//  - hdd: HDD.
	Type *CastaiInventoryV1beta1StorageInfoDeviceType `json:"type,omitempty"`
}

// Type is the technology used for the local storage device.
//
//   - invalid: Invalid is invalid.
//   - ssd: SSD.
//   - hdd: HDD.
type CastaiInventoryV1beta1StorageInfoDeviceType string

// CastaiInventoryV1beta1UpdateCommitmentInput defines model for castai.inventory.v1beta1.UpdateCommitmentInput.
type CastaiInventoryV1beta1UpdateCommitmentInput struct {
	// Allowed usage specifies the part of the commitment that is allowed to be used. 1.0 means 100% of the commitment. Currently it's only supported for GCP CUDs.
	AllowedUsage   *float32 `json:"allowedUsage"`
	Prioritization *bool    `json:"prioritization"`

	// Scaling strategy specifies how to use commitment by autoscaler.
	//
	//  - Default: If some commitment resource is utilised fully, only part of instance type can be covered by this commitment.
	// In some cases not using commitment will be cheaper and cheaper option will be chosen by autoscaler.
	//  - CPUBased: Aim to use as much CPU from commitment as possible. Even if instance is partially covered and cheaper option is available.
	//  - RamBased: Aim to use as much RAM from commitment as possible. Even if instance is partially covered and cheaper option is available.
	ScalingStrategy *CastaiInventoryV1beta1CommitmentScalingStrategy `json:"scalingStrategy,omitempty"`

	// - Inactive: Inactive commitment
	//  - Active: Active commitment
	Status *CastaiInventoryV1beta1CommitmentStatus `json:"status,omitempty"`
}

// CastaiInventoryV1beta1UpdateCommitmentResponse defines model for castai.inventory.v1beta1.UpdateCommitmentResponse.
type CastaiInventoryV1beta1UpdateCommitmentResponse struct {
	Commitments *CastaiInventoryV1beta1Commitment `json:"commitments,omitempty"`
}

// CastaiInventoryV1beta1UsageDistribution defines model for castai.inventory.v1beta1.UsageDistribution.
type CastaiInventoryV1beta1UsageDistribution struct {
	Cpu    *float64 `json:"cpu,omitempty"`
	Memory *float64 `json:"memory,omitempty"`
}

// CastaiInventoryV1beta1Zone defines model for castai.inventory.v1beta1.Zone.
type CastaiInventoryV1beta1Zone struct {
	CreateTime         *time.Time `json:"createTime,omitempty"`
	Id                 *string    `json:"id,omitempty"`
	Name               *string    `json:"name,omitempty"`
	Region             *string    `json:"region,omitempty"`
	UnavailabilityTime *time.Time `json:"unavailabilityTime"`
	UpdateTime         *time.Time `json:"updateTime,omitempty"`
	ZoneId             *string    `json:"zoneId,omitempty"`
}

// Operation object.
type CastaiOperationsV1beta1Operation struct {
	// Operation creation timestamp in RFC3339Nano format.
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// Indicates whether the operation has finished or not. If 'false', the operation is still in progress. If 'true',
	// the has finished.
	Done *bool `json:"done,omitempty"`

	// OperationError object.
	Error *CastaiOperationsV1beta1OperationError `json:"error,omitempty"`

	// Operation finish timestamp in RFC3339Nano format.
	FinishedAt *time.Time `json:"finishedAt,omitempty"`

	// ID of the operation.
	Id *string `json:"id,omitempty"`
}

// OperationError object.
type CastaiOperationsV1beta1OperationError struct {
	// Details is a concise human readable explanation for the error.
	Details *string `json:"details,omitempty"`

	// Reason is an operation specific failure code. Refer to documentation about possible outcomes.
	Reason *string `json:"reason,omitempty"`
}

// AzureAAD represents a Azure AAD connector.
type CastaiSsoV1beta1AzureAAD struct {
	// ADDomain is the domain of the Azure AD.
	AdDomain string `json:"adDomain"`

	// ClientId is the client id of the Azure AD.
	ClientId string `json:"clientId"`

	// ClientSecret is the client secret of the Azure AD.
	ClientSecret *string `json:"clientSecret,omitempty"`
}

// CreateSSOConnection represents a sso connection creation request.
type CastaiSsoV1beta1CreateSSOConnection struct {
	// AzureAAD represents a Azure AAD connector.
	Aad *CastaiSsoV1beta1AzureAAD `json:"aad,omitempty"`

	// Additional list of email domains assigned to SSO connection.
	AdditionalEmailDomains *[]string `json:"additionalEmailDomains,omitempty"`

	// EmailDomain is the email domain of the connection.
	EmailDomain string `json:"emailDomain"`

	// Name is the name of the connection.
	Name string `json:"name"`

	// OIDC represents a OIDC connector.
	Oidc *CastaiSsoV1beta1OIDC `json:"oidc,omitempty"`

	// Okta represents a Okta connector.
	Okta *CastaiSsoV1beta1Okta `json:"okta,omitempty"`
}

// Defines the container for the sso delete response.
type CastaiSsoV1beta1DeleteSSOConnectionResponse = map[string]interface{}

// Defines the container for the sso list response.
type CastaiSsoV1beta1ListSSOConnectionsResponse struct {
	Connections []CastaiSsoV1beta1SSOConnection `json:"connections"`
}

// OIDC represents a OIDC connector.
type CastaiSsoV1beta1OIDC struct {
	// ClientId is the client id of the OIDC.
	ClientId string `json:"clientId"`

	// ClientSecret is the client secret when using back_channel type of connection.
	ClientSecret *string `json:"clientSecret"`

	// IssuerUrl is the URL of the discovery document of the OpenID Connect provider you want to connect with.
	IssuerUrl string `json:"issuerUrl"`

	// Type is the type of the OIDC connection.
	//
	//  - TYPE_UNKNOWN: TypeUknown is the default status.
	//  - TYPE_BACK_CHANNEL: TypeBackChannel is the back channel type of OIDC connection.
	//  - TYPE_FRONT_CHANNEL: TypeFrontChannel is the front channel type of OIDC connection.
	Type CastaiSsoV1beta1OIDCType `json:"type"`
}

// Type is the type of the OIDC connection.
//
//   - TYPE_UNKNOWN: TypeUknown is the default status.
//   - TYPE_BACK_CHANNEL: TypeBackChannel is the back channel type of OIDC connection.
//   - TYPE_FRONT_CHANNEL: TypeFrontChannel is the front channel type of OIDC connection.
type CastaiSsoV1beta1OIDCType string

// Okta represents a Okta connector.
type CastaiSsoV1beta1Okta struct {
	// ClientId is the client id of the Okta.
	ClientId string `json:"clientId"`

	// ClientSecret is the client secret of the Okta.
	ClientSecret *string `json:"clientSecret,omitempty"`

	// OktaDomain is the domain of the Okta.
	OktaDomain string `json:"oktaDomain"`
}

// SSOConnection represents a sso connection.
type CastaiSsoV1beta1SSOConnection struct {
	// AzureAAD represents a Azure AAD connector.
	Aad                    *CastaiSsoV1beta1AzureAAD `json:"aad,omitempty"`
	AdditionalEmailDomains *[]string                 `json:"additionalEmailDomains,omitempty"`

	// CreatedAt is the time when the connection was created.
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// EmailDomain is the email domain of the connection.
	EmailDomain string `json:"emailDomain"`

	// Error is the error message of the connection.
	Error *string `json:"error,omitempty"`

	// Id is the unique identifier of the connection.
	Id *string `json:"id,omitempty"`

	// Name is the name of the connection.
	Name string `json:"name"`

	// OIDC represents a OIDC connector.
	Oidc *CastaiSsoV1beta1OIDC `json:"oidc,omitempty"`

	// Okta represents a Okta connector.
	Okta *CastaiSsoV1beta1Okta `json:"okta,omitempty"`

	// Status is the status of the connection.
	//
	//  - STATUS_UNKNOWN: StatusUnknown is the default status.
	//  - STATUS_ACTIVE: StatusActive is the active status.
	//  - STATUS_INACTIVE: StatusInactive is the inactive status.
	//  - STATUS_FAILED: StatusFailed is the failed status.
	Status *CastaiSsoV1beta1SSOConnectionStatus `json:"status,omitempty"`

	// UpdatedAt is the time when the connection was last updated.
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// Status is the status of the connection.
//
//   - STATUS_UNKNOWN: StatusUnknown is the default status.
//   - STATUS_ACTIVE: StatusActive is the active status.
//   - STATUS_INACTIVE: StatusInactive is the inactive status.
//   - STATUS_FAILED: StatusFailed is the failed status.
type CastaiSsoV1beta1SSOConnectionStatus string

// SSOConnection represents a sso connection.
type CastaiSsoV1beta1UpdateSSOConnection struct {
	// AzureAAD represents a Azure AAD connector.
	Aad *CastaiSsoV1beta1AzureAAD `json:"aad,omitempty"`

	// Additional list of email domains assigned to SSO connection.
	AdditionalEmailDomains *[]string `json:"additionalEmailDomains,omitempty"`

	// EmailDomain is the email domain of the connection.
	EmailDomain *string `json:"emailDomain,omitempty"`

	// Name is the name of the connection.
	Name *string `json:"name,omitempty"`

	// OIDC represents a OIDC connector.
	Oidc *CastaiSsoV1beta1OIDC `json:"oidc,omitempty"`

	// Okta represents a Okta connector.
	Okta *CastaiSsoV1beta1Okta `json:"okta,omitempty"`
}

// Defines the response for adding a user to an organization.
type CastaiUsersV1beta1AddUserToOrganizationResponse = map[string]interface{}

// CastaiUsersV1beta1ClaimInvitationResponse defines model for castai.users.v1beta1.ClaimInvitationResponse.
type CastaiUsersV1beta1ClaimInvitationResponse struct {
	// Membership describes user-organization membership details.
	Membership *CastaiUsersV1beta1Membership `json:"membership,omitempty"`

	// Organization ID.
	OrganizationId string `json:"organizationId"`
}

// CastaiUsersV1beta1CreateInvitationsRequest defines model for castai.users.v1beta1.CreateInvitationsRequest.
type CastaiUsersV1beta1CreateInvitationsRequest struct {
	// Memberships to create.
	Members *[]CastaiUsersV1beta1NewMembershipByEmail `json:"members,omitempty"`
}

// CastaiUsersV1beta1CreateInvitationsResponse defines model for castai.users.v1beta1.CreateInvitationsResponse.
type CastaiUsersV1beta1CreateInvitationsResponse struct {
	// Invitation IDs.
	InvitationIds *[]string `json:"invitationIds,omitempty"`
}

// CastaiUsersV1beta1CurrentUserProfileResponse defines model for castai.users.v1beta1.CurrentUserProfileResponse.
type CastaiUsersV1beta1CurrentUserProfileResponse struct {
	// User email.
	Email *string `json:"email,omitempty"`

	// User first login.
	FirstLogin *bool `json:"firstLogin,omitempty"`

	// HasHubspotContact is true if user has Hubspot contact form submitted.
	HasHubspotContact *bool `json:"hasHubspotContact,omitempty"`

	// User ID.
	Id *string `json:"id,omitempty"`

	// User name.
	Name *string `json:"name,omitempty"`

	// User username.
	Username *string `json:"username,omitempty"`
}

// Defines the empty response to invitation deletion.
type CastaiUsersV1beta1DeleteInvitationResponse = map[string]interface{}

// Defines the empty response to organization deletion.
type CastaiUsersV1beta1DeleteOrganizationResponse = map[string]interface{}

// CastaiUsersV1beta1GroupRef defines model for castai.users.v1beta1.GroupRef.
type CastaiUsersV1beta1GroupRef struct {
	Id   string `json:"id"`
	Name string `json:"name"`
}

// Defines container for the organization's pending invitations.
type CastaiUsersV1beta1ListInvitationsResponse struct {
	// Array of organization's pending invitations.
	Invitations []CastaiUsersV1beta1PendingInvitation `json:"invitations"`
	NextCursor  string                                `json:"nextCursor"`
}

// Defines the container for organization users.
type CastaiUsersV1beta1ListOrganizationUsersResponse struct {
	// Array of organization users.
	Users *[]CastaiUsersV1beta1Membership `json:"users,omitempty"`
}

// Defines container for the user's organizations.
type CastaiUsersV1beta1ListOrganizationsResponse struct {
	// Array of user's organizations.
	Organizations []CastaiUsersV1beta1UserOrganization `json:"organizations"`
}

// Membership describes user-organization membership details.
type CastaiUsersV1beta1Membership struct {
	CreatedAt *time.Time                    `json:"createdAt,omitempty"`
	Groups    *[]CastaiUsersV1beta1GroupRef `json:"groups,omitempty"`
	LoginAt   *time.Time                    `json:"loginAt,omitempty"`
	Role      string                        `json:"role"`

	// User represents a single system user.
	User CastaiUsersV1beta1User `json:"user"`
}

// NewMembership contains data needed to create new membership in organization.
type CastaiUsersV1beta1NewMembership struct {
	// role of the new member.
	Role string `json:"role"`

	// id of the user.
	UserId string `json:"userId"`
}

// CastaiUsersV1beta1NewMembershipByEmail defines model for castai.users.v1beta1.NewMembershipByEmail.
type CastaiUsersV1beta1NewMembershipByEmail struct {
	// list of the group IDs for which new user should be added.
	GroupIds *[]string `json:"groupIds,omitempty"`

	// role of the invited person.
	Role *string `json:"role,omitempty"`

	// string roleID.
	RoleId *string `json:"roleId,omitempty"`

	// email of the invited person.
	UserEmail string `json:"userEmail"`
}

// Organization which is the top level tenant in our system.
type CastaiUsersV1beta1Organization struct {
	// billing type of the organization.
	BillingType *string `json:"billingType,omitempty"`

	// organization creation date.
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// id of the organization.
	Id *string `json:"id,omitempty"`

	// OrganizationMetadata describes organization metadata.
	Metadata *CastaiUsersV1beta1OrganizationMetadata `json:"metadata,omitempty"`

	// name of the organization.
	Name string `json:"name"`
}

// OrganizationMetadata describes organization metadata.
type CastaiUsersV1beta1OrganizationMetadata struct {
	// parent organization id.
	ParentOrganizationId *string `json:"parentOrganizationId"`

	// partner tenant id on partner system.
	PartnerTenantId *string `json:"partnerTenantId"`
}

// CastaiUsersV1beta1PendingInvitation defines model for castai.users.v1beta1.PendingInvitation.
type CastaiUsersV1beta1PendingInvitation struct {
	// id of the invitation.
	Id *string `json:"id,omitempty"`

	// email of the invited person.
	InviteEmail string `json:"inviteEmail"`

	// role of the invited person.
	Role string `json:"role"`

	// role_id is the role ID of the invited person.
	RoleId *string `json:"roleId,omitempty"`

	// invitation expiration date.
	ValidUntil *time.Time `json:"validUntil,omitempty"`
}

// Defines the response for removing users from an organization.
type CastaiUsersV1beta1RemoveOrganizationUsersResponse = map[string]interface{}

// Defines the response for removing a user from an organization.
type CastaiUsersV1beta1RemoveUserFromOrganizationResponse = map[string]interface{}

// CastaiUsersV1beta1Request defines model for castai.users.v1beta1.Request.
type CastaiUsersV1beta1Request = map[string]interface{}

// User represents a single system user.
type CastaiUsersV1beta1User struct {
	// (optional) whether SSO auth provider label was provided as a separate JWT claim; used when login handler calls users service.
	AuthProvider *string `json:"authProvider"`

	// (required) user email.
	Email string `json:"email"`

	// has_hubspot_contact indicates whether user has a hubspot contact.
	HasHubspotContact *bool `json:"hasHubspotContact,omitempty"`

	// id of the user.
	Id *string `json:"id,omitempty"`

	// (required) readable user name, e.g. "John Doe".
	Name string  `json:"name"`
	Oid  *string `json:"oid"`

	// (optional) refer_id is a unique identifier of the user in the referral partner system.
	ReferId *int32 `json:"referId"`

	// (optional) refer_visit is unique identifier of the visit in the referral partner system.
	ReferVisit *int32 `json:"referVisit"`

	// (required) username, corresponds to auth0 user id.
	Username string `json:"username"`
}

// UserOrganization describes organization user belongs to.
type CastaiUsersV1beta1UserOrganization struct {
	// organization creation date.
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// id of the organization.
	Id *string `json:"id,omitempty"`

	// name of the organization.
	Name string `json:"name"`

	// user role in the organization.
	Role string `json:"role"`
}

// AKSClusterParams defines AKS-specific arguments.
type ExternalclusterV1AKSClusterParams struct {
	// Deprecated. This field is no longer updatable and node configuration equivalent should be used.
	MaxPodsPerNode *int32 `json:"maxPodsPerNode,omitempty"`

	// Network plugin in use by the cluster. Can be `kubenet` or `azure`.
	NetworkPlugin *string `json:"networkPlugin,omitempty"`

	// Node resource group of the cluster.
	NodeResourceGroup *string `json:"nodeResourceGroup,omitempty"`

	// Region of the cluster.
	Region *string `json:"region,omitempty"`

	// Azure subscription ID where cluster runs.
	SubscriptionId *string `json:"subscriptionId,omitempty"`

	// Zone name pattern in the cluster.
	ZoneNamePattern *string `json:"zoneNamePattern,omitempty"`
}

// AddNodeResponse is the result of AddNodeRequest.
type ExternalclusterV1AddNodeResponse struct {
	// The ID of the node.
	NodeId string `json:"nodeId"`

	// Add node operation ID.
	OperationId string `json:"operationId"`
}

// CloudEvent represents a remote event that happened in the cloud, e.g. "node added".
type ExternalclusterV1CloudEvent struct {
	// Event type.
	EventType *string `json:"eventType,omitempty"`

	// Node provider ID, eg.: aws instance-id.
	Node *string `json:"node,omitempty"`

	// Cast node ID.
	NodeId *string `json:"nodeId"`

	// Node state.
	NodeState *string `json:"nodeState,omitempty"`
}

// Cluster represents external kubernetes cluster.
type ExternalclusterV1Cluster struct {
	// The date agent snapshot was last received.
	AgentSnapshotReceivedAt *time.Time `json:"agentSnapshotReceivedAt,omitempty"`

	// Agent status.
	AgentStatus *string `json:"agentStatus,omitempty"`

	// AKSClusterParams defines AKS-specific arguments.
	Aks *ExternalclusterV1AKSClusterParams `json:"aks,omitempty"`

	// All available zones in cluster's region.
	AllRegionZones *[]ExternalclusterV1Zone `json:"allRegionZones,omitempty"`

	// User friendly unique cluster identifier.
	ClusterNameId *string `json:"clusterNameId,omitempty"`

	// The date when cluster was registered.
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// The cluster's credentials ID.
	CredentialsId *string `json:"credentialsId,omitempty"`

	// The date when cluster was deleted.
	DeletedAt *time.Time `json:"deletedAt"`

	// EKSClusterParams defines EKS-specific arguments.
	Eks *ExternalclusterV1EKSClusterParams `json:"eks,omitempty"`

	// Timestamp when the first operation was performed for a given cluster, which marks when cluster optimisation started by CAST AI.
	FirstOperationAt *time.Time `json:"firstOperationAt,omitempty"`

	// GKEClusterParams defines GKE-specific arguments.
	Gke *ExternalclusterV1GKEClusterParams `json:"gke,omitempty"`

	// The cluster's ID.
	Id *string `json:"id,omitempty"`

	// KOPSClusterParams defines KOPS-specific arguments.
	Kops              *ExternalclusterV1KOPSClusterParams `json:"kops,omitempty"`
	KubernetesVersion *string                             `json:"kubernetesVersion"`

	// Method used to onboard the cluster, eg.: console, terraform.
	ManagedBy *string `json:"managedBy,omitempty"`

	// The name of the external cluster.
	Name *string `json:"name,omitempty"`

	// OpenShiftClusterParams defines OpenShift-specific arguments.
	Openshift *ExternalclusterV1OpenshiftClusterParams `json:"openshift,omitempty"`

	// The cluster's organization ID.
	OrganizationId *string `json:"organizationId,omitempty"`

	// Cluster location where cloud provider organizes cloud resources, eg.: GCP project ID, AWS account ID.
	ProviderNamespaceId *string `json:"providerNamespaceId,omitempty"`

	// Cluster cloud provider type.
	ProviderType *string `json:"providerType,omitempty"`

	// Shows last reconcile error if any.
	ReconcileError *string                                `json:"reconcileError"`
	ReconcileInfo  *ExternalclusterV1ClusterReconcileInfo `json:"reconcileInfo,omitempty"`

	// Timestamp when the last reconcile was performed.
	ReconciledAt *time.Time `json:"reconciledAt"`

	// Region represents cluster region.
	Region *ExternalclusterV1Region `json:"region,omitempty"`

	// Deprecated. Node configuration equivalent should be used.
	SshPublicKey *string `json:"sshPublicKey"`

	// Current status of the cluster.
	Status *string `json:"status,omitempty"`

	// Cluster subnets.
	Subnets *[]ExternalclusterV1Subnet     `json:"subnets,omitempty"`
	Tags    *ExternalclusterV1Cluster_Tags `json:"tags,omitempty"`

	// Cluster zones.
	Zones *[]ExternalclusterV1Zone `json:"zones,omitempty"`
}

// ExternalclusterV1Cluster_Tags defines model for ExternalclusterV1Cluster.Tags.
type ExternalclusterV1Cluster_Tags struct {
	AdditionalProperties map[string]string `json:"-"`
}

// ExternalclusterV1ClusterReconcileInfo defines model for externalcluster.v1.Cluster.ReconcileInfo.
type ExternalclusterV1ClusterReconcileInfo struct {
	// Shows last reconcile error if any.
	Error *string `json:"error"`

	// Number of times the reconcile was retried.
	ErrorCount *int32 `json:"errorCount,omitempty"`

	// Reconcile mode.
	Mode *ExternalclusterV1ClusterReconcileInfoReconcileMode `json:"mode,omitempty"`

	// Timestamp when the last reconcile was performed.
	ReconciledAt *time.Time `json:"reconciledAt"`

	// Timestamp when the reconcile was retried.
	RetryAt *time.Time `json:"retryAt"`

	// Timestamp when the reconcile was started.
	StartedAt *time.Time `json:"startedAt"`

	// Reconcile status.
	Status *ExternalclusterV1ClusterReconcileInfoReconcileStatus `json:"status,omitempty"`
}

// Reconcile mode.
type ExternalclusterV1ClusterReconcileInfoReconcileMode string

// Reconcile status.
type ExternalclusterV1ClusterReconcileInfoReconcileStatus string

// ExternalclusterV1ClusterUpdate defines model for externalcluster.v1.ClusterUpdate.
type ExternalclusterV1ClusterUpdate struct {
	// JSON encoded cluster credentials string.
	Credentials *string `json:"credentials,omitempty"`

	// UpdateEKSClusterParams defines updatable EKS cluster configuration.
	Eks *ExternalclusterV1UpdateEKSClusterParams `json:"eks,omitempty"`
}

// ExternalclusterV1CreateAssumeRolePrincipalResponse defines model for externalcluster.v1.CreateAssumeRolePrincipalResponse.
type ExternalclusterV1CreateAssumeRolePrincipalResponse struct {
	Arn *string `json:"arn,omitempty"`
}

// ExternalclusterV1CreateClusterTokenResponse defines model for externalcluster.v1.CreateClusterTokenResponse.
type ExternalclusterV1CreateClusterTokenResponse struct {
	Token *string `json:"token,omitempty"`
}

// ExternalclusterV1DeleteAssumeRolePrincipalResponse defines model for externalcluster.v1.DeleteAssumeRolePrincipalResponse.
type ExternalclusterV1DeleteAssumeRolePrincipalResponse = map[string]interface{}

// DeleteNodeResponse is the result of DeleteNodeRequest.
type ExternalclusterV1DeleteNodeResponse struct {
	// Node delete operation ID.
	OperationId *string `json:"operationId,omitempty"`
}

// ExternalclusterV1DisconnectConfig defines model for externalcluster.v1.DisconnectConfig.
type ExternalclusterV1DisconnectConfig struct {
	// Whether CAST provisioned nodes should be deleted.
	DeleteProvisionedNodes *bool `json:"deleteProvisionedNodes,omitempty"`

	// Whether CAST Kubernetes resources should be kept.
	KeepKubernetesResources *bool `json:"keepKubernetesResources,omitempty"`
}

// ExternalclusterV1DrainConfig defines model for externalcluster.v1.DrainConfig.
type ExternalclusterV1DrainConfig struct {
	// If set to true, pods will be forcefully deleted after drain timeout.
	Force *bool `json:"force,omitempty"`

	// Node drain timeout in seconds. Defaults to 600s if not set.
	TimeoutSeconds *int32 `json:"timeoutSeconds,omitempty"`
}

// DrainNodeResponse is the result of DrainNodeRequest.
type ExternalclusterV1DrainNodeResponse struct {
	// Drain node operation ID.
	OperationId string `json:"operationId"`
}

// EKSClusterParams defines EKS-specific arguments.
type ExternalclusterV1EKSClusterParams struct {
	// AWS Account ID where cluster runs.
	AccountId     *string `json:"accountId,omitempty"`
	AssumeRoleArn *string `json:"assumeRoleArn,omitempty"`

	// Name of the cluster.
	ClusterName  *string `json:"clusterName,omitempty"`
	DnsClusterIp *string `json:"dnsClusterIp,omitempty"`

	// Deprecated. Output only. Cluster's instance profile ARN used for CAST provisioned nodes.
	InstanceProfileArn *string `json:"instanceProfileArn,omitempty"`

	// Region of the cluster.
	Region *string `json:"region,omitempty"`

	// Deprecated. Output only. Cluster's security groups configuration.
	SecurityGroups *[]string `json:"securityGroups,omitempty"`

	// Deprecated. Output only. Cluster's subnets configuration.
	Subnets *[]string `json:"subnets,omitempty"`

	// Deprecated. Output only. CAST provisioned nodes tags configuration.
	Tags *ExternalclusterV1EKSClusterParams_Tags `json:"tags,omitempty"`
}

// Deprecated. Output only. CAST provisioned nodes tags configuration.
type ExternalclusterV1EKSClusterParams_Tags struct {
	AdditionalProperties map[string]string `json:"-"`
}

// GKEClusterParams defines GKE-specific arguments.
type ExternalclusterV1GKEClusterParams struct {
	// Name of the cluster.
	ClusterName *string `json:"clusterName,omitempty"`

	// Location of the cluster.
	Location *string `json:"location,omitempty"`

	// Max pods per node. Default is 110.
	MaxPodsPerNode *int32 `json:"maxPodsPerNode,omitempty"`

	// GCP project ID where cluster runs.
	ProjectId *string `json:"projectId,omitempty"`

	// Region of the cluster.
	Region *string `json:"region,omitempty"`
}

// GPUConfig describes instance GPU configuration.
//
// Required while provisioning GCP N1 instance types with GPU.
// Eg.: n1-standard-2 with 8 x NVIDIA Tesla K80
type ExternalclusterV1GPUConfig struct {
	// Number of GPUs.
	Count *int32 `json:"count,omitempty"`

	// GPU type.
	Type *string `json:"type,omitempty"`
}

// ExternalclusterV1GPUDevice defines model for externalcluster.v1.GPUDevice.
type ExternalclusterV1GPUDevice struct {
	Count        *int32  `json:"count,omitempty"`
	Manufacturer *string `json:"manufacturer,omitempty"`
	MemoryMib    *int32  `json:"memoryMib,omitempty"`
}

// ExternalclusterV1GPUInfo defines model for externalcluster.v1.GPUInfo.
type ExternalclusterV1GPUInfo struct {
	GpuDevices *[]ExternalclusterV1GPUDevice `json:"gpuDevices,omitempty"`
}

// ExternalclusterV1GetAssumeRolePrincipalResponse defines model for externalcluster.v1.GetAssumeRolePrincipalResponse.
type ExternalclusterV1GetAssumeRolePrincipalResponse struct {
	Arn *string `json:"arn,omitempty"`
}

// ExternalclusterV1GetAssumeRoleUserResponse defines model for externalcluster.v1.GetAssumeRoleUserResponse.
type ExternalclusterV1GetAssumeRoleUserResponse struct {
	Arn *string `json:"arn,omitempty"`
}

// GetCleanupScriptResponse is the result of GetCleanupScriptRequest.
type ExternalclusterV1GetCleanupScriptResponse struct {
	Script *string `json:"script,omitempty"`
}

// GetCredentialsScriptResponse is the result of GetCredentialsScriptRequest.
type ExternalclusterV1GetCredentialsScriptResponse struct {
	Script *string `json:"script,omitempty"`
}

// ExternalclusterV1GetListNodesFiltersResponse defines model for externalcluster.v1.GetListNodesFiltersResponse.
type ExternalclusterV1GetListNodesFiltersResponse struct {
	Filters *[]ExternalclusterV1NodeListFilter `json:"filters,omitempty"`
}

// HandleCloudEventResponse is the result of HandleCloudEventRequest.
type ExternalclusterV1HandleCloudEventResponse = map[string]interface{}

// KOPSClusterParams defines KOPS-specific arguments.
type ExternalclusterV1KOPSClusterParams struct {
	// Cloud provider of the cluster.
	Cloud *string `json:"cloud,omitempty"`

	// Name of the cluster.
	ClusterName *string `json:"clusterName,omitempty"`

	// Region of the cluster.
	Region *string `json:"region,omitempty"`

	// KOPS state store url.
	StateStore *string `json:"stateStore,omitempty"`
}

// ListClustersResponse is the result of ListClustersRequest.
type ExternalclusterV1ListClustersResponse struct {
	Items *[]ExternalclusterV1Cluster `json:"items,omitempty"`
}

// ExternalclusterV1ListNodesResponse defines model for externalcluster.v1.ListNodesResponse.
type ExternalclusterV1ListNodesResponse struct {
	Items      *[]ExternalclusterV1Node `json:"items,omitempty"`
	NextCursor *string                  `json:"nextCursor,omitempty"`
}

// Node represents a single VM that run as Kubernetes master or worker.
type ExternalclusterV1Node struct {
	AddedBy     *string                            `json:"addedBy,omitempty"`
	Annotations *ExternalclusterV1Node_Annotations `json:"annotations,omitempty"`
	Cloud       *string                            `json:"cloud,omitempty"`

	// created_at represents timestamp of when node was created in cloud infrastructure.
	CreatedAt *time.Time                `json:"createdAt,omitempty"`
	GpuInfo   *ExternalclusterV1GPUInfo `json:"gpuInfo,omitempty"`
	Id        *string                   `json:"id,omitempty"`

	// Deprecated. Use node_info architecture field.
	InstanceArchitecture *string `json:"instanceArchitecture"`
	InstanceId           *string `json:"instanceId"`

	// Output only. Cloud provider instance tags/labels.
	InstanceLabels *ExternalclusterV1Node_InstanceLabels `json:"instanceLabels,omitempty"`

	// Output only. Cloud provider instance name.
	InstanceName  *string `json:"instanceName"`
	InstancePrice *string `json:"instancePrice"`
	InstanceType  *string `json:"instanceType,omitempty"`

	// joined_at represents timestamp of when node has joined kubernetes cluster.
	JoinedAt *time.Time                    `json:"joinedAt,omitempty"`
	Labels   *ExternalclusterV1Node_Labels `json:"labels,omitempty"`
	Name     *string                       `json:"name,omitempty"`

	// NodeNetwork represents node network.
	Network             *ExternalclusterV1NodeNetwork `json:"network,omitempty"`
	NodeConfigurationId *string                       `json:"nodeConfigurationId"`
	NodeInfo            *ExternalclusterV1NodeInfo    `json:"nodeInfo,omitempty"`
	ProviderId          *string                       `json:"providerId"`
	Resources           *ExternalclusterV1Resources   `json:"resources,omitempty"`

	// NodeType defines the role of the VM when joining the Kubernetes cluster. Default value is not allowed.
	Role *ExternalclusterV1NodeType `json:"role,omitempty"`

	// NodeSpotConfig defines if node should be created as spot instance, and params for creation.
	SpotConfig *ExternalclusterV1NodeSpotConfig `json:"spotConfig,omitempty"`

	// NodeState contains feedback information about progress on the node provisioning.
	State         *ExternalclusterV1NodeState `json:"state,omitempty"`
	SubnetId      *string                     `json:"subnetId"`
	Taints        *[]ExternalclusterV1Taint   `json:"taints,omitempty"`
	Unschedulable *bool                       `json:"unschedulable,omitempty"`
	Zone          *string                     `json:"zone,omitempty"`
}

// ExternalclusterV1Node_Annotations defines model for ExternalclusterV1Node.Annotations.
type ExternalclusterV1Node_Annotations struct {
	AdditionalProperties map[string]string `json:"-"`
}

// Output only. Cloud provider instance tags/labels.
type ExternalclusterV1Node_InstanceLabels struct {
	AdditionalProperties map[string]string `json:"-"`
}

// ExternalclusterV1Node_Labels defines model for ExternalclusterV1Node.Labels.
type ExternalclusterV1Node_Labels struct {
	AdditionalProperties map[string]string `json:"-"`
}

// NodeAffinity provides control over the assignment of individual nodes to dedicated host instances.
type ExternalclusterV1NodeAffinity struct {
	// THe affinity rules required for choosing the group.
	Affinity *[]K8sSelectorV1KubernetesNodeAffinity `json:"affinity,omitempty"`

	// The name of the dedicated group.
	DedicatedGroup *string `json:"dedicatedGroup"`
}

// ExternalclusterV1NodeConfig defines model for externalcluster.v1.NodeConfig.
type ExternalclusterV1NodeConfig struct {
	// ID reference of Node configuration (template) to be used for node creation. Supersedes Configuration Name.
	ConfigurationId *string `json:"configurationId"`

	// Name reference of Node configuration (template)to be used for node creation.
	// Superseded if Configuration ID reference is provided.
	// Request will fail if several configurations with same name exists for a given cluster.
	ConfigurationName *string `json:"configurationName"`

	// GPUConfig describes instance GPU configuration.
	//
	// Required while provisioning GCP N1 instance types with GPU.
	// Eg.: n1-standard-2 with 8 x NVIDIA Tesla K80
	GpuConfig *ExternalclusterV1GPUConfig `json:"gpuConfig,omitempty"`

	// Instance type of the node.
	InstanceType string `json:"instanceType"`

	// Node Kubernetes labels.
	KubernetesLabels *ExternalclusterV1NodeConfig_KubernetesLabels `json:"kubernetesLabels,omitempty"`

	// Node Kubernetes taints.
	KubernetesTaints *[]ExternalclusterV1Taint `json:"kubernetesTaints,omitempty"`

	// NodeAffinity provides control over the assignment of individual nodes to dedicated host instances.
	NodeAffinity *ExternalclusterV1NodeAffinity `json:"nodeAffinity,omitempty"`

	// NodeSpotConfig defines if node should be created as spot instance, and params for creation.
	SpotConfig *ExternalclusterV1NodeSpotConfig `json:"spotConfig,omitempty"`

	// Node subnet ID.
	SubnetId *string `json:"subnetId"`

	// NodeVolume defines node's local root volume configuration.
	Volume *ExternalclusterV1NodeVolume `json:"volume,omitempty"`

	// Zone of the node.
	Zone *string `json:"zone"`
}

// Node Kubernetes labels.
type ExternalclusterV1NodeConfig_KubernetesLabels struct {
	AdditionalProperties map[string]string `json:"-"`
}

// ExternalclusterV1NodeInfo defines model for externalcluster.v1.NodeInfo.
type ExternalclusterV1NodeInfo struct {
	Architecture            *string `json:"architecture,omitempty"`
	ContainerRuntimeVersion *string `json:"containerRuntimeVersion,omitempty"`
	KernelVersion           *string `json:"kernelVersion,omitempty"`
	KubeProxyVersion        *string `json:"kubeProxyVersion,omitempty"`
	KubeletVersion          *string `json:"kubeletVersion,omitempty"`
	OperatingSystem         *string `json:"operatingSystem,omitempty"`
	OsImage                 *string `json:"osImage,omitempty"`
}

// ExternalclusterV1NodeListFilter defines model for externalcluster.v1.NodeListFilter.
type ExternalclusterV1NodeListFilter struct {
	Name   *string   `json:"name,omitempty"`
	Type   *string   `json:"type,omitempty"`
	Values *[]string `json:"values,omitempty"`
}

// NodeNetwork represents node network.
type ExternalclusterV1NodeNetwork struct {
	PrivateIp *string `json:"privateIp,omitempty"`
	PublicIp  *string `json:"publicIp,omitempty"`
}

// NodeSpotConfig defines if node should be created as spot instance, and params for creation.
type ExternalclusterV1NodeSpotConfig struct {
	// Whether node should be created as spot instance.
	IsSpot *bool `json:"isSpot,omitempty"`

	// Spot instance price. Applicable only for AWS nodes.
	Price *string `json:"price,omitempty"`
}

// NodeState contains feedback information about progress on the node provisioning.
type ExternalclusterV1NodeState struct {
	Phase *string `json:"phase,omitempty"`
}

// NodeType defines the role of the VM when joining the Kubernetes cluster. Default value is not allowed.
type ExternalclusterV1NodeType string

// NodeVolume defines node's local root volume configuration.
type ExternalclusterV1NodeVolume struct {
	// RaidConfig allow You have two or more devices, of approximately the same size, and you want to combine their storage capacity
	// and also combine their performance by accessing them in parallel.
	RaidConfig *ExternalclusterV1RaidConfig `json:"raidConfig,omitempty"`

	// Volume size in GiB.
	Size *int32 `json:"size,omitempty"`
}

// OpenShiftClusterParams defines OpenShift-specific arguments.
type ExternalclusterV1OpenshiftClusterParams struct {
	// Cloud provider of the cluster.
	Cloud *string `json:"cloud,omitempty"`

	// Name of the cluster.
	ClusterName *string `json:"clusterName,omitempty"`
	InternalId  *string `json:"internalId,omitempty"`

	// Region of the cluster.
	Region *string `json:"region,omitempty"`
}

// RaidConfig allow You have two or more devices, of approximately the same size, and you want to combine their storage capacity
// and also combine their performance by accessing them in parallel.
type ExternalclusterV1RaidConfig struct {
	// Specify the RAID0 chunk size in kilobytes, this parameter affects the read/write in the disk array and must be tailored
	// for the type of data written by the workloads in the node. If not provided it will default to 64KB.
	ChunkSize *int32 `json:"chunkSize"`
}

// ReconcileClusterResponse is the result of ReconcileClusterRequest.
type ExternalclusterV1ReconcileClusterResponse = map[string]interface{}

// Region represents cluster region.
type ExternalclusterV1Region struct {
	// Display name of the region.
	DisplayName *string `json:"displayName,omitempty"`

	// Name of the region.
	Name *string `json:"name,omitempty"`
}

// RegisterClusterRequest registers cluster.
type ExternalclusterV1RegisterClusterRequest struct {
	// AKSClusterParams defines AKS-specific arguments.
	Aks *ExternalclusterV1AKSClusterParams `json:"aks,omitempty"`

	// EKSClusterParams defines EKS-specific arguments.
	Eks *ExternalclusterV1EKSClusterParams `json:"eks,omitempty"`

	// GKEClusterParams defines GKE-specific arguments.
	Gke *ExternalclusterV1GKEClusterParams `json:"gke,omitempty"`

	// The ID of the cluster.
	Id *string `json:"id,omitempty"`

	// KOPSClusterParams defines KOPS-specific arguments.
	Kops *ExternalclusterV1KOPSClusterParams `json:"kops,omitempty"`

	// The name of the cluster.
	Name string `json:"name"`

	// OpenShiftClusterParams defines OpenShift-specific arguments.
	Openshift *ExternalclusterV1OpenshiftClusterParams `json:"openshift,omitempty"`

	// Organization of the cluster.
	OrganizationId *string `json:"organizationId,omitempty"`
}

// ExternalclusterV1Resources defines model for externalcluster.v1.Resources.
type ExternalclusterV1Resources struct {
	BandwidthCapacityMbps *int32 `json:"bandwidthCapacityMbps,omitempty"`
	CpuAllocatableMilli   *int32 `json:"cpuAllocatableMilli,omitempty"`
	CpuCapacityMilli      *int32 `json:"cpuCapacityMilli,omitempty"`
	CpuRequestsMilli      *int32 `json:"cpuRequestsMilli,omitempty"`
	MemAllocatableMib     *int32 `json:"memAllocatableMib,omitempty"`
	MemCapacityMib        *int32 `json:"memCapacityMib,omitempty"`
	MemRequestsMib        *int32 `json:"memRequestsMib,omitempty"`
}

// Subnet represents cluster subnet.
type ExternalclusterV1Subnet struct {
	// Cidr block of the subnet.
	Cidr *string `json:"cidr,omitempty"`

	// The ID of the subnet.
	Id *string `json:"id,omitempty"`

	// Deprecated. Subnet name is not filled and should not be used.
	Name *string `json:"name,omitempty"`

	// Public defines if subnet is publicly routable.
	// Optional. Populated for EKS provider only.
	Public *bool `json:"public"`

	// Subnet's zone name.
	ZoneName *string `json:"zoneName,omitempty"`
}

// Taint defines node taint in kubernetes cluster.
type ExternalclusterV1Taint struct {
	Effect string `json:"effect"`
	Key    string `json:"key"`
	Value  string `json:"value"`
}

// UpdateClusterTagsResponse result of cluster tags update.
type ExternalclusterV1UpdateClusterTagsResponse = map[string]interface{}

// UpdateEKSClusterParams defines updatable EKS cluster configuration.
type ExternalclusterV1UpdateEKSClusterParams struct {
	AssumeRoleArn *string `json:"assumeRoleArn,omitempty"`
}

// Cluster zone.
type ExternalclusterV1Zone struct {
	// ID of the zone.
	Id *string `json:"id,omitempty"`

	// Zone name.
	Name *string `json:"name,omitempty"`
}

// K8sSelectorV1KubernetesNodeAffinity defines model for k8s_selector.v1.KubernetesNodeAffinity.
type K8sSelectorV1KubernetesNodeAffinity struct {
	Key string `json:"key"`

	// - IN: In values
	//  - NotIn: Not in values
	//  - Exists: Just exist
	//  - DoesNotExist: Values does not exist
	//  - Gt: Greater then
	//  - Lt: Lower then
	Operator K8sSelectorV1Operator `json:"operator"`
	Values   []string              `json:"values"`
}

// - IN: In values
//   - NotIn: Not in values
//   - Exists: Just exist
//   - DoesNotExist: Values does not exist
//   - Gt: Greater then
//   - Lt: Lower then
type K8sSelectorV1Operator string

// NodeconfigV1AKSConfig defines model for nodeconfig.v1.AKSConfig.
type NodeconfigV1AKSConfig struct {
	// List of supported image families (OSes) for AKS.
	ImageFamily *NodeconfigV1AKSConfigImageFamily `json:"imageFamily,omitempty"`

	// List of load balancers to be used for the cluster.
	LoadBalancers *[]NodeconfigV1AKSConfigLoadBalancers `json:"loadBalancers,omitempty"`

	// Maximum number of pods that can be run on a node, which affects how many IP addresses you will need for each node.
	// Defaults to 30. Values between 10 and 250 are allowed.
	// Setting values above 110 will require specific CNI configuration. Please refer to Microsoft documentation for additional guidance.
	MaxPodsPerNode *int32 `json:"maxPodsPerNode,omitempty"`

	// OsDiskType represent possible values for AKS node os disk type(this is subset of all available Azure disk types).
	OsDiskType *NodeconfigV1AKSConfigOsDiskType `json:"osDiskType,omitempty"`
}

// List of supported image families (OSes) for AKS.
type NodeconfigV1AKSConfigImageFamily string

// NodeconfigV1AKSConfigLoadBalancers defines model for nodeconfig.v1.AKSConfig.LoadBalancers.
type NodeconfigV1AKSConfigLoadBalancers struct {
	// List of backend pools to be used for the load balancer.
	IpBasedBackendPools *[]NodeconfigV1AKSConfigLoadBalancersIPBasedBackendPool `json:"ipBasedBackendPools,omitempty"`

	// Name of the load balancer.
	Name *string `json:"name,omitempty"`
}

// NodeconfigV1AKSConfigLoadBalancersIPBasedBackendPool defines model for nodeconfig.v1.AKSConfig.LoadBalancers.IPBasedBackendPool.
type NodeconfigV1AKSConfigLoadBalancersIPBasedBackendPool struct {
	Name *string `json:"name,omitempty"`
}

// OsDiskType represent possible values for AKS node os disk type(this is subset of all available Azure disk types).
type NodeconfigV1AKSConfigOsDiskType string

// List of supported container runtimes kubelet should use.
type NodeconfigV1ContainerRuntime string

// NodeconfigV1DeleteConfigurationResponse defines model for nodeconfig.v1.DeleteConfigurationResponse.
type NodeconfigV1DeleteConfigurationResponse = map[string]interface{}

// NodeconfigV1EKSConfig defines model for nodeconfig.v1.EKSConfig.
type NodeconfigV1EKSConfig struct {
	// IP address to use for DNS queries within the cluster. Defaults to 10.100.0.10 or 172.20.0.10 based on the IP address of the primary interface.
	DnsClusterIp *string `json:"dnsClusterIp"`

	// List of supported image families (OSes) for EKS.
	//
	//  - FAMILY_AL2: Amazon Linux 2 (https://aws.amazon.com/amazon-linux-2/), EKS-specific.
	//  - FAMILY_AL2023: Amazon Linux 2023 (https://aws.amazon.com/linux/amazon-linux-2023/), EKS-specific.
	//  - FAMILY_BOTTLEROCKET: Bottlerocket (https://aws.amazon.com/bottlerocket/), EKS-specific.
	ImageFamily  *NodeconfigV1EKSConfigImageFamily `json:"imageFamily,omitempty"`
	ImdsHopLimit *int32                            `json:"imdsHopLimit"`
	ImdsV1       *bool                             `json:"imdsV1"`

	// Cluster's instance profile ARN used for CAST provisioned nodes.
	InstanceProfileArn string `json:"instanceProfileArn"`

	// Number of IPs per prefix to be used for calculating max pods. Defaults to 1.
	IpsPerPrefix *int32 `json:"ipsPerPrefix"`

	// AWS key pair ID to be used for provisioned nodes. Has priority over sshPublicKey.
	KeyPairId             *string `json:"keyPairId"`
	MaxPodsPerNodeFormula *string `json:"maxPodsPerNodeFormula"`

	// Cluster's security groups configuration.
	SecurityGroups *[]string                `json:"securityGroups,omitempty"`
	TargetGroup    *NodeconfigV1TargetGroup `json:"targetGroup,omitempty"`

	// TargetGroups defines a list of load balancer target groups to register cluster instances into.
	TargetGroups *[]NodeconfigV1TargetGroup `json:"targetGroups,omitempty"`

	// EBS volume IOPS value to be used for provisioned nodes.
	VolumeIops      *int32  `json:"volumeIops"`
	VolumeKmsKeyArn *string `json:"volumeKmsKeyArn"`

	// EBS volume throughput in MiB/s to be used for provisioned nodes.
	VolumeThroughput *int32 `json:"volumeThroughput"`

	// EBS volume type to be used for provisioned nodes. Defaults to gp3.
	VolumeType *string `json:"volumeType"`
}

// List of supported image families (OSes) for EKS.
//
//   - FAMILY_AL2: Amazon Linux 2 (https://aws.amazon.com/amazon-linux-2/), EKS-specific.
//   - FAMILY_AL2023: Amazon Linux 2023 (https://aws.amazon.com/linux/amazon-linux-2023/), EKS-specific.
//   - FAMILY_BOTTLEROCKET: Bottlerocket (https://aws.amazon.com/bottlerocket/), EKS-specific.
type NodeconfigV1EKSConfigImageFamily string

// NodeconfigV1GKEConfig defines model for nodeconfig.v1.GKEConfig.
type NodeconfigV1GKEConfig struct {
	// Type of boot disk attached to the node. For available types please read official GCP docs(https://cloud.google.com/compute/docs/disks#pdspecs).
	DiskType *string `json:"diskType"`

	// Maximum number of pods that can be run on a node, which affects how many IP addresses you will need for each node. Defaults to 110.
	// For Standard GKE clusters, you can run a maximum of 256 Pods on a node with a /23 range, not 512 as you might expect. This provides a buffer so that Pods don't become unschedulable due to a
	// transient lack of IP addresses in the Pod IP range for a given node. For all ranges, at most half as many Pods can be scheduled as IP addresses in the range.
	MaxPodsPerNode *int32 `json:"maxPodsPerNode,omitempty"`

	// Network tags to be added on a VM. Each tag must be 1-63 characters long, start with a lowercase letter and end with either a number or a lowercase letter.
	NetworkTags *[]string `json:"networkTags,omitempty"`

	// Flag indicating whether to use local SSD storage for the node. Defaults to false.
	UseEphemeralStorageLocalSsd *bool `json:"useEphemeralStorageLocalSsd,omitempty"`

	// Zones is a preferred list of zones to choose from when adding a node.
	Zones *[]string `json:"zones,omitempty"`
}

// NodeconfigV1GetSuggestedConfigurationResponse defines model for nodeconfig.v1.GetSuggestedConfigurationResponse.
type NodeconfigV1GetSuggestedConfigurationResponse struct {
	// All instance profile ARNs available in the AWS account.
	InstanceProfiles *[]NodeconfigV1InstanceProfile `json:"instanceProfiles,omitempty"`

	// All clusters Security Groups in the cluster VPC.
	SecurityGroups *[]NodeconfigV1SecurityGroup `json:"securityGroups,omitempty"`

	// All cluster routable subnets.
	Subnets *[]NodeconfigV1SubnetDetails `json:"subnets,omitempty"`
}

// NodeconfigV1InstanceProfile defines model for nodeconfig.v1.InstanceProfile.
type NodeconfigV1InstanceProfile struct {
	// ARN of the instance profile.
	Arn *string `json:"arn,omitempty"`

	// Name of the instance profile.
	Name *string `json:"name,omitempty"`
}

// NodeconfigV1KOPSConfig defines model for nodeconfig.v1.KOPSConfig.
type NodeconfigV1KOPSConfig struct {
	// AWS key pair ID to be used for provisioned nodes. Has priority over sshPublicKey.
	KeyPairId *string `json:"keyPairId"`
}

// NodeconfigV1ListConfigurationsResponse defines model for nodeconfig.v1.ListConfigurationsResponse.
type NodeconfigV1ListConfigurationsResponse struct {
	Items *[]NodeconfigV1NodeConfiguration `json:"items,omitempty"`
}

// NodeconfigV1ListMaxPodsPresetsResponse defines model for nodeconfig.v1.ListMaxPodsPresetsResponse.
type NodeconfigV1ListMaxPodsPresetsResponse struct {
	Presets *[]string `json:"presets,omitempty"`
}

// NodeconfigV1NewNodeConfiguration defines model for nodeconfig.v1.NewNodeConfiguration.
type NodeconfigV1NewNodeConfiguration struct {
	Aks *NodeconfigV1AKSConfig `json:"aks,omitempty"`

	// List of supported container runtimes kubelet should use.
	ContainerRuntime *NodeconfigV1ContainerRuntime `json:"containerRuntime,omitempty"`

	// Disk to CPU ratio. Sets the number of GiBs to be added for every CPU on the node. The root volume will have a minimum of 100GiB and will be further increased based on value.
	DiskCpuRatio *int32 `json:"diskCpuRatio,omitempty"`

	// Optional docker daemon configuration properties. Provide only properties that you want to override. Available values https://docs.docker.com/engine/reference/commandline/dockerd/#daemon-configuration-file
	DockerConfig *map[string]interface{} `json:"dockerConfig,omitempty"`

	// Drain timeout in seconds. Defaults to 0.
	DrainTimeoutSec *int32                 `json:"drainTimeoutSec"`
	Eks             *NodeconfigV1EKSConfig `json:"eks,omitempty"`
	Gke             *NodeconfigV1GKEConfig `json:"gke,omitempty"`

	// Image to be used while provisioning the node.
	// Image setting takes precedence over image family.
	// If both image and image family are empty, the latest image from a default family will be used, depending on the cloud provider.
	Image *string `json:"image"`

	// Init script to be run on your instance at launch. Should not contain any sensitive data. Value should be base64 encoded.
	InitScript *string                 `json:"initScript"`
	Kops       *NodeconfigV1KOPSConfig `json:"kops,omitempty"`

	// Optional kubelet configuration properties. Applicable for EKS only.
	KubeletConfig *map[string]interface{} `json:"kubeletConfig,omitempty"`

	// Minimal disk size in GiB. Defaults to 100.
	MinDiskSize *int32 `json:"minDiskSize"`

	// The name of the node configuration.
	Name string `json:"name"`

	// Optional SSH public key to be used for provisioned nodes. Value should be base64 encoded.
	SshPublicKey *string `json:"sshPublicKey"`

	// Subnet ids to be used for provisioned nodes.
	Subnets *[]string `json:"subnets,omitempty"`

	// Tags to be added on cloud instances for provisioned nodes.
	Tags *NodeconfigV1NewNodeConfiguration_Tags `json:"tags,omitempty"`
}

// Tags to be added on cloud instances for provisioned nodes.
type NodeconfigV1NewNodeConfiguration_Tags struct {
	AdditionalProperties map[string]string `json:"-"`
}

// NodeconfigV1NodeConfiguration defines model for nodeconfig.v1.NodeConfiguration.
type NodeconfigV1NodeConfiguration struct {
	Aks *NodeconfigV1AKSConfig `json:"aks,omitempty"`

	// List of supported container runtimes kubelet should use.
	ContainerRuntime *NodeconfigV1ContainerRuntime `json:"containerRuntime,omitempty"`

	// The date when node configuration was created.
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// Whether node configuration is the default one.
	Default *bool `json:"default,omitempty"`

	// Disk to CPU ratio.
	DiskCpuRatio *int32 `json:"diskCpuRatio,omitempty"`

	// Optional docker daemon configuration properties. Applicable for EKS only.
	DockerConfig *map[string]interface{} `json:"dockerConfig"`

	// Drain timeout in seconds. Defaults to 0.
	DrainTimeoutSec *int32                 `json:"drainTimeoutSec"`
	Eks             *NodeconfigV1EKSConfig `json:"eks,omitempty"`
	Gke             *NodeconfigV1GKEConfig `json:"gke,omitempty"`

	// The node configuration ID.
	Id *string `json:"id,omitempty"`

	// Image to be used while provisioning the node.
	// Image setting takes precedence over image family.
	// If both image and image family are empty, the latest image from a default family will be used, depending on the cloud provider.
	Image *string `json:"image"`

	// Base64 encoded init script to be run on your instance at launch.
	InitScript *string                 `json:"initScript"`
	Kops       *NodeconfigV1KOPSConfig `json:"kops,omitempty"`

	// Optional kubelet configuration properties. Applicable for EKS only.
	KubeletConfig *map[string]interface{} `json:"kubeletConfig"`

	// Minimal disk size in GiB.
	MinDiskSize *int32 `json:"minDiskSize,omitempty"`

	// The name of the node configuration.
	Name *string `json:"name,omitempty"`

	// Base64 encoded ssh public key to be used for provisioned nodes.
	SshPublicKey *string `json:"sshPublicKey"`

	// Subnet ids to be used for provisioned nodes.
	Subnets *[]string `json:"subnets,omitempty"`

	// Tags to be added on cloud instances for provisioned nodes.
	Tags *NodeconfigV1NodeConfiguration_Tags `json:"tags,omitempty"`

	// The date when node configuration was updated.
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`

	// The version of the node configuration.
	Version *int32 `json:"version,omitempty"`
}

// Tags to be added on cloud instances for provisioned nodes.
type NodeconfigV1NodeConfiguration_Tags struct {
	AdditionalProperties map[string]string `json:"-"`
}

// NodeconfigV1NodeConfigurationUpdate defines model for nodeconfig.v1.NodeConfigurationUpdate.
type NodeconfigV1NodeConfigurationUpdate struct {
	Aks *NodeconfigV1AKSConfig `json:"aks,omitempty"`

	// List of supported container runtimes kubelet should use.
	ContainerRuntime *NodeconfigV1ContainerRuntime `json:"containerRuntime,omitempty"`

	// Disk to CPU ratio. Sets the number of GiBs to be added for every CPU on the node. The root volume will have a minimum of 100GiB and will be further increased based on value.
	DiskCpuRatio *int32 `json:"diskCpuRatio,omitempty"`

	// Optional docker daemon configuration properties. Provide only properties that you want to override. Available values https://docs.docker.com/engine/reference/commandline/dockerd/#daemon-configuration-file
	DockerConfig *map[string]interface{} `json:"dockerConfig,omitempty"`

	// Drain timeout in seconds. Defaults to 0.
	DrainTimeoutSec *int32                 `json:"drainTimeoutSec"`
	Eks             *NodeconfigV1EKSConfig `json:"eks,omitempty"`
	Gke             *NodeconfigV1GKEConfig `json:"gke,omitempty"`

	// Image to be used while provisioning the node.
	// Image setting takes precedence over image family.
	// If both image and image family are empty, the latest image from a default family will be used, depending on the cloud provider.
	Image *string `json:"image"`

	// Init script to be run on your instance at launch. Should not contain any sensitive data. Value should be base64 encoded.
	InitScript *string                 `json:"initScript"`
	Kops       *NodeconfigV1KOPSConfig `json:"kops,omitempty"`

	// Optional kubelet configuration properties. Applicable for EKS only.
	KubeletConfig *map[string]interface{} `json:"kubeletConfig,omitempty"`

	// Minimal disk size in GiB. Defaults to 100.
	MinDiskSize *int32 `json:"minDiskSize"`

	// Optional SSH public key to be used for provisioned nodes. Value should be base64 encoded.
	SshPublicKey *string `json:"sshPublicKey"`

	// Subnet ids to be used for provisioned nodes.
	Subnets *[]string `json:"subnets,omitempty"`

	// Tags to be added on cloud instances for provisioned nodes.
	Tags *NodeconfigV1NodeConfigurationUpdate_Tags `json:"tags,omitempty"`
}

// Tags to be added on cloud instances for provisioned nodes.
type NodeconfigV1NodeConfigurationUpdate_Tags struct {
	AdditionalProperties map[string]string `json:"-"`
}

// NodeconfigV1SecurityGroup defines model for nodeconfig.v1.SecurityGroup.
type NodeconfigV1SecurityGroup struct {
	// A description of the security group.
	Description *string `json:"description,omitempty"`

	// The ID of the security group.
	Id *string `json:"id,omitempty"`

	// The name of the security group.
	Name *string `json:"name,omitempty"`

	// Tags of the security group.
	Tags *NodeconfigV1SecurityGroup_Tags `json:"tags,omitempty"`
}

// Tags of the security group.
type NodeconfigV1SecurityGroup_Tags struct {
	AdditionalProperties map[string]string `json:"-"`
}

// SubnetDetails contains all subnet attributes relevant for node configuration.
type NodeconfigV1SubnetDetails struct {
	// Available Ip Address populated for EKS provider only.
	AvailableIpAddressCount *int32 `json:"availableIpAddressCount"`

	// Cidr block of the subnet.
	Cidr *string `json:"cidr,omitempty"`

	// The ID of the subnet.
	Id *string `json:"id,omitempty"`

	// Tags of the subnet.
	Tags *NodeconfigV1SubnetDetails_Tags `json:"tags,omitempty"`

	// Cluster zone.
	Zone *ExternalclusterV1Zone `json:"zone,omitempty"`
}

// Tags of the subnet.
type NodeconfigV1SubnetDetails_Tags struct {
	AdditionalProperties map[string]string `json:"-"`
}

// NodeconfigV1TargetGroup defines model for nodeconfig.v1.TargetGroup.
type NodeconfigV1TargetGroup struct {
	// ARN of the target group.
	Arn *string `json:"arn,omitempty"`

	// Port of the target group.
	Port *int32 `json:"port"`
}

// NodetemplatesV1AvailableInstanceType defines model for nodetemplates.v1.AvailableInstanceType.
type NodetemplatesV1AvailableInstanceType struct {
	Architecture           *string                                                     `json:"architecture,omitempty"`
	AvailableGpuDevices    *[]NodetemplatesV1AvailableInstanceTypeGPUDevice            `json:"availableGpuDevices,omitempty"`
	Burstable              *bool                                                       `json:"burstable,omitempty"`
	Cpu                    *string                                                     `json:"cpu,omitempty"`
	CpuCost                *float64                                                    `json:"cpuCost,omitempty"`
	CpuManufacturers       *[]string                                                   `json:"cpuManufacturers,omitempty"`
	CustomerSpecific       *bool                                                       `json:"customerSpecific,omitempty"`
	Family                 *string                                                     `json:"family,omitempty"`
	IsBareMetal            *bool                                                       `json:"isBareMetal,omitempty"`
	IsComputeOptimized     *bool                                                       `json:"isComputeOptimized,omitempty"`
	Memory                 *string                                                     `json:"memory,omitempty"`
	Name                   *string                                                     `json:"name,omitempty"`
	Os                     *NodetemplatesV1AvailableInstanceTypeOs                     `json:"os,omitempty"`
	StorageOptimizedOption *NodetemplatesV1AvailableInstanceTypeStorageOptimizedOption `json:"storageOptimizedOption,omitempty"`
}

// NodetemplatesV1AvailableInstanceTypeGPUDevice defines model for nodetemplates.v1.AvailableInstanceType.GPUDevice.
type NodetemplatesV1AvailableInstanceTypeGPUDevice struct {
	Count        *int32  `json:"count,omitempty"`
	Manufacturer *string `json:"manufacturer,omitempty"`
	Name         *string `json:"name,omitempty"`
}

// NodetemplatesV1AvailableInstanceTypeOs defines model for nodetemplates.v1.AvailableInstanceType.Os.
type NodetemplatesV1AvailableInstanceTypeOs string

// NodetemplatesV1AvailableInstanceTypeStorageOptimizedOption defines model for nodetemplates.v1.AvailableInstanceType.StorageOptimizedOption.
type NodetemplatesV1AvailableInstanceTypeStorageOptimizedOption string

// NodetemplatesV1DeleteNodeTemplateResponse defines model for nodetemplates.v1.DeleteNodeTemplateResponse.
type NodetemplatesV1DeleteNodeTemplateResponse = map[string]interface{}

// NodetemplatesV1FilterInstanceTypesResponse defines model for nodetemplates.v1.FilterInstanceTypesResponse.
type NodetemplatesV1FilterInstanceTypesResponse struct {
	AvailableInstanceTypes *[]NodetemplatesV1AvailableInstanceType `json:"availableInstanceTypes,omitempty"`
}

// NodetemplatesV1GenerateNodeTemplatesResponse defines model for nodetemplates.v1.GenerateNodeTemplatesResponse.
type NodetemplatesV1GenerateNodeTemplatesResponse struct {
	Items *[]NodetemplatesV1NodeTemplateListItem `json:"items,omitempty"`
}

// NodetemplatesV1Label defines model for nodetemplates.v1.Label.
type NodetemplatesV1Label struct {
	Key   *string `json:"key,omitempty"`
	Value *string `json:"value,omitempty"`
}

// NodetemplatesV1ListNodeTemplatesResponse defines model for nodetemplates.v1.ListNodeTemplatesResponse.
type NodetemplatesV1ListNodeTemplatesResponse struct {
	Items *[]NodetemplatesV1NodeTemplateListItem `json:"items,omitempty"`
}

// NodetemplatesV1NewNodeTemplate defines model for nodetemplates.v1.NewNodeTemplate.
type NodetemplatesV1NewNodeTemplate struct {
	ConfigurationId                          *string                             `json:"configurationId,omitempty"`
	Constraints                              *NodetemplatesV1TemplateConstraints `json:"constraints,omitempty"`
	CustomInstancesEnabled                   *bool                               `json:"customInstancesEnabled"`
	CustomInstancesWithExtendedMemoryEnabled *bool                               `json:"customInstancesWithExtendedMemoryEnabled"`
	CustomLabel                              *NodetemplatesV1Label               `json:"customLabel,omitempty"`

	// Custom labels for the template.
	// The passed values will be ignored if the field custom_label is present.
	CustomLabels *NodetemplatesV1NewNodeTemplate_CustomLabels `json:"customLabels,omitempty"`

	// Custom taints for the template.
	CustomTaints *[]NodetemplatesV1TaintWithOptionalEffect `json:"customTaints,omitempty"`

	// Flag whether this template is the default template for the cluster.
	IsDefault *bool `json:"isDefault,omitempty"`

	// This field is used to enable/disable autoscaling for the template.
	IsEnabled         *bool                                    `json:"isEnabled"`
	Name              *string                                  `json:"name,omitempty"`
	RebalancingConfig *NodetemplatesV1RebalancingConfiguration `json:"rebalancingConfig,omitempty"`

	// Marks whether the templated nodes will have a taint template taint.
	// Based on the template constraints, the template may still have additional taints.
	// For example, if both lifecycles (spot, on-demand) are enabled, to use spot nodes, the spot nodes of this template will have the spot taint.
	ShouldTaint *bool `json:"shouldTaint"`
}

// Custom labels for the template.
// The passed values will be ignored if the field custom_label is present.
type NodetemplatesV1NewNodeTemplate_CustomLabels struct {
	AdditionalProperties map[string]string `json:"-"`
}

// NodetemplatesV1NodeTemplate defines model for nodetemplates.v1.NodeTemplate.
type NodetemplatesV1NodeTemplate struct {
	ConfigurationId                          *string                             `json:"configurationId,omitempty"`
	ConfigurationName                        *string                             `json:"configurationName,omitempty"`
	Constraints                              *NodetemplatesV1TemplateConstraints `json:"constraints,omitempty"`
	CustomInstancesEnabled                   *bool                               `json:"customInstancesEnabled,omitempty"`
	CustomInstancesWithExtendedMemoryEnabled *bool                               `json:"customInstancesWithExtendedMemoryEnabled,omitempty"`
	CustomLabel                              *NodetemplatesV1Label               `json:"customLabel,omitempty"`

	// Custom labels for the template.
	CustomLabels *NodetemplatesV1NodeTemplate_CustomLabels `json:"customLabels,omitempty"`

	// Custom taints for the template.
	CustomTaints *[]NodetemplatesV1Taint `json:"customTaints,omitempty"`

	// Flag whether this template is the default template for the cluster.
	IsDefault *bool `json:"isDefault,omitempty"`

	// This field is used to enable/disable autoscaling for the template.
	IsEnabled         *bool                                    `json:"isEnabled,omitempty"`
	Name              *string                                  `json:"name,omitempty"`
	RebalancingConfig *NodetemplatesV1RebalancingConfiguration `json:"rebalancingConfig,omitempty"`

	// Marks whether the templated nodes will have a taint.
	ShouldTaint *bool   `json:"shouldTaint,omitempty"`
	Version     *string `json:"version,omitempty"`
}

// Custom labels for the template.
type NodetemplatesV1NodeTemplate_CustomLabels struct {
	AdditionalProperties map[string]string `json:"-"`
}

// NodetemplatesV1NodeTemplateListItem defines model for nodetemplates.v1.NodeTemplateListItem.
type NodetemplatesV1NodeTemplateListItem struct {
	Stats    *NodetemplatesV1NodeTemplateListItemStats `json:"stats,omitempty"`
	Template *NodetemplatesV1NodeTemplate              `json:"template,omitempty"`
}

// NodetemplatesV1NodeTemplateListItemStats defines model for nodetemplates.v1.NodeTemplateListItem.Stats.
type NodetemplatesV1NodeTemplateListItemStats struct {
	CountFallback *int32 `json:"countFallback,omitempty"`
	CountOnDemand *int32 `json:"countOnDemand,omitempty"`
	CountSpot     *int32 `json:"countSpot,omitempty"`
}

// NodetemplatesV1RebalancingConfiguration defines model for nodetemplates.v1.RebalancingConfiguration.
type NodetemplatesV1RebalancingConfiguration struct {
	// Minimum amount of nodes to create for template
	// Note, this setting is only relevant for very small clusters, for larger clusters it's recommended to leave this at 0.
	MinNodes *int32 `json:"minNodes"`
}

// Taint is used in responses.
type NodetemplatesV1Taint struct {
	// TaintEffect is a node taint effect.
	Effect *NodetemplatesV1TaintEffect `json:"effect,omitempty"`
	Key    *string                     `json:"key,omitempty"`
	Value  *string                     `json:"value,omitempty"`
}

// TaintEffect is a node taint effect.
type NodetemplatesV1TaintEffect string

// TaintWithOptionalEffect is used when creating/updating a node template.
// We are adding support for specifying taint effect on node templates and effect should be optional to be backwards compatible.
type NodetemplatesV1TaintWithOptionalEffect struct {
	// TaintEffect is a node taint effect.
	Effect *NodetemplatesV1TaintEffect `json:"effect,omitempty"`
	Key    string                      `json:"key"`
	Value  *string                     `json:"value"`
}

// NodetemplatesV1TemplateConstraints defines model for nodetemplates.v1.TemplateConstraints.
type NodetemplatesV1TemplateConstraints struct {
	Architectures *[]string `json:"architectures,omitempty"`

	// AZS - The list of AZ names to consider for the node template, if empty or not set all AZs are considered.
	//
	// AZS - The list of AZ names to consider for the node template, if empty or not set all AZs are considered. When
	// subnets defined in node config are zonal (AWS + Azure), the effective AZs are the intersection of the subnet AZs
	// and the AZs in node template.
	Azs       *[]string `json:"azs,omitempty"`
	BareMetal *bool     `json:"bareMetal"`

	// - DISABLED: The constraint is disabled
	//  - ENABLED: The constraint is enabled
	Burstable        *NodetemplatesV1TemplateConstraintsConstraintState `json:"burstable,omitempty"`
	ComputeOptimized *bool                                              `json:"computeOptimized"`

	// Describes the manufacturers of the CPUs the instance type can be equipped with.
	CpuManufacturers *[]NodetemplatesV1TemplateConstraintsCPUManufacturer `json:"cpuManufacturers,omitempty"`

	// Custom sorting priority - instances matching defined rules will take priority over other candidates.
	CustomPriority *[]NodetemplatesV1TemplateConstraintsCustomPriority `json:"customPriority,omitempty"`

	// - DISABLED: The constraint is disabled
	//  - ENABLED: The constraint is enabled
	CustomerSpecific *NodetemplatesV1TemplateConstraintsConstraintState `json:"customerSpecific,omitempty"`

	// Dedicated node affinity - creates preference for instances to be created on sole tenancy or dedicated nodes.
	//
	// Dedicated node affinity - creates preference for instances to be created on sole tenancy or dedicated nodes. This
	// feature is only available for GCP clusters and sole tenancy nodes with local SSDs or GPUs are not supported. If
	// the sole tenancy or dedicated nodes don't have capacity for selected instance type, the Autoscaler will fall back
	// to multi-tenant instance types available for this Node Template. Other instance constraints are applied when
	// the Autoscaler picks available instance types that can be created on the sole tenancy or dedicated
	// node (example: setting min CPU to 16).
	//
	// When using dedicated node affinity, with a shared sole tenancy node group in GCP following rules and limitations apply:
	// - Use Resource URI/FQDN of the sole tenancy node group as the name (example: /projects/test-123/zones/europe-west1b/nodeGroups/test-node-group).
	// - The GKE cluster must use Shared VPC (https://cloud.google.com/vpc/docs/shared-vpc).
	// - The sole tenancy node group must be shared with the GKE cluster's project or organization.
	// - The CAST's service account must have the necessary permissions to create and operate instances
	//   on the sole tenancy node group's project.
	DedicatedNodeAffinity *[]NodetemplatesV1TemplateConstraintsDedicatedNodeAffinity `json:"dedicatedNodeAffinity,omitempty"`

	// Enable/disable spot diversity policy. When enabled, autoscaler will try to balance between diverse and cost optimal instance types.
	EnableSpotDiversity *bool `json:"enableSpotDiversity"`

	// Fallback restore rate in seconds: defines how much time should pass before spot fallback should be attempted to be restored to real spot.
	FallbackRestoreRateSeconds *int32                                                       `json:"fallbackRestoreRateSeconds"`
	Gpu                        *NodetemplatesV1TemplateConstraintsGPUConstraints            `json:"gpu,omitempty"`
	InstanceFamilies           *NodetemplatesV1TemplateConstraintsInstanceFamilyConstraints `json:"instanceFamilies,omitempty"`

	// This template is gpu only. Setting this to true, will result in only instances with GPUs being considered.
	// In addition, this ensures that all of the added instances for this template won't have any nvidia taints.
	IsGpuOnly *bool  `json:"isGpuOnly"`
	MaxCpu    *int32 `json:"maxCpu"`
	MaxMemory *int32 `json:"maxMemory"`
	MinCpu    *int32 `json:"minCpu"`
	MinMemory *int32 `json:"minMemory"`

	// Should include on-demand instances in the considered pool.
	OnDemand *bool     `json:"onDemand"`
	Os       *[]string `json:"os,omitempty"`

	// Should include spot instances in the considered pool.
	// Note 1: if both spot and on-demand are false, then on-demand is assumed.
	// Note 2: if both spot and on-demand are true, then you can specify which lifecycle you want by adding
	//  nodeSelector:
	//        scheduling.cast.ai/spot: "true"
	// selector, or an equivalent affinity to the pod manifest and
	//  tolerations:
	//      - key: scheduling.cast.ai/spot
	//        operator: Exists
	// toleration.
	Spot *bool `json:"spot"`

	// Allowed node configuration price increase when diversifying instance types. E.g. if the value is 10%, then the overall price of diversified instance types can be 10% higher than the price of the
	// optimal configuration.
	SpotDiversityPriceIncreaseLimitPercent *int32 `json:"spotDiversityPriceIncreaseLimitPercent"`

	// Enable/disable spot interruption predictions.
	SpotInterruptionPredictionsEnabled *bool `json:"spotInterruptionPredictionsEnabled"`

	// Spot interruption predictions type. Can be either "aws-rebalance-recommendations" or "interruption-predictions".
	SpotInterruptionPredictionsType *string `json:"spotInterruptionPredictionsType"`
	StorageOptimized                *bool   `json:"storageOptimized"`

	// Spot instance fallback constraint - when true, on-demand instances will be created, when spots are unavailable.
	UseSpotFallbacks *bool `json:"useSpotFallbacks"`
}

// NodetemplatesV1TemplateConstraintsCPUManufacturer defines model for nodetemplates.v1.TemplateConstraints.CPUManufacturer.
type NodetemplatesV1TemplateConstraintsCPUManufacturer string

// - DISABLED: The constraint is disabled
//   - ENABLED: The constraint is enabled
type NodetemplatesV1TemplateConstraintsConstraintState string

// NodetemplatesV1TemplateConstraintsCustomPriority defines model for nodetemplates.v1.TemplateConstraints.CustomPriority.
type NodetemplatesV1TemplateConstraintsCustomPriority struct {
	Families *[]string `json:"families,omitempty"`
	OnDemand *bool     `json:"onDemand"`
	Spot     *bool     `json:"spot"`
}

// NodetemplatesV1TemplateConstraintsDedicatedNodeAffinity defines model for nodetemplates.v1.TemplateConstraints.DedicatedNodeAffinity.
type NodetemplatesV1TemplateConstraintsDedicatedNodeAffinity struct {
	// The affinity rules required for choosing the node.
	Affinity      *[]K8sSelectorV1KubernetesNodeAffinity `json:"affinity,omitempty"`
	AzName        *string                                `json:"azName,omitempty"`
	InstanceTypes *[]string                              `json:"instanceTypes,omitempty"`
	Name          *string                                `json:"name,omitempty"`
}

// NodetemplatesV1TemplateConstraintsGPUConstraints defines model for nodetemplates.v1.TemplateConstraints.GPUConstraints.
type NodetemplatesV1TemplateConstraintsGPUConstraints struct {
	ExcludeNames  *[]string `json:"excludeNames,omitempty"`
	IncludeNames  *[]string `json:"includeNames,omitempty"`
	Manufacturers *[]string `json:"manufacturers,omitempty"`
	MaxCount      *int32    `json:"maxCount"`
	MinCount      *int32    `json:"minCount"`
}

// NodetemplatesV1TemplateConstraintsInstanceFamilyConstraints defines model for nodetemplates.v1.TemplateConstraints.InstanceFamilyConstraints.
type NodetemplatesV1TemplateConstraintsInstanceFamilyConstraints struct {
	Exclude *[]string `json:"exclude,omitempty"`
	Include *[]string `json:"include,omitempty"`
}

// NodetemplatesV1UpdateNodeTemplate defines model for nodetemplates.v1.UpdateNodeTemplate.
type NodetemplatesV1UpdateNodeTemplate struct {
	ConfigurationId                          *string                             `json:"configurationId,omitempty"`
	Constraints                              *NodetemplatesV1TemplateConstraints `json:"constraints,omitempty"`
	CustomInstancesEnabled                   *bool                               `json:"customInstancesEnabled"`
	CustomInstancesWithExtendedMemoryEnabled *bool                               `json:"customInstancesWithExtendedMemoryEnabled"`
	CustomLabel                              *NodetemplatesV1Label               `json:"customLabel,omitempty"`

	// Custom labels for the template.
	// The passed values will be ignored if the field custom_label is present.
	CustomLabels *NodetemplatesV1UpdateNodeTemplate_CustomLabels `json:"customLabels,omitempty"`

	// Custom taints for the template.
	CustomTaints *[]NodetemplatesV1TaintWithOptionalEffect `json:"customTaints,omitempty"`

	// Flag whether this template is the default template for the cluster.
	IsDefault *bool `json:"isDefault,omitempty"`

	// This field is used to enable/disable autoscaling for the template.
	IsEnabled         *bool                                    `json:"isEnabled"`
	RebalancingConfig *NodetemplatesV1RebalancingConfiguration `json:"rebalancingConfig,omitempty"`

	// Marks whether the templated nodes will have a taint.
	ShouldTaint *bool `json:"shouldTaint"`
}

// Custom labels for the template.
// The passed values will be ignored if the field custom_label is present.
type NodetemplatesV1UpdateNodeTemplate_CustomLabels struct {
	AdditionalProperties map[string]string `json:"-"`
}

// Defines the minimum and maximum amount of vCPUs for cluster's worker nodes.
type PoliciesV1ClusterLimitsCpu struct {
	// Defines the maximum allowed amount of vCPUs in the whole cluster.
	MaxCores *int32 `json:"maxCores,omitempty"`

	// Defines the minimum allowed amount of CPUs in the whole cluster.
	MinCores *int32 `json:"minCores,omitempty"`
}

// Defines minimum and maximum amount of CPU the cluster can have.
type PoliciesV1ClusterLimitsPolicy struct {
	// Defines the minimum and maximum amount of vCPUs for cluster's worker nodes.
	Cpu *PoliciesV1ClusterLimitsCpu `json:"cpu,omitempty"`

	// Enable/disable cluster size limits policy.
	Enabled *bool `json:"enabled"`
}

// Defines the CAST AI Evictor component settings. Evictor watches the pods running in your cluster and looks for
// ways to compact them into fewer nodes, making nodes empty, which will be removed by the the empty worker nodes
// policy.
type PoliciesV1Evictor struct {
	// Enable/disable aggressive mode. By default, Evictor does not target nodes that are running unreplicated pods.
	// This mode will make the Evictor start considering application with just a single replica.
	AggressiveMode *bool `json:"aggressiveMode"`

	// * We have detected an already existing Evictor installation. If you want CAST AI to manage the Evictor instead,
	//   then you will need to remove the current installation first.
	//
	// Deprecated; use "status" instead.
	Allowed *bool `json:"allowed"`

	// Configure the interval duration between Evictor operations. This property can be used to lower or raise the
	// frequency of the Evictor's find-and-drain operations.
	CycleInterval *string `json:"cycleInterval"`

	// Enable/disable dry-run. This property allows you to prevent the Evictor from carrying any operations out and
	// preview the actions it would take.
	DryRun *bool `json:"dryRun"`

	// Enable/disable the Evictor policy. This will either install or uninstall the Evictor component in your cluster.
	Enabled *bool `json:"enabled"`

	// If enabled then Evictor will attempt to evict pods that have pod disruption budgets configured.
	IgnorePodDisruptionBudgets *bool `json:"ignorePodDisruptionBudgets"`

	// Configure the node grace period which controls the duration which must pass after a node has been created before
	// Evictor starts considering that node.
	NodeGracePeriodMinutes *int32 `json:"nodeGracePeriodMinutes"`

	// Configure the pod eviction failure back off interval. If pod eviction fails then Evictor will attempt
	// to evict it again after the amount of time specified here.
	PodEvictionFailureBackOffInterval *string `json:"podEvictionFailureBackOffInterval"`

	// Enable/disable scoped mode. By default, Evictor targets all nodes in the cluster. This mode will constrain in to
	// just the nodes which were created by CAST AI.
	ScopedMode *bool                    `json:"scopedMode"`
	Status     *PoliciesV1EvictorStatus `json:"status,omitempty"`
}

// PoliciesV1EvictorStatus defines model for policies.v1.EvictorStatus.
type PoliciesV1EvictorStatus string

// Defines cluster node constraints response.
type PoliciesV1GetClusterNodeConstraintsResponse struct {
	// The ID of the cluster.
	ClusterId *string `json:"clusterId,omitempty"`

	// A list of viable CPU:Memory combinations.
	Items *[]PoliciesV1GetClusterNodeConstraintsResponseCpuRam `json:"items,omitempty"`
}

// A viable CPU:Memory combination.
type PoliciesV1GetClusterNodeConstraintsResponseCpuRam struct {
	// Number of CPUs.
	CpuCores *int32 `json:"cpuCores,omitempty"`

	// Number of memory in MiB.
	RamMib *int32 `json:"ramMib,omitempty"`
}

// Defines Headroom for Unschedulable Pods.
type PoliciesV1Headroom struct {
	// Defines percentage of additional CPU capacity to be added.
	CpuPercentage *int32 `json:"cpuPercentage,omitempty"`

	// Defines whether Headroom is enabled.
	Enabled          *bool  `json:"enabled"`
	MemoryPercentage *int32 `json:"memoryPercentage,omitempty"`
}

// Defines the NodeConstraints that will be applied when autoscaling with UnschedulablePodsPolicy.
type PoliciesV1NodeConstraints struct {
	// Defines whether NodeConstraints are enabled.
	Enabled *bool `json:"enabled"`

	// Defines max CPU cores for the node to pick.
	MaxCpuCores *int32 `json:"maxCpuCores,omitempty"`

	// Defines max RAM in MiB for the node to pick.
	MaxRamMib *int32 `json:"maxRamMib,omitempty"`

	// Defines min CPU cores for the node to pick.
	MinCpuCores *int32 `json:"minCpuCores,omitempty"`

	// Defines min RAM in MiB for the node to pick.
	MinRamMib *int32 `json:"minRamMib,omitempty"`
}

// Node Downscaler defines policies for removing nodes based on the configured conditions.
type PoliciesV1NodeDownscaler struct {
	// Defines whether Node Downscaler should opt in for removing empty worker nodes when possible.
	EmptyNodes *PoliciesV1NodeDownscalerEmptyNodes `json:"emptyNodes,omitempty"`

	// Enable/disable node downscaler policy.
	Enabled *bool `json:"enabled"`

	// Defines the CAST AI Evictor component settings. Evictor watches the pods running in your cluster and looks for
	// ways to compact them into fewer nodes, making nodes empty, which will be removed by the the empty worker nodes
	// policy.
	Evictor *PoliciesV1Evictor `json:"evictor,omitempty"`
}

// Defines whether Node Downscaler should opt in for removing empty worker nodes when possible.
type PoliciesV1NodeDownscalerEmptyNodes struct {
	// * increasing the value will make the cluster more responsive to dynamic
	// * workloads in the expense of higher cluster cost.
	DelaySeconds *int32 `json:"delaySeconds"`

	// Enable/disable the empty worker nodes policy.
	Enabled *bool `json:"enabled"`
}

// Defines the CAST AI Pod Pinner component settings.
type PoliciesV1PodPinner struct {
	// Enable/disable the Pod Pinner policy. This will either enable or disable the Pod Pinner component's automatic management in your cluster.
	Enabled *bool `json:"enabled"`
}

// Defines the autoscaling policies details.
type PoliciesV1Policies struct {
	// Defines minimum and maximum amount of CPU the cluster can have.
	ClusterLimits *PoliciesV1ClusterLimitsPolicy `json:"clusterLimits,omitempty"`

	// Enable/disable all policies.
	Enabled *bool `json:"enabled"`

	// Run autoscaler in scoped mode. Only specifically marked pods will be considered for autoscaling, and only nodes
	// provisioned by autoscaler will be considered for downscaling.
	IsScopedMode *bool `json:"isScopedMode"`

	// Node Downscaler defines policies for removing nodes based on the configured conditions.
	NodeDownscaler *PoliciesV1NodeDownscaler `json:"nodeDownscaler,omitempty"`

	// Marks whether partial matching should be used when deciding which custom node template to select.
	NodeTemplatesPartialMatchingEnabled *bool `json:"nodeTemplatesPartialMatchingEnabled"`

	// Policy defining whether autoscaler can use spot instances for provisioning additional workloads.
	SpotInstances *PoliciesV1SpotInstances `json:"spotInstances,omitempty"`

	// Policy defining autoscaler's behavior when unscedulable pods were detected.
	UnschedulablePods *PoliciesV1UnschedulablePodsPolicy `json:"unschedulablePods,omitempty"`
}

// Policy defining whether autoscaler can use spot backups instead of spot instances when spot instances are not
// available.
type PoliciesV1SpotBackups struct {
	// Enable/disable spot backups policy.
	Enabled *bool `json:"enabled"`

	// Defines interval on how often spot backups restore to real spot should occur.
	SpotBackupRestoreRateSeconds *int32 `json:"spotBackupRestoreRateSeconds"`
}

// Policy defining whether autoscaler can use spot instances for provisioning additional workloads.
type PoliciesV1SpotInstances struct {
	// Enable/disable spot instances policy.
	Enabled *bool `json:"enabled"`

	// Max allowed reclaim rate when choosing spot instance type. E.g. if the value is 10%, instance types having 10% or
	// higher reclaim rate will not be considered. Set to zero to use all instance types regardless of reclaim rate.
	MaxReclaimRate *int32 `json:"maxReclaimRate"`

	// Policy defining whether autoscaler can use spot backups instead of spot instances when spot instances are not
	// available.
	SpotBackups *PoliciesV1SpotBackups `json:"spotBackups,omitempty"`

	// Enable/disable spot diversity policy.
	//
	// When enabled, autoscaler will try to balance between diverse and cost optimal instance types.
	SpotDiversityEnabled *bool `json:"spotDiversityEnabled"`

	// Allowed node configuration price increase when diversifying instance types.
	// E.g. if the value is 10%, then the overall price of diversified instance types can be 10% higher than the price of the optimal configuration.
	SpotDiversityPriceIncreaseLimitPercent *int32 `json:"spotDiversityPriceIncreaseLimitPercent"`

	// SpotInterruptionPredictions allows to configure the handling of SPOT interrupt predictions.
	SpotInterruptionPredictions *PoliciesV1SpotInterruptionPredictions `json:"spotInterruptionPredictions,omitempty"`
}

// SpotInterruptionPredictions allows to configure the handling of SPOT interrupt predictions.
type PoliciesV1SpotInterruptionPredictions struct {
	// Enable/disable spot interruption predictions.
	Enabled *bool `json:"enabled,omitempty"`

	// SpotInterruptionPredictionsType defines the type of the SPOT interruption predictions to enable.
	Type *PoliciesV1SpotInterruptionPredictionsType `json:"type,omitempty"`
}

// SpotInterruptionPredictionsType defines the type of the SPOT interruption predictions to enable.
type PoliciesV1SpotInterruptionPredictionsType string

// Policy defining autoscaler's behavior when unscedulable pods were detected.
type PoliciesV1UnschedulablePodsPolicy struct {
	// Defines custom instance usage settings.
	CustomInstancesEnabled *bool `json:"customInstancesEnabled"`

	// Defines default ratio of 1 CPU to Volume GiB  which will be summed with minimum value when creating new nodes.
	// If set to 5, the ration would be: 1 CPU : 5 GiB.
	// For example a node with 16 CPU would have (16 * 5 GiB) + minimum(100GiB) = 180 GiB volume size.
	// Deprecated. Input only (for backwards-compatibility, ignored).
	DiskGibToCpuRatio *int32 `json:"diskGibToCpuRatio"`

	// Enable/disable unschedulable pods detection policy.
	Enabled *bool `json:"enabled"`

	// Defines Headroom for Unschedulable Pods.
	Headroom *PoliciesV1Headroom `json:"headroom,omitempty"`

	// Defines Headroom for Unschedulable Pods.
	HeadroomSpot *PoliciesV1Headroom `json:"headroomSpot,omitempty"`

	// Defines the NodeConstraints that will be applied when autoscaling with UnschedulablePodsPolicy.
	NodeConstraints *PoliciesV1NodeConstraints `json:"nodeConstraints,omitempty"`

	// Defines the CAST AI Pod Pinner component settings.
	PodPinner *PoliciesV1PodPinner `json:"podPinner,omitempty"`
}

// ScheduledrebalancingV1DeleteRebalancingJobResponse defines model for scheduledrebalancing.v1.DeleteRebalancingJobResponse.
type ScheduledrebalancingV1DeleteRebalancingJobResponse = map[string]interface{}

// ScheduledrebalancingV1DeleteRebalancingScheduleResponse defines model for scheduledrebalancing.v1.DeleteRebalancingScheduleResponse.
type ScheduledrebalancingV1DeleteRebalancingScheduleResponse = map[string]interface{}

// Defines the conditions which must be met in order to fully execute the plan.
type ScheduledrebalancingV1ExecutionConditions struct {
	// Identifies the minimum percentage of predicted savings that should be achieved.
	// The rebalancing plan will not proceed after creating the nodes if the achieved savings percentage
	// is not achieved.
	// This field's value will not be considered if the initially predicted savings are negative.
	AchievedSavingsPercentage *int32 `json:"achievedSavingsPercentage,omitempty"`
	Enabled                   *bool  `json:"enabled,omitempty"`
}

// JobStatus defines rebalancing job's last execution status.
type ScheduledrebalancingV1JobStatus string

// ScheduledrebalancingV1LaunchConfiguration defines model for scheduledrebalancing.v1.LaunchConfiguration.
type ScheduledrebalancingV1LaunchConfiguration struct {
	// Specifies amount of time since node creation before the node is allowed to be considered for automated rebalancing.
	NodeTtlSeconds *int32 `json:"nodeTtlSeconds,omitempty"`

	// Maximum number of nodes that will be selected for rebalancing.
	NumTargetedNodes             *int32                                              `json:"numTargetedNodes,omitempty"`
	RebalancingOptions           *ScheduledrebalancingV1RebalancingOptions           `json:"rebalancingOptions,omitempty"`
	Selector                     *ScheduledrebalancingV1NodeSelector                 `json:"selector,omitempty"`
	TargetNodeSelectionAlgorithm *ScheduledrebalancingV1TargetNodeSelectionAlgorithm `json:"targetNodeSelectionAlgorithm,omitempty"`
}

// ScheduledrebalancingV1ListAvailableRebalancingTZResponse defines model for scheduledrebalancing.v1.ListAvailableRebalancingTZResponse.
type ScheduledrebalancingV1ListAvailableRebalancingTZResponse struct {
	TimeZones *[]ScheduledrebalancingV1TimeZone `json:"timeZones,omitempty"`
}

// ScheduledrebalancingV1ListRebalancingJobsResponse defines model for scheduledrebalancing.v1.ListRebalancingJobsResponse.
type ScheduledrebalancingV1ListRebalancingJobsResponse struct {
	Jobs *[]ScheduledrebalancingV1RebalancingJob `json:"jobs,omitempty"`
}

// ScheduledrebalancingV1ListRebalancingSchedulesResponse defines model for scheduledrebalancing.v1.ListRebalancingSchedulesResponse.
type ScheduledrebalancingV1ListRebalancingSchedulesResponse struct {
	Schedules *[]ScheduledrebalancingV1RebalancingSchedule `json:"schedules,omitempty"`
}

// ScheduledrebalancingV1Node defines model for scheduledrebalancing.v1.Node.
type ScheduledrebalancingV1Node struct {
	Id *string `json:"id,omitempty"`
}

// ScheduledrebalancingV1NodeSelector defines model for scheduledrebalancing.v1.NodeSelector.
type ScheduledrebalancingV1NodeSelector struct {
	// Required. A list of node selector terms. The terms are ORed.
	NodeSelectorTerms *[]ScheduledrebalancingV1NodeSelectorTerm `json:"nodeSelectorTerms,omitempty"`
}

// A node selector requirement is a selector that contains values, a key, and an operator
// that relates the key and values.
type ScheduledrebalancingV1NodeSelectorRequirement struct {
	// The label key that the selector applies to.
	Key *string `json:"key"`

	// Represents a key's relationship to a set of values.
	// Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
	Operator *string   `json:"operator"`
	Values   *[]string `json:"values,omitempty"`
}

// ScheduledrebalancingV1NodeSelectorTerm defines model for scheduledrebalancing.v1.NodeSelectorTerm.
type ScheduledrebalancingV1NodeSelectorTerm struct {
	MatchExpressions *[]ScheduledrebalancingV1NodeSelectorRequirement `json:"matchExpressions,omitempty"`
	MatchFields      *[]ScheduledrebalancingV1NodeSelectorRequirement `json:"matchFields,omitempty"`
}

// ScheduledrebalancingV1PreviewRebalancingScheduleResponse defines model for scheduledrebalancing.v1.PreviewRebalancingScheduleResponse.
type ScheduledrebalancingV1PreviewRebalancingScheduleResponse struct {
	AffectedNodes *[]ScheduledrebalancingV1Node `json:"affectedNodes,omitempty"`
	WillTriggerAt *[]time.Time                  `json:"willTriggerAt,omitempty"`
}

// ScheduledrebalancingV1RebalancingJob defines model for scheduledrebalancing.v1.RebalancingJob.
type ScheduledrebalancingV1RebalancingJob struct {
	ClusterId *string `json:"clusterId,omitempty"`

	// Specifies if job is currently enabled; disabled jobs are not triggered.
	Enabled               *bool      `json:"enabled"`
	Id                    *string    `json:"id,omitempty"`
	LastTriggerAt         *time.Time `json:"lastTriggerAt"`
	NextTriggerAt         *time.Time `json:"nextTriggerAt"`
	RebalancingPlanId     *string    `json:"rebalancingPlanId,omitempty"`
	RebalancingScheduleId *string    `json:"rebalancingScheduleId,omitempty"`

	// JobStatus defines rebalancing job's last execution status.
	Status *ScheduledrebalancingV1JobStatus `json:"status,omitempty"`
}

// ScheduledrebalancingV1RebalancingOptions defines model for scheduledrebalancing.v1.RebalancingOptions.
type ScheduledrebalancingV1RebalancingOptions struct {
	// When enabled will also consider rebalancing problematic pods (pods without controller, job pods, pods with removal-disabled annotation).
	AggressiveMode *bool `json:"aggressiveMode"`

	// Defines whether the nodes that failed to get drained until a predefined timeout, will be kept with a
	// rebalancing.cast.ai/status=drain-failed annotation instead of forcefully drained.
	EvictGracefully *bool `json:"evictGracefully"`

	// Defines the conditions which must be met in order to fully execute the plan.
	ExecutionConditions   *ScheduledrebalancingV1ExecutionConditions `json:"executionConditions,omitempty"`
	KeepDrainTimeoutNodes *bool                                      `json:"keepDrainTimeoutNodes"`

	// Minimum number of nodes that should be kept in the cluster after rebalancing.
	MinNodes *int32 `json:"minNodes,omitempty"`
}

// ScheduledrebalancingV1RebalancingSchedule defines model for scheduledrebalancing.v1.RebalancingSchedule.
type ScheduledrebalancingV1RebalancingSchedule struct {
	Id                  *string                                   `json:"id,omitempty"`
	Jobs                *[]ScheduledrebalancingV1RebalancingJob   `json:"jobs,omitempty"`
	LastTriggerAt       *time.Time                                `json:"lastTriggerAt"`
	LaunchConfiguration ScheduledrebalancingV1LaunchConfiguration `json:"launchConfiguration"`
	Name                string                                    `json:"name"`
	NextTriggerAt       *time.Time                                `json:"nextTriggerAt,omitempty"`
	Schedule            ScheduledrebalancingV1Schedule            `json:"schedule"`
	TriggerConditions   ScheduledrebalancingV1TriggerConditions   `json:"triggerConditions"`
}

// ScheduledrebalancingV1RebalancingScheduleUpdate defines model for scheduledrebalancing.v1.RebalancingScheduleUpdate.
type ScheduledrebalancingV1RebalancingScheduleUpdate struct {
	LaunchConfiguration *ScheduledrebalancingV1LaunchConfiguration `json:"launchConfiguration,omitempty"`
	Name                *string                                    `json:"name,omitempty"`
	Schedule            *ScheduledrebalancingV1Schedule            `json:"schedule,omitempty"`
	TriggerConditions   *ScheduledrebalancingV1TriggerConditions   `json:"triggerConditions,omitempty"`
}

// ScheduledrebalancingV1Schedule defines model for scheduledrebalancing.v1.Schedule.
type ScheduledrebalancingV1Schedule struct {
	Cron string `json:"cron"`
}

// ScheduledrebalancingV1TargetNodeSelectionAlgorithm defines model for scheduledrebalancing.v1.TargetNodeSelectionAlgorithm.
type ScheduledrebalancingV1TargetNodeSelectionAlgorithm string

// ScheduledrebalancingV1TimeZone defines model for scheduledrebalancing.v1.TimeZone.
type ScheduledrebalancingV1TimeZone struct {
	Name   *string `json:"name,omitempty"`
	Offset *string `json:"offset,omitempty"`
}

// ScheduledrebalancingV1TriggerConditions defines model for scheduledrebalancing.v1.TriggerConditions.
type ScheduledrebalancingV1TriggerConditions struct {
	// When true, the rebalancing job will be triggered regardless of the expected savings.
	IgnoreSavings     *bool    `json:"ignoreSavings"`
	SavingsPercentage *float32 `json:"savingsPercentage,omitempty"`
}

// WorkloadoptimizationV1AggregatedMetrics defines model for workloadoptimization.v1.AggregatedMetrics.
type WorkloadoptimizationV1AggregatedMetrics struct {
	Max float64 `json:"max"`
	Min float64 `json:"min"`
	P25 float64 `json:"p25"`
	P50 float64 `json:"p50"`
	P75 float64 `json:"p75"`
}

// WorkloadoptimizationV1ApplyType defines model for workloadoptimization.v1.ApplyType.
type WorkloadoptimizationV1ApplyType string

// WorkloadoptimizationV1AssignScalingPolicyWorkloadsResponse defines model for workloadoptimization.v1.AssignScalingPolicyWorkloadsResponse.
type WorkloadoptimizationV1AssignScalingPolicyWorkloadsResponse = map[string]interface{}

// WorkloadoptimizationV1ConfigurationChangedEvent defines model for workloadoptimization.v1.ConfigurationChangedEvent.
type WorkloadoptimizationV1ConfigurationChangedEvent struct {
	// Defines possible options for workload management.
	// READ_ONLY - workload watched (metrics collected), but no actions may be performed by CAST AI.
	// MANAGED - workload watched (metrics collected), CAST AI may perform actions on the workload.
	ManagementOption     WorkloadoptimizationV1ManagementOption     `json:"managementOption"`
	RecommendationConfig WorkloadoptimizationV1RecommendationConfig `json:"recommendationConfig"`
}

// WorkloadoptimizationV1ConfigurationChangedEventV2 defines model for workloadoptimization.v1.ConfigurationChangedEventV2.
type WorkloadoptimizationV1ConfigurationChangedEventV2 struct {
	Current  WorkloadoptimizationV1ConfigurationChangedV2 `json:"current"`
	Previous WorkloadoptimizationV1ConfigurationChangedV2 `json:"previous"`
}

// WorkloadoptimizationV1ConfigurationChangedV2 defines model for workloadoptimization.v1.ConfigurationChangedV2.
type WorkloadoptimizationV1ConfigurationChangedV2 struct {
	ScalingPolicyConfig WorkloadoptimizationV1ScalingPolicyConfig `json:"scalingPolicyConfig"`
	WorkloadConfig      WorkloadoptimizationV1WorkloadConfigV2    `json:"workloadConfig"`
}

// WorkloadoptimizationV1Container defines model for workloadoptimization.v1.Container.
type WorkloadoptimizationV1Container struct {
	// Name of the container.
	Name           string                           `json:"name"`
	Recommendation *WorkloadoptimizationV1Resources `json:"recommendation,omitempty"`
	Resources      *WorkloadoptimizationV1Resources `json:"resources,omitempty"`
}

// WorkloadoptimizationV1ContainerConfigUpdate defines model for workloadoptimization.v1.ContainerConfigUpdate.
type WorkloadoptimizationV1ContainerConfigUpdate struct {
	ContainerName string                                      `json:"containerName"`
	Cpu           *WorkloadoptimizationV1ResourceConfigUpdate `json:"cpu,omitempty"`
	Memory        *WorkloadoptimizationV1ResourceConfigUpdate `json:"memory,omitempty"`
}

// WorkloadoptimizationV1ContainerConstraints defines model for workloadoptimization.v1.ContainerConstraints.
type WorkloadoptimizationV1ContainerConstraints struct {
	ContainerName string                                `json:"containerName"`
	Cpu           *WorkloadoptimizationV1ResourceConfig `json:"cpu,omitempty"`
	Memory        *WorkloadoptimizationV1ResourceConfig `json:"memory,omitempty"`
}

// WorkloadoptimizationV1CpuMetrics defines model for workloadoptimization.v1.CpuMetrics.
type WorkloadoptimizationV1CpuMetrics struct {
	TotalCpuCores    []WorkloadoptimizationV1TimeSeriesMetric `json:"totalCpuCores"`
	TotalCpuCoresMax float64                                  `json:"totalCpuCoresMax"`
	TotalCpuCoresMin float64                                  `json:"totalCpuCoresMin"`
}

// WorkloadoptimizationV1DeleteWorkloadScalingPolicyResponse defines model for workloadoptimization.v1.DeleteWorkloadScalingPolicyResponse.
type WorkloadoptimizationV1DeleteWorkloadScalingPolicyResponse = map[string]interface{}

// WorkloadoptimizationV1Event defines model for workloadoptimization.v1.Event.
type WorkloadoptimizationV1Event struct {
	ConfigurationChanged       *WorkloadoptimizationV1ConfigurationChangedEvent       `json:"configurationChanged,omitempty"`
	ConfigurationChangedV2     *WorkloadoptimizationV1ConfigurationChangedEventV2     `json:"configurationChangedV2,omitempty"`
	OomKill                    *WorkloadoptimizationV1OOMKillEvent                    `json:"oomKill,omitempty"`
	RecommendationApplied      *WorkloadoptimizationV1RecommendationAppliedEvent      `json:"recommendationApplied,omitempty"`
	RecommendedPodCountChanged *WorkloadoptimizationV1RecommendedPodCountChangedEvent `json:"recommendedPodCountChanged,omitempty"`
	RecommendedRequestsChanged *WorkloadoptimizationV1RecommendedRequestsChangedEvent `json:"recommendedRequestsChanged,omitempty"`
	ScalingPolicyCreated       *WorkloadoptimizationV1ScalingPolicyCreated            `json:"scalingPolicyCreated,omitempty"`
	ScalingPolicyDeleted       *WorkloadoptimizationV1ScalingPolicyDeleted            `json:"scalingPolicyDeleted,omitempty"`
	Surge                      *WorkloadoptimizationV1SurgeEvent                      `json:"surge,omitempty"`
}

// WorkloadoptimizationV1EventContainer defines model for workloadoptimization.v1.EventContainer.
type WorkloadoptimizationV1EventContainer struct {
	Name      string                          `json:"name"`
	Resources WorkloadoptimizationV1Resources `json:"resources"`
}

// EventType defines possible types for workload events.
type WorkloadoptimizationV1EventType string

// WorkloadoptimizationV1GetAgentStatusResponse defines model for workloadoptimization.v1.GetAgentStatusResponse.
type WorkloadoptimizationV1GetAgentStatusResponse struct {
	CastAgentCurrentVersion          *string `json:"castAgentCurrentVersion"`
	CurrentVersion                   *string `json:"currentVersion"`
	HpaSupportedFromCastAgentVersion *string `json:"hpaSupportedFromCastAgentVersion"`
	LatestVersion                    *string `json:"latestVersion"`

	// AgentStatus defines the status of workload-autoscaler.
	Status WorkloadoptimizationV1GetAgentStatusResponseAgentStatus `json:"status"`
}

// AgentStatus defines the status of workload-autoscaler.
type WorkloadoptimizationV1GetAgentStatusResponseAgentStatus string

// WorkloadoptimizationV1GetInstallCmdResponse defines model for workloadoptimization.v1.GetInstallCmdResponse.
type WorkloadoptimizationV1GetInstallCmdResponse struct {
	Script string `json:"script"`
}

// WorkloadoptimizationV1GetWorkloadResponse defines model for workloadoptimization.v1.GetWorkloadResponse.
type WorkloadoptimizationV1GetWorkloadResponse struct {
	Metrics  *WorkloadoptimizationV1WorkloadMetrics `json:"metrics,omitempty"`
	Workload WorkloadoptimizationV1Workload         `json:"workload"`
}

// WorkloadoptimizationV1GetWorkloadsSummaryResponse defines model for workloadoptimization.v1.GetWorkloadsSummaryResponse.
type WorkloadoptimizationV1GetWorkloadsSummaryResponse struct {
	// Number of workloads that are managed by annotations.
	AnnotationManagedCount int32 `json:"annotationManagedCount"`

	// Number of workloads that are managed by API.
	ApiManagedCount int32 `json:"apiManagedCount"`

	// Difference between recommended and requested CPU cores.
	CpuCoresDifference float64 `json:"cpuCoresDifference"`

	// Number of workloads with horizontal optimization enabled.
	HpaOptimizedCount int32 `json:"hpaOptimizedCount"`

	// Number of workloads with vertical and horizontal optimization enabled.
	HpaVpaOptimizedCount int32 `json:"hpaVpaOptimizedCount"`

	// Difference between recommended and actually used memory.
	MemoryDifference float64 `json:"memoryDifference"`

	// Number of all optimized workloads.
	OptimizedCount int32 `json:"optimizedCount"`

	// Number of recommended CPU cores.
	RecommendedCpuCores float64 `json:"recommendedCpuCores"`

	// Recommended memory in Gi.
	RecommendedMemory float64 `json:"recommendedMemory"`

	// Number of requested CPU cores.
	RequestedCpuCores float64 `json:"requestedCpuCores"`

	// Requested memory in Gi.
	RequestedMemory float64 `json:"requestedMemory"`

	// Total number of workloads.
	TotalCount int32 `json:"totalCount"`

	// Number of workloads with vertical optimization enabled.
	VpaOptimizedCount int32 `json:"vpaOptimizedCount"`
}

// WorkloadoptimizationV1HPAConfig defines model for workloadoptimization.v1.HPAConfig.
type WorkloadoptimizationV1HPAConfig struct {
	// Defines possible options for workload management.
	// READ_ONLY - workload watched (metrics collected), but no actions may be performed by CAST AI.
	// MANAGED - workload watched (metrics collected), CAST AI may perform actions on the workload.
	ManagementOption WorkloadoptimizationV1ManagementOption `json:"managementOption"`

	// Max replicas a workload can have.
	MaxReplicas *int32 `json:"maxReplicas"`

	// Min replicas a workload can have.
	MinReplicas *int32 `json:"minReplicas"`
}

// WorkloadoptimizationV1HPAConfigUpdate defines model for workloadoptimization.v1.HPAConfigUpdate.
type WorkloadoptimizationV1HPAConfigUpdate struct {
	// Defines possible options for workload management.
	// READ_ONLY - workload watched (metrics collected), but no actions may be performed by CAST AI.
	// MANAGED - workload watched (metrics collected), CAST AI may perform actions on the workload.
	ManagementOption *WorkloadoptimizationV1ManagementOption `json:"managementOption,omitempty"`
	MaxReplicas      *int32                                  `json:"maxReplicas"`
	MinReplicas      *int32                                  `json:"minReplicas"`
}

// WorkloadoptimizationV1InitiatedBy defines model for workloadoptimization.v1.InitiatedBy.
type WorkloadoptimizationV1InitiatedBy struct {
	Email *string `json:"email"`
	Id    string  `json:"id"`
	Name  *string `json:"name"`
}

// WorkloadoptimizationV1KeyValuePair defines model for workloadoptimization.v1.KeyValuePair.
type WorkloadoptimizationV1KeyValuePair struct {
	Key   string `json:"key"`
	Value string `json:"value"`
}

// WorkloadoptimizationV1ListWorkloadEventsResponse defines model for workloadoptimization.v1.ListWorkloadEventsResponse.
type WorkloadoptimizationV1ListWorkloadEventsResponse struct {
	Items []WorkloadoptimizationV1WorkloadEvent `json:"items"`

	// The token to request the next page of results.
	NextCursor *string `json:"nextCursor"`
}

// WorkloadoptimizationV1ListWorkloadScalingPoliciesResponse defines model for workloadoptimization.v1.ListWorkloadScalingPoliciesResponse.
type WorkloadoptimizationV1ListWorkloadScalingPoliciesResponse struct {
	Items []WorkloadoptimizationV1WorkloadScalingPolicy `json:"items"`
}

// WorkloadoptimizationV1ListWorkloadsResponse defines model for workloadoptimization.v1.ListWorkloadsResponse.
type WorkloadoptimizationV1ListWorkloadsResponse struct {
	Workloads []WorkloadoptimizationV1Workload `json:"workloads"`
}

// Defines sources that can manage the workload.
// API - workload is managed by Cast API.
// Annotations - workload is managed by annotations.
type WorkloadoptimizationV1ManagedBy string

// Defines possible options for workload management.
// READ_ONLY - workload watched (metrics collected), but no actions may be performed by CAST AI.
// MANAGED - workload watched (metrics collected), CAST AI may perform actions on the workload.
type WorkloadoptimizationV1ManagementOption string

// WorkloadoptimizationV1NewWorkloadScalingPolicy defines model for workloadoptimization.v1.NewWorkloadScalingPolicy.
type WorkloadoptimizationV1NewWorkloadScalingPolicy struct {
	ApplyType WorkloadoptimizationV1ApplyType `json:"applyType"`

	// Confidence threshold used for evaluation if the recommendation should be applied. If not set, the default value(0.9) will be used.
	ConfidenceThreshold    *float64                                     `json:"confidenceThreshold"`
	Name                   string                                       `json:"name"`
	RecommendationPolicies WorkloadoptimizationV1RecommendationPolicies `json:"recommendationPolicies"`
}

// WorkloadoptimizationV1OOMKillEvent defines model for workloadoptimization.v1.OOMKillEvent.
type WorkloadoptimizationV1OOMKillEvent struct {
	Containers []WorkloadoptimizationV1EventContainer `json:"containers"`
}

// WorkloadoptimizationV1PodMetrics defines model for workloadoptimization.v1.PodMetrics.
type WorkloadoptimizationV1PodMetrics struct {
	PodCount    []WorkloadoptimizationV1TimeSeriesMetric `json:"podCount"`
	PodCountMax float64                                  `json:"podCountMax"`
	PodCountMin float64                                  `json:"podCountMin"`
}

// WorkloadoptimizationV1RecommendationAppliedEvent defines model for workloadoptimization.v1.RecommendationAppliedEvent.
type WorkloadoptimizationV1RecommendationAppliedEvent struct {
	ApplyType WorkloadoptimizationV1ApplyType                        `json:"applyType"`
	Current   WorkloadoptimizationV1RecommendationAppliedEventChange `json:"current"`
	Previous  WorkloadoptimizationV1RecommendationAppliedEventChange `json:"previous"`
}

// WorkloadoptimizationV1RecommendationAppliedEventChange defines model for workloadoptimization.v1.RecommendationAppliedEvent.Change.
type WorkloadoptimizationV1RecommendationAppliedEventChange struct {
	Containers *[]WorkloadoptimizationV1EventContainer `json:"containers,omitempty"`
}

// WorkloadoptimizationV1RecommendationConfig defines model for workloadoptimization.v1.RecommendationConfig.
type WorkloadoptimizationV1RecommendationConfig struct {
	Cpu    WorkloadoptimizationV1ResourceConfig `json:"cpu"`
	Memory WorkloadoptimizationV1ResourceConfig `json:"memory"`
}

// WorkloadoptimizationV1RecommendationEvent defines model for workloadoptimization.v1.RecommendationEvent.
type WorkloadoptimizationV1RecommendationEvent struct {
	// Defines possible options for recommendation events.
	//
	//  - RECOMMENDATION_EVENT_TYPE_REVERT: RECOMMENDATION_EVENT_TYPE_REVERT - recommendation replicas were reverted.
	Type WorkloadoptimizationV1RecommendationEventType `json:"type"`
}

// Defines possible options for recommendation events.
//
//   - RECOMMENDATION_EVENT_TYPE_REVERT: RECOMMENDATION_EVENT_TYPE_REVERT - recommendation replicas were reverted.
type WorkloadoptimizationV1RecommendationEventType string

// WorkloadoptimizationV1RecommendationPolicies defines model for workloadoptimization.v1.RecommendationPolicies.
type WorkloadoptimizationV1RecommendationPolicies struct {
	Cpu WorkloadoptimizationV1ResourcePolicies `json:"cpu"`

	// Defines possible options for workload management.
	// READ_ONLY - workload watched (metrics collected), but no actions may be performed by CAST AI.
	// MANAGED - workload watched (metrics collected), CAST AI may perform actions on the workload.
	ManagementOption WorkloadoptimizationV1ManagementOption `json:"managementOption"`
	Memory           WorkloadoptimizationV1ResourcePolicies `json:"memory"`
	Startup          *WorkloadoptimizationV1StartupSettings `json:"startup,omitempty"`
}

// WorkloadoptimizationV1RecommendedPodCountChangedEvent defines model for workloadoptimization.v1.RecommendedPodCountChangedEvent.
type WorkloadoptimizationV1RecommendedPodCountChangedEvent struct {
	Current  int32 `json:"current"`
	Previous int32 `json:"previous"`
}

// WorkloadoptimizationV1RecommendedRequestsChangedEvent defines model for workloadoptimization.v1.RecommendedRequestsChangedEvent.
type WorkloadoptimizationV1RecommendedRequestsChangedEvent struct {
	ApplyType WorkloadoptimizationV1ApplyType                             `json:"applyType"`
	Current   WorkloadoptimizationV1RecommendedRequestsChangedEventChange `json:"current"`
	Previous  WorkloadoptimizationV1RecommendedRequestsChangedEventChange `json:"previous"`
}

// WorkloadoptimizationV1RecommendedRequestsChangedEventChange defines model for workloadoptimization.v1.RecommendedRequestsChangedEvent.Change.
type WorkloadoptimizationV1RecommendedRequestsChangedEventChange struct {
	Containers *[]WorkloadoptimizationV1EventContainer `json:"containers,omitempty"`
}

// WorkloadoptimizationV1ResourceConfig defines model for workloadoptimization.v1.ResourceConfig.
type WorkloadoptimizationV1ResourceConfig struct {
	// The threshold of when to apply the recommendation - when diff of current requests and recommendation is greater than this, apply the recommendation.
	ApplyThreshold *float64 `json:"applyThreshold"`

	// The arguments for the function - i.e. for a quantile, this should be a [0, 1] float.
	Args []string `json:"args"`

	// The function which to use when calculating the resource recommendation.
	// QUANTILE - the quantile function.
	// MAX - the max function.
	Function WorkloadoptimizationV1ResourceConfigFunction `json:"function"`

	// Period of time over which the resource recommendation is calculated (default value is 24 hours).
	LookBackPeriodSeconds *int32 `json:"lookBackPeriodSeconds"`

	// Max values for the recommendation. For memory - this is in MiB, for CPU - this is in cores.
	// If not set, there will be no upper bound for the recommendation (default behaviour).
	Max *float64 `json:"max"`

	// Min values for the recommendation. For memory - this is in MiB, for CPU - this is in cores.
	// If not set, there will be no lower bound for the recommendation (default behaviour).
	Min *float64 `json:"min"`

	// The overhead for the recommendation, the formula is: (1 + overhead) * function(args).
	Overhead float64 `json:"overhead"`
}

// The function which to use when calculating the resource recommendation.
// QUANTILE - the quantile function.
// MAX - the max function.
type WorkloadoptimizationV1ResourceConfigFunction string

// WorkloadoptimizationV1ResourceConfigUpdate defines model for workloadoptimization.v1.ResourceConfigUpdate.
type WorkloadoptimizationV1ResourceConfigUpdate struct {
	// Max values for the recommendation. For memory - this is in MiB, for CPU - this is in cores.
	// If not set, there will be no upper bound for the recommendation (default behaviour).
	Max *float64 `json:"max"`

	// Min values for the recommendation. For memory - this is in MiB, for CPU - this is in cores.
	// If not set, there will be no lower bound for the recommendation (default behaviour).
	Min *float64 `json:"min"`
}

// WorkloadoptimizationV1ResourceMetrics defines model for workloadoptimization.v1.ResourceMetrics.
type WorkloadoptimizationV1ResourceMetrics struct {
	Max       float64   `json:"max"`
	Min       float64   `json:"min"`
	P25       float64   `json:"p25"`
	P50       float64   `json:"p50"`
	P75       float64   `json:"p75"`
	Rec       float64   `json:"rec"`
	Req       float64   `json:"req"`
	Timestamp time.Time `json:"timestamp"`
}

// WorkloadoptimizationV1ResourcePolicies defines model for workloadoptimization.v1.ResourcePolicies.
type WorkloadoptimizationV1ResourcePolicies struct {
	// The threshold of when to apply the recommendation - when diff of current requests and recommendation is greater than this, apply the recommendation.
	ApplyThreshold float64 `json:"applyThreshold"`

	// The arguments for the function - i.e. for a quantile, this should be a [0, 1] float.
	Args []string `json:"args"`

	// The function which to use when calculating the resource recommendation.
	// QUANTILE - the quantile function.
	// MAX - the max function.
	Function WorkloadoptimizationV1ResourcePoliciesFunction `json:"function"`

	// Period of time over which the resource recommendation is calculated (default value is 24 hours).
	LookBackPeriodSeconds *int32 `json:"lookBackPeriodSeconds"`

	// The overhead for the recommendation, the formula is: (1 + overhead) * function(args).
	Overhead float64 `json:"overhead"`
}

// The function which to use when calculating the resource recommendation.
// QUANTILE - the quantile function.
// MAX - the max function.
type WorkloadoptimizationV1ResourcePoliciesFunction string

// WorkloadoptimizationV1ResourceQuantity defines model for workloadoptimization.v1.ResourceQuantity.
type WorkloadoptimizationV1ResourceQuantity struct {
	CpuCores  *float64 `json:"cpuCores"`
	MemoryGib *float64 `json:"memoryGib"`
}

// WorkloadoptimizationV1Resources defines model for workloadoptimization.v1.Resources.
type WorkloadoptimizationV1Resources struct {
	Limits   *WorkloadoptimizationV1ResourceQuantity `json:"limits,omitempty"`
	Requests *WorkloadoptimizationV1ResourceQuantity `json:"requests,omitempty"`
}

// WorkloadoptimizationV1ScalingPolicyConfig defines model for workloadoptimization.v1.ScalingPolicyConfig.
type WorkloadoptimizationV1ScalingPolicyConfig struct {
	Id   string `json:"id"`
	Name string `json:"name"`
}

// WorkloadoptimizationV1ScalingPolicyCreated defines model for workloadoptimization.v1.ScalingPolicyCreated.
type WorkloadoptimizationV1ScalingPolicyCreated struct {
	Policy WorkloadoptimizationV1WorkloadScalingPolicy `json:"policy"`
}

// WorkloadoptimizationV1ScalingPolicyDeleted defines model for workloadoptimization.v1.ScalingPolicyDeleted.
type WorkloadoptimizationV1ScalingPolicyDeleted struct {
	Policy WorkloadoptimizationV1WorkloadScalingPolicy `json:"policy"`
}

// WorkloadoptimizationV1StartupSettings defines model for workloadoptimization.v1.StartupSettings.
type WorkloadoptimizationV1StartupSettings struct {
	// Defines the duration (in seconds) during which elevated resource usage is expected at startup.
	// When set, recommendations will be adjusted to disregard resource spikes within this period.
	// If not specified, the workload will receive standard recommendations without startup considerations.
	PeriodSeconds *int32 `json:"periodSeconds"`
}

// WorkloadoptimizationV1SurgeContainer defines model for workloadoptimization.v1.SurgeContainer.
type WorkloadoptimizationV1SurgeContainer struct {
	Name              string                                 `json:"name"`
	RecommendedBefore WorkloadoptimizationV1ResourceQuantity `json:"recommendedBefore"`
	Surge             WorkloadoptimizationV1ResourceQuantity `json:"surge"`
}

// WorkloadoptimizationV1SurgeEvent defines model for workloadoptimization.v1.SurgeEvent.
type WorkloadoptimizationV1SurgeEvent struct {
	Containers []WorkloadoptimizationV1SurgeContainer `json:"containers"`
}

// WorkloadoptimizationV1TimeSeriesMetric defines model for workloadoptimization.v1.TimeSeriesMetric.
type WorkloadoptimizationV1TimeSeriesMetric struct {
	Timestamp time.Time `json:"timestamp"`
	Value     float64   `json:"value"`
}

// WorkloadoptimizationV1UpdateWorkload defines model for workloadoptimization.v1.UpdateWorkload.
type WorkloadoptimizationV1UpdateWorkload struct {
	// Defines the scaling policy ID assigned to the workload.
	ScalingPolicyId string                                      `json:"scalingPolicyId"`
	WorkloadConfig  *WorkloadoptimizationV1WorkloadConfigUpdate `json:"workloadConfig,omitempty"`
}

// WorkloadoptimizationV1UpdateWorkloadResponse defines model for workloadoptimization.v1.UpdateWorkloadResponse.
type WorkloadoptimizationV1UpdateWorkloadResponse struct {
	Workload *WorkloadoptimizationV1Workload `json:"workload,omitempty"`
}

// WorkloadoptimizationV1UpdateWorkloadResponseV2 defines model for workloadoptimization.v1.UpdateWorkloadResponseV2.
type WorkloadoptimizationV1UpdateWorkloadResponseV2 struct {
	Workload *WorkloadoptimizationV1Workload `json:"workload,omitempty"`
}

// WorkloadoptimizationV1UpdateWorkloadScalingPolicy defines model for workloadoptimization.v1.UpdateWorkloadScalingPolicy.
type WorkloadoptimizationV1UpdateWorkloadScalingPolicy struct {
	ApplyType WorkloadoptimizationV1ApplyType `json:"applyType"`

	// Confidence threshold used for evaluation if the recommendation should be applied. If not set, the default value(0.9) will be used.
	ConfidenceThreshold    *float64                                     `json:"confidenceThreshold"`
	Name                   string                                       `json:"name"`
	RecommendationPolicies WorkloadoptimizationV1RecommendationPolicies `json:"recommendationPolicies"`
}

// WorkloadoptimizationV1UpdateWorkloadV2 defines model for workloadoptimization.v1.UpdateWorkloadV2.
type WorkloadoptimizationV1UpdateWorkloadV2 struct {
	// Defines the scaling policy ID assigned to the workload.
	ScalingPolicyId string                                        `json:"scalingPolicyId"`
	WorkloadConfig  *WorkloadoptimizationV1WorkloadConfigUpdateV2 `json:"workloadConfig,omitempty"`
}

// WorkloadoptimizationV1VPAConfig defines model for workloadoptimization.v1.VPAConfig.
type WorkloadoptimizationV1VPAConfig struct {
	ContainerConstraints []WorkloadoptimizationV1ContainerConstraints `json:"containerConstraints"`
	Cpu                  WorkloadoptimizationV1ResourceConfig         `json:"cpu"`

	// Defines possible options for workload management.
	// READ_ONLY - workload watched (metrics collected), but no actions may be performed by CAST AI.
	// MANAGED - workload watched (metrics collected), CAST AI may perform actions on the workload.
	ManagementOption WorkloadoptimizationV1ManagementOption `json:"managementOption"`
	Memory           WorkloadoptimizationV1ResourceConfig   `json:"memory"`
}

// WorkloadoptimizationV1VPAConfigUpdate defines model for workloadoptimization.v1.VPAConfigUpdate.
type WorkloadoptimizationV1VPAConfigUpdate struct {
	ContainerConfig *[]WorkloadoptimizationV1ContainerConfigUpdate      `json:"containerConfig,omitempty"`
	Cpu             *WorkloadoptimizationV1WorkloadResourceConfigUpdate `json:"cpu,omitempty"`

	// Defines possible options for workload management.
	// READ_ONLY - workload watched (metrics collected), but no actions may be performed by CAST AI.
	// MANAGED - workload watched (metrics collected), CAST AI may perform actions on the workload.
	ManagementOption *WorkloadoptimizationV1ManagementOption             `json:"managementOption,omitempty"`
	Memory           *WorkloadoptimizationV1WorkloadResourceConfigUpdate `json:"memory,omitempty"`
}

// WorkloadoptimizationV1Workload defines model for workloadoptimization.v1.Workload.
type WorkloadoptimizationV1Workload struct {
	// Annotations as defined on the workload manifest. These are annotations from the controller meta, not the pod meta.
	Annotations []WorkloadoptimizationV1KeyValuePair `json:"annotations"`
	ClusterId   string                               `json:"clusterId"`

	// Workload containers.
	Containers []WorkloadoptimizationV1Container `json:"containers"`
	CreatedAt  time.Time                         `json:"createdAt"`

	// Workload error message (if any).
	Error *string `json:"error"`

	// Workload error title (if any).
	// Different titles signify different actions being taken.
	ErrorTitle *string `json:"errorTitle"`
	Group      string  `json:"group"`

	// Whether workload has native HPA configured.
	HasNativeHpa *bool  `json:"hasNativeHpa"`
	Id           string `json:"id"`
	Kind         string `json:"kind"`

	// Labels as defined on the workload manifest. These are labels from the controller meta, not the pod meta.
	Labels []WorkloadoptimizationV1KeyValuePair `json:"labels"`

	// Defines sources that can manage the workload.
	// API - workload is managed by Cast API.
	// Annotations - workload is managed by annotations.
	ManagedBy      WorkloadoptimizationV1ManagedBy `json:"managedBy"`
	Name           string                          `json:"name"`
	Namespace      string                          `json:"namespace"`
	OrganizationId string                          `json:"organizationId"`

	// Pod count stores the *running* count of pods of the workload.
	PodCount       int32                                         `json:"podCount"`
	Recommendation *WorkloadoptimizationV1WorkloadRecommendation `json:"recommendation,omitempty"`

	// The number of replicas the workload should have, as defined on the workload spec.
	Replicas         int32                                  `json:"replicas"`
	ScalingPolicyId  string                                 `json:"scalingPolicyId"`
	UpdatedAt        time.Time                              `json:"updatedAt"`
	Version          string                                 `json:"version"`
	WorkloadConfig   WorkloadoptimizationV1WorkloadConfig   `json:"workloadConfig"`
	WorkloadConfigV2 WorkloadoptimizationV1WorkloadConfigV2 `json:"workloadConfigV2"`
}

// WorkloadoptimizationV1WorkloadConfig defines model for workloadoptimization.v1.WorkloadConfig.
type WorkloadoptimizationV1WorkloadConfig struct {
	ContainerConstraints []WorkloadoptimizationV1ContainerConstraints `json:"containerConstraints"`
	Cpu                  WorkloadoptimizationV1ResourceConfig         `json:"cpu"`

	// Defines possible options for workload management.
	// READ_ONLY - workload watched (metrics collected), but no actions may be performed by CAST AI.
	// MANAGED - workload watched (metrics collected), CAST AI may perform actions on the workload.
	ManagementOption WorkloadoptimizationV1ManagementOption `json:"managementOption"`
	Memory           WorkloadoptimizationV1ResourceConfig   `json:"memory"`
}

// WorkloadoptimizationV1WorkloadConfigUpdate defines model for workloadoptimization.v1.WorkloadConfigUpdate.
type WorkloadoptimizationV1WorkloadConfigUpdate struct {
	ContainerConfig *[]WorkloadoptimizationV1ContainerConfigUpdate      `json:"containerConfig,omitempty"`
	Cpu             *WorkloadoptimizationV1WorkloadResourceConfigUpdate `json:"cpu,omitempty"`

	// Defines possible options for workload management.
	// READ_ONLY - workload watched (metrics collected), but no actions may be performed by CAST AI.
	// MANAGED - workload watched (metrics collected), CAST AI may perform actions on the workload.
	ManagementOption *WorkloadoptimizationV1ManagementOption             `json:"managementOption,omitempty"`
	Memory           *WorkloadoptimizationV1WorkloadResourceConfigUpdate `json:"memory,omitempty"`
}

// WorkloadoptimizationV1WorkloadConfigUpdateV2 defines model for workloadoptimization.v1.WorkloadConfigUpdateV2.
type WorkloadoptimizationV1WorkloadConfigUpdateV2 struct {
	HpaConfig *WorkloadoptimizationV1HPAConfigUpdate `json:"hpaConfig,omitempty"`
	VpaConfig *WorkloadoptimizationV1VPAConfigUpdate `json:"vpaConfig,omitempty"`
}

// WorkloadoptimizationV1WorkloadConfigV2 defines model for workloadoptimization.v1.WorkloadConfigV2.
type WorkloadoptimizationV1WorkloadConfigV2 struct {
	HpaConfig WorkloadoptimizationV1HPAConfig `json:"hpaConfig"`
	VpaConfig WorkloadoptimizationV1VPAConfig `json:"vpaConfig"`
}

// WorkloadoptimizationV1WorkloadEvent defines model for workloadoptimization.v1.WorkloadEvent.
type WorkloadoptimizationV1WorkloadEvent struct {
	ClusterId      string                             `json:"clusterId"`
	CreatedAt      time.Time                          `json:"createdAt"`
	Event          WorkloadoptimizationV1Event        `json:"event"`
	Id             string                             `json:"id"`
	InitiatedBy    *WorkloadoptimizationV1InitiatedBy `json:"initiatedBy,omitempty"`
	OrganizationId string                             `json:"organizationId"`

	// EventType defines possible types for workload events.
	Type     WorkloadoptimizationV1EventType              `json:"type"`
	Workload *WorkloadoptimizationV1WorkloadEventWorkload `json:"workload,omitempty"`
}

// WorkloadoptimizationV1WorkloadEventWorkload defines model for workloadoptimization.v1.WorkloadEvent.Workload.
type WorkloadoptimizationV1WorkloadEventWorkload struct {
	Id        string `json:"id"`
	Kind      string `json:"kind"`
	Name      string `json:"name"`
	Namespace string `json:"namespace"`
}

// WorkloadoptimizationV1WorkloadMetricContainer defines model for workloadoptimization.v1.WorkloadMetricContainer.
type WorkloadoptimizationV1WorkloadMetricContainer struct {
	CpuCores            []WorkloadoptimizationV1ResourceMetrics `json:"cpuCores"`
	CpuCoresAggregated  WorkloadoptimizationV1AggregatedMetrics `json:"cpuCoresAggregated"`
	MemoryGib           []WorkloadoptimizationV1ResourceMetrics `json:"memoryGib"`
	MemoryGibAggregated WorkloadoptimizationV1AggregatedMetrics `json:"memoryGibAggregated"`
	Name                string                                  `json:"name"`
}

// WorkloadoptimizationV1WorkloadMetrics defines model for workloadoptimization.v1.WorkloadMetrics.
type WorkloadoptimizationV1WorkloadMetrics struct {
	Containers []WorkloadoptimizationV1WorkloadMetricContainer `json:"containers"`
	Cpu        WorkloadoptimizationV1CpuMetrics                `json:"cpu"`
	Pods       WorkloadoptimizationV1PodMetrics                `json:"pods"`
}

// WorkloadoptimizationV1WorkloadRecommendation defines model for workloadoptimization.v1.WorkloadRecommendation.
type WorkloadoptimizationV1WorkloadRecommendation struct {
	// Defines the confidence of the recommendation. Value between 0 and 1. 1 means max confidence, 0 means no confidence.
	// This value indicates how many metrics were collected versus expected for the workload, given the recommendation configuration.
	Confidence float64 `json:"confidence"`

	// Recommendation events.
	Events []WorkloadoptimizationV1RecommendationEvent `json:"events"`

	// Number of recommended replicas. Available only when workload horizontal scaling is enabled.
	Replicas *int32 `json:"replicas"`
}

// WorkloadoptimizationV1WorkloadResourceConfigUpdate defines model for workloadoptimization.v1.WorkloadResourceConfigUpdate.
type WorkloadoptimizationV1WorkloadResourceConfigUpdate struct {
	// Period of time over which the resource recommendation is calculated (default value is 24 hours).
	LookBackPeriodSeconds *int32 `json:"lookBackPeriodSeconds"`

	// Max values for the recommendation. For memory - this is in MiB, for CPU - this is in cores.
	// If not set, there will be no upper bound for the recommendation (default behaviour).
	Max *float64 `json:"max"`

	// Min values for the recommendation. For memory - this is in MiB, for CPU - this is in cores.
	// If not set, there will be no lower bound for the recommendation (default behaviour).
	Min *float64 `json:"min"`
}

// WorkloadoptimizationV1WorkloadScalingPolicy defines model for workloadoptimization.v1.WorkloadScalingPolicy.
type WorkloadoptimizationV1WorkloadScalingPolicy struct {
	ApplyType                           WorkloadoptimizationV1ApplyType              `json:"applyType"`
	ClusterId                           string                                       `json:"clusterId"`
	ConfidenceThreshold                 float64                                      `json:"confidenceThreshold"`
	CreatedAt                           time.Time                                    `json:"createdAt"`
	HasWorkloadsConfiguredByAnnotations bool                                         `json:"hasWorkloadsConfiguredByAnnotations"`
	Id                                  string                                       `json:"id"`
	IsDefault                           bool                                         `json:"isDefault"`
	IsReadonly                          bool                                         `json:"isReadonly"`
	Name                                string                                       `json:"name"`
	OrganizationId                      string                                       `json:"organizationId"`
	RecommendationPolicies              WorkloadoptimizationV1RecommendationPolicies `json:"recommendationPolicies"`
	UpdatedAt                           time.Time                                    `json:"updatedAt"`
}

// AuthTokenAPIListAuthTokensParams defines parameters for AuthTokenAPIListAuthTokens.
type AuthTokenAPIListAuthTokensParams struct {
	// User id to filter by, if this is set we will only return tokens that have this user id.
	UserId *string `form:"userId,omitempty" json:"userId,omitempty"`

	// Service account id to filter by, if this is set we will only return tokens that have this service account id ignoring users_id.
	ServiceAccountId *string `form:"serviceAccountId,omitempty" json:"serviceAccountId,omitempty"`
}

// AuthTokenAPICreateAuthTokenJSONBody defines parameters for AuthTokenAPICreateAuthToken.
type AuthTokenAPICreateAuthTokenJSONBody = CastaiAuthtokenV1beta1AuthToken

// AuthTokenAPIUpdateAuthTokenJSONBody defines parameters for AuthTokenAPIUpdateAuthToken.
type AuthTokenAPIUpdateAuthTokenJSONBody = CastaiAuthtokenV1beta1AuthTokenUpdate

// UsersAPIListInvitationsParams defines parameters for UsersAPIListInvitations.
type UsersAPIListInvitationsParams struct {
	PageLimit *string `form:"page.limit,omitempty" json:"page.limit,omitempty"`

	// Cursor that defines token indicating where to start the next page.
	// Empty value indicates to start from beginning of the dataset.
	PageCursor *string `form:"page.cursor,omitempty" json:"page.cursor,omitempty"`
}

// UsersAPICreateInvitationsJSONBody defines parameters for UsersAPICreateInvitations.
type UsersAPICreateInvitationsJSONBody = CastaiUsersV1beta1CreateInvitationsRequest

// UsersAPIClaimInvitationJSONBody defines parameters for UsersAPIClaimInvitation.
type UsersAPIClaimInvitationJSONBody = CastaiUsersV1beta1Request

// EvictorAPIUpsertAdvancedConfigJSONBody defines parameters for EvictorAPIUpsertAdvancedConfig.
type EvictorAPIUpsertAdvancedConfigJSONBody = CastaiEvictorV1AdvancedConfig

// NodeTemplatesAPIFilterInstanceTypesJSONBody defines parameters for NodeTemplatesAPIFilterInstanceTypes.
type NodeTemplatesAPIFilterInstanceTypesJSONBody = NodetemplatesV1NodeTemplate

// NodeConfigurationAPICreateConfigurationJSONBody defines parameters for NodeConfigurationAPICreateConfiguration.
type NodeConfigurationAPICreateConfigurationJSONBody = NodeconfigV1NewNodeConfiguration

// NodeConfigurationAPIUpdateConfigurationJSONBody defines parameters for NodeConfigurationAPIUpdateConfiguration.
type NodeConfigurationAPIUpdateConfigurationJSONBody = NodeconfigV1NodeConfigurationUpdate

// NodeTemplatesAPIListNodeTemplatesParams defines parameters for NodeTemplatesAPIListNodeTemplates.
type NodeTemplatesAPIListNodeTemplatesParams struct {
	// Flag whether to include the default template
	IncludeDefault *bool `form:"includeDefault,omitempty" json:"includeDefault,omitempty"`
}

// NodeTemplatesAPICreateNodeTemplateJSONBody defines parameters for NodeTemplatesAPICreateNodeTemplate.
type NodeTemplatesAPICreateNodeTemplateJSONBody = NodetemplatesV1NewNodeTemplate

// NodeTemplatesAPIUpdateNodeTemplateJSONBody defines parameters for NodeTemplatesAPIUpdateNodeTemplate.
type NodeTemplatesAPIUpdateNodeTemplateJSONBody = NodetemplatesV1UpdateNodeTemplate

// PoliciesAPIUpsertClusterPoliciesJSONBody defines parameters for PoliciesAPIUpsertClusterPolicies.
type PoliciesAPIUpsertClusterPoliciesJSONBody = PoliciesV1Policies

// ScheduledRebalancingAPIListRebalancingJobsParams defines parameters for ScheduledRebalancingAPIListRebalancingJobs.
type ScheduledRebalancingAPIListRebalancingJobsParams struct {
	RebalancingScheduleId *string `form:"rebalancingScheduleId,omitempty" json:"rebalancingScheduleId,omitempty"`
}

// ScheduledRebalancingAPICreateRebalancingJobJSONBody defines parameters for ScheduledRebalancingAPICreateRebalancingJob.
type ScheduledRebalancingAPICreateRebalancingJobJSONBody = ScheduledrebalancingV1RebalancingJob

// ScheduledRebalancingAPIUpdateRebalancingJobJSONBody defines parameters for ScheduledRebalancingAPIUpdateRebalancingJob.
type ScheduledRebalancingAPIUpdateRebalancingJobJSONBody = ScheduledrebalancingV1RebalancingJob

// ScheduledRebalancingAPIPreviewRebalancingScheduleJSONBody defines parameters for ScheduledRebalancingAPIPreviewRebalancingSchedule.
type ScheduledRebalancingAPIPreviewRebalancingScheduleJSONBody = ScheduledrebalancingV1RebalancingScheduleUpdate

// ExternalClusterAPIRegisterClusterJSONBody defines parameters for ExternalClusterAPIRegisterCluster.
type ExternalClusterAPIRegisterClusterJSONBody = ExternalclusterV1RegisterClusterRequest

// ExternalClusterAPIUpdateClusterJSONBody defines parameters for ExternalClusterAPIUpdateCluster.
type ExternalClusterAPIUpdateClusterJSONBody = ExternalclusterV1ClusterUpdate

// ExternalClusterAPIGetCredentialsScriptParams defines parameters for ExternalClusterAPIGetCredentialsScript.
type ExternalClusterAPIGetCredentialsScriptParams struct {
	// Whether an AWS CrossRole should be used for authentication.
	CrossRole *bool `form:"crossRole,omitempty" json:"crossRole,omitempty"`

	// Whether NVIDIA device plugin DaemonSet should be installed during Phase 2 on-boarding.
	NvidiaDevicePlugin *bool `form:"nvidiaDevicePlugin,omitempty" json:"nvidiaDevicePlugin,omitempty"`

	// Whether CAST AI Security Insights agent should be installed
	InstallSecurityAgent *bool `form:"installSecurityAgent,omitempty" json:"installSecurityAgent,omitempty"`

	// Whether CAST AI Autoscaler components should be installed.
	// To enable backwards compatibility, when the field is omitted, it is defaulted to true.
	InstallAutoscalerAgent *bool `form:"installAutoscalerAgent,omitempty" json:"installAutoscalerAgent,omitempty"`

	// Whether CAST AI GPU metrics exporter should be installed
	InstallGpuMetricsExporter *bool `form:"installGpuMetricsExporter,omitempty" json:"installGpuMetricsExporter,omitempty"`
}

// ExternalClusterAPIDisconnectClusterJSONBody defines parameters for ExternalClusterAPIDisconnectCluster.
type ExternalClusterAPIDisconnectClusterJSONBody = ExternalclusterV1DisconnectConfig

// ExternalClusterAPIHandleCloudEventJSONBody defines parameters for ExternalClusterAPIHandleCloudEvent.
type ExternalClusterAPIHandleCloudEventJSONBody = ExternalclusterV1CloudEvent

// ExternalClusterAPIListNodesParams defines parameters for ExternalClusterAPIListNodes.
type ExternalClusterAPIListNodesParams struct {
	PageLimit *string `form:"page.limit,omitempty" json:"page.limit,omitempty"`

	// Cursor that defines token indicating where to start the next page.
	// Empty value indicates to start from beginning of the dataset.
	PageCursor               *string                                         `form:"page.cursor,omitempty" json:"page.cursor,omitempty"`
	NodeId                   *string                                         `form:"nodeId,omitempty" json:"nodeId,omitempty"`
	NodeStatus               *ExternalClusterAPIListNodesParamsNodeStatus    `form:"nodeStatus,omitempty" json:"nodeStatus,omitempty"`
	InstanceType             *string                                         `form:"instanceType,omitempty" json:"instanceType,omitempty"`
	LifecycleType            *ExternalClusterAPIListNodesParamsLifecycleType `form:"lifecycleType,omitempty" json:"lifecycleType,omitempty"`
	RemovalDisabled          *bool                                           `form:"removalDisabled,omitempty" json:"removalDisabled,omitempty"`
	Unschedulable            *bool                                           `form:"unschedulable,omitempty" json:"unschedulable,omitempty"`
	Zone                     *string                                         `form:"zone,omitempty" json:"zone,omitempty"`
	NodeConfigurationName    *string                                         `form:"nodeConfigurationName,omitempty" json:"nodeConfigurationName,omitempty"`
	NodeConfigurationVersion *string                                         `form:"nodeConfigurationVersion,omitempty" json:"nodeConfigurationVersion,omitempty"`
	NodeTemplateName         *string                                         `form:"nodeTemplateName,omitempty" json:"nodeTemplateName,omitempty"`
	NodeTemplateVersion      *string                                         `form:"nodeTemplateVersion,omitempty" json:"nodeTemplateVersion,omitempty"`
	NodeName                 *string                                         `form:"nodeName,omitempty" json:"nodeName,omitempty"`
	ExcludeDeleting          *bool                                           `form:"excludeDeleting,omitempty" json:"excludeDeleting,omitempty"`
}

// ExternalClusterAPIListNodesParamsNodeStatus defines parameters for ExternalClusterAPIListNodes.
type ExternalClusterAPIListNodesParamsNodeStatus string

// ExternalClusterAPIListNodesParamsLifecycleType defines parameters for ExternalClusterAPIListNodes.
type ExternalClusterAPIListNodesParamsLifecycleType string

// ExternalClusterAPIAddNodeJSONBody defines parameters for ExternalClusterAPIAddNode.
type ExternalClusterAPIAddNodeJSONBody = ExternalclusterV1NodeConfig

// ExternalClusterAPIDeleteNodeParams defines parameters for ExternalClusterAPIDeleteNode.
type ExternalClusterAPIDeleteNodeParams struct {
	// Node drain timeout in seconds. Defaults to 600s if not set.
	DrainTimeout *string `form:"drainTimeout,omitempty" json:"drainTimeout,omitempty"`

	// If set to true, node will be deleted even if node fails to be drained gracefully.
	ForceDelete *bool `form:"forceDelete,omitempty" json:"forceDelete,omitempty"`
}

// ExternalClusterAPIDrainNodeJSONBody defines parameters for ExternalClusterAPIDrainNode.
type ExternalClusterAPIDrainNodeJSONBody = ExternalclusterV1DrainConfig

// ExternalClusterAPIUpdateClusterTagsJSONBody defines parameters for ExternalClusterAPIUpdateClusterTags.
type ExternalClusterAPIUpdateClusterTagsJSONBody struct {
	AdditionalProperties map[string]string `json:"-"`
}

// UsersAPIUpdateCurrentUserProfileJSONBody defines parameters for UsersAPIUpdateCurrentUserProfile.
type UsersAPIUpdateCurrentUserProfileJSONBody = CastaiUsersV1beta1User

// UsersAPIListOrganizationsParams defines parameters for UsersAPIListOrganizations.
type UsersAPIListOrganizationsParams struct {
	// Filter organizations by user id.
	UserId *string `form:"userId,omitempty" json:"userId,omitempty"`

	// Filter organizations by username.
	Username *string `form:"username,omitempty" json:"username,omitempty"`
}

// UsersAPICreateOrganizationJSONBody defines parameters for UsersAPICreateOrganization.
type UsersAPICreateOrganizationJSONBody = CastaiUsersV1beta1Organization

// UsersAPIEditOrganizationJSONBody defines parameters for UsersAPIEditOrganization.
type UsersAPIEditOrganizationJSONBody = CastaiUsersV1beta1Organization

// InventoryAPIAddReservationJSONBody defines parameters for InventoryAPIAddReservation.
type InventoryAPIAddReservationJSONBody = CastaiInventoryV1beta1GenericReservation

// InventoryAPIOverwriteReservationsJSONBody defines parameters for InventoryAPIOverwriteReservations.
type InventoryAPIOverwriteReservationsJSONBody = CastaiInventoryV1beta1GenericReservationsList

// UsersAPIRemoveOrganizationUsersParams defines parameters for UsersAPIRemoveOrganizationUsers.
type UsersAPIRemoveOrganizationUsersParams struct {
	// Users is the list of user ids to remove.
	Users []string `form:"users" json:"users"`
}

// UsersAPIListOrganizationUsersParams defines parameters for UsersAPIListOrganizationUsers.
type UsersAPIListOrganizationUsersParams struct {
	// IncludeGroups is the flag to include group membership in the response.
	IncludeGroups *bool `form:"includeGroups,omitempty" json:"includeGroups,omitempty"`
}

// UsersAPIAddUserToOrganizationJSONBody defines parameters for UsersAPIAddUserToOrganization.
type UsersAPIAddUserToOrganizationJSONBody = CastaiUsersV1beta1NewMembership

// UsersAPIUpdateOrganizationUserJSONBody defines parameters for UsersAPIUpdateOrganizationUser.
type UsersAPIUpdateOrganizationUserJSONBody = UsersAPIUpdateOrganizationUserRequest

// ScheduledRebalancingAPICreateRebalancingScheduleJSONBody defines parameters for ScheduledRebalancingAPICreateRebalancingSchedule.
type ScheduledRebalancingAPICreateRebalancingScheduleJSONBody = ScheduledrebalancingV1RebalancingSchedule

// ScheduledRebalancingAPIUpdateRebalancingScheduleJSONBody defines parameters for ScheduledRebalancingAPIUpdateRebalancingSchedule.
type ScheduledRebalancingAPIUpdateRebalancingScheduleJSONBody = ScheduledrebalancingV1RebalancingScheduleUpdate

// ScheduledRebalancingAPIUpdateRebalancingScheduleParams defines parameters for ScheduledRebalancingAPIUpdateRebalancingSchedule.
type ScheduledRebalancingAPIUpdateRebalancingScheduleParams struct {
	Id *string `form:"id,omitempty" json:"id,omitempty"`
}

// InventoryAPIListRegionsParams defines parameters for InventoryAPIListRegions.
type InventoryAPIListRegionsParams struct {
	PageSize  *int32  `form:"pageSize,omitempty" json:"pageSize,omitempty"`
	PageToken *string `form:"pageToken,omitempty" json:"pageToken,omitempty"`
}

// CommitmentsAPICreateCommitmentAssignmentParams defines parameters for CommitmentsAPICreateCommitmentAssignment.
type CommitmentsAPICreateCommitmentAssignmentParams struct {
	// Cluster ID
	ClusterId string `form:"clusterId" json:"clusterId"`

	// Commitment ID
	CommitmentId string `form:"commitmentId" json:"commitmentId"`
}

// CommitmentsAPIGetCommitmentsParams defines parameters for CommitmentsAPIGetCommitments.
type CommitmentsAPIGetCommitmentsParams struct {
	// indicated if commitment usage should be included in a response
	IncludeUsage *bool `form:"includeUsage,omitempty" json:"includeUsage,omitempty"`

	// get commitments that are assigned to a cluster
	ClusterId *string `form:"clusterId,omitempty" json:"clusterId,omitempty"`
}

// CommitmentsAPIImportAzureReservationsJSONBody defines parameters for CommitmentsAPIImportAzureReservations.
type CommitmentsAPIImportAzureReservationsJSONBody = []CastaiInventoryV1beta1AzureReservationImport

// CommitmentsAPIImportAzureReservationsParams defines parameters for CommitmentsAPIImportAzureReservations.
type CommitmentsAPIImportAzureReservationsParams struct {
	// Behaviour
	//
	//  - OVERWRITE: Overwrite all existing commitments
	Behaviour *CommitmentsAPIImportAzureReservationsParamsBehaviour `form:"behaviour,omitempty" json:"behaviour,omitempty"`
}

// CommitmentsAPIImportAzureReservationsParamsBehaviour defines parameters for CommitmentsAPIImportAzureReservations.
type CommitmentsAPIImportAzureReservationsParamsBehaviour string

// CommitmentsAPIImportGCPCommitmentsJSONBody defines parameters for CommitmentsAPIImportGCPCommitments.
type CommitmentsAPIImportGCPCommitmentsJSONBody = []CastaiInventoryV1beta1GCPCommitmentImport

// CommitmentsAPIImportGCPCommitmentsParams defines parameters for CommitmentsAPIImportGCPCommitments.
type CommitmentsAPIImportGCPCommitmentsParams struct {
	// Behaviour
	//
	//  - OVERWRITE: Overwrite all existing commitments
	Behaviour *CommitmentsAPIImportGCPCommitmentsParamsBehaviour `form:"behaviour,omitempty" json:"behaviour,omitempty"`
}

// CommitmentsAPIImportGCPCommitmentsParamsBehaviour defines parameters for CommitmentsAPIImportGCPCommitments.
type CommitmentsAPIImportGCPCommitmentsParamsBehaviour string

// CommitmentsAPIGetGCPCommitmentsImportScriptParams defines parameters for CommitmentsAPIGetGCPCommitmentsImportScript.
type CommitmentsAPIGetGCPCommitmentsImportScriptParams struct {
	// GCP Project ids
	Projects *[]string `form:"projects,omitempty" json:"projects,omitempty"`
}

// CommitmentsAPIGetCommitmentParams defines parameters for CommitmentsAPIGetCommitment.
type CommitmentsAPIGetCommitmentParams struct {
	// get commitments that are assigned to a cluster
	ClusterId *string `form:"clusterId,omitempty" json:"clusterId,omitempty"`

	// indicated if commitment usage should be included in a response
	IncludeUsage *bool `form:"includeUsage,omitempty" json:"includeUsage,omitempty"`
}

// CommitmentsAPIUpdateCommitmentJSONBody defines parameters for CommitmentsAPIUpdateCommitment.
type CommitmentsAPIUpdateCommitmentJSONBody = CastaiInventoryV1beta1UpdateCommitmentInput

// CommitmentsAPIReplaceCommitmentAssignmentsJSONBody defines parameters for CommitmentsAPIReplaceCommitmentAssignments.
type CommitmentsAPIReplaceCommitmentAssignmentsJSONBody = []string

// ExternalClusterAPIGetCredentialsScriptTemplateParams defines parameters for ExternalClusterAPIGetCredentialsScriptTemplate.
type ExternalClusterAPIGetCredentialsScriptTemplateParams struct {
	CrossRole *bool `form:"crossRole,omitempty" json:"crossRole,omitempty"`
}

// SSOAPICreateSSOConnectionJSONBody defines parameters for SSOAPICreateSSOConnection.
type SSOAPICreateSSOConnectionJSONBody = CastaiSsoV1beta1CreateSSOConnection

// SSOAPIUpdateSSOConnectionJSONBody defines parameters for SSOAPIUpdateSSOConnection.
type SSOAPIUpdateSSOConnectionJSONBody = CastaiSsoV1beta1UpdateSSOConnection

// WorkloadOptimizationAPICreateWorkloadScalingPolicyJSONBody defines parameters for WorkloadOptimizationAPICreateWorkloadScalingPolicy.
type WorkloadOptimizationAPICreateWorkloadScalingPolicyJSONBody = WorkloadoptimizationV1NewWorkloadScalingPolicy

// WorkloadOptimizationAPIUpdateWorkloadScalingPolicyJSONBody defines parameters for WorkloadOptimizationAPIUpdateWorkloadScalingPolicy.
type WorkloadOptimizationAPIUpdateWorkloadScalingPolicyJSONBody = WorkloadoptimizationV1UpdateWorkloadScalingPolicy

// WorkloadOptimizationAPIAssignScalingPolicyWorkloadsJSONBody defines parameters for WorkloadOptimizationAPIAssignScalingPolicyWorkloads.
type WorkloadOptimizationAPIAssignScalingPolicyWorkloadsJSONBody = WorkloadOptimizationAPIAssignScalingPolicyWorkloadsRequest

// WorkloadOptimizationAPIListWorkloadEventsParams defines parameters for WorkloadOptimizationAPIListWorkloadEvents.
type WorkloadOptimizationAPIListWorkloadEventsParams struct {
	WorkloadId *string `form:"workloadId,omitempty" json:"workloadId,omitempty"`
	PageLimit  *string `form:"page.limit,omitempty" json:"page.limit,omitempty"`

	// Cursor that defines token indicating where to start the next page.
	// Empty value indicates to start from beginning of the dataset.
	PageCursor   *string                                                `form:"page.cursor,omitempty" json:"page.cursor,omitempty"`
	FromDate     *time.Time                                             `form:"fromDate,omitempty" json:"fromDate,omitempty"`
	ToDate       *time.Time                                             `form:"toDate,omitempty" json:"toDate,omitempty"`
	WorkloadName *string                                                `form:"workloadName,omitempty" json:"workloadName,omitempty"`
	Type         *[]WorkloadOptimizationAPIListWorkloadEventsParamsType `form:"type,omitempty" json:"type,omitempty"`
}

// WorkloadOptimizationAPIListWorkloadEventsParamsType defines parameters for WorkloadOptimizationAPIListWorkloadEvents.
type WorkloadOptimizationAPIListWorkloadEventsParamsType string

// WorkloadOptimizationAPIGetWorkloadParams defines parameters for WorkloadOptimizationAPIGetWorkload.
type WorkloadOptimizationAPIGetWorkloadParams struct {
	IncludeMetrics *bool      `form:"includeMetrics,omitempty" json:"includeMetrics,omitempty"`
	FromTime       *time.Time `form:"fromTime,omitempty" json:"fromTime,omitempty"`
	ToTime         *time.Time `form:"toTime,omitempty" json:"toTime,omitempty"`
}

// WorkloadOptimizationAPIUpdateWorkloadJSONBody defines parameters for WorkloadOptimizationAPIUpdateWorkload.
type WorkloadOptimizationAPIUpdateWorkloadJSONBody = WorkloadoptimizationV1UpdateWorkload

// WorkloadOptimizationAPIGetInstallCmdParams defines parameters for WorkloadOptimizationAPIGetInstallCmd.
type WorkloadOptimizationAPIGetInstallCmdParams struct {
	ClusterId string `form:"clusterId" json:"clusterId"`
}

// InventoryAPIListZonesParams defines parameters for InventoryAPIListZones.
type InventoryAPIListZonesParams struct {
	PageSize  *int32  `form:"pageSize,omitempty" json:"pageSize,omitempty"`
	PageToken *string `form:"pageToken,omitempty" json:"pageToken,omitempty"`
}

// WorkloadOptimizationAPIUpdateWorkloadV2JSONBody defines parameters for WorkloadOptimizationAPIUpdateWorkloadV2.
type WorkloadOptimizationAPIUpdateWorkloadV2JSONBody = WorkloadoptimizationV1UpdateWorkloadV2

// AuthTokenAPICreateAuthTokenJSONRequestBody defines body for AuthTokenAPICreateAuthToken for application/json ContentType.
type AuthTokenAPICreateAuthTokenJSONRequestBody = AuthTokenAPICreateAuthTokenJSONBody

// AuthTokenAPIUpdateAuthTokenJSONRequestBody defines body for AuthTokenAPIUpdateAuthToken for application/json ContentType.
type AuthTokenAPIUpdateAuthTokenJSONRequestBody = AuthTokenAPIUpdateAuthTokenJSONBody

// UsersAPICreateInvitationsJSONRequestBody defines body for UsersAPICreateInvitations for application/json ContentType.
type UsersAPICreateInvitationsJSONRequestBody = UsersAPICreateInvitationsJSONBody

// UsersAPIClaimInvitationJSONRequestBody defines body for UsersAPIClaimInvitation for application/json ContentType.
type UsersAPIClaimInvitationJSONRequestBody = UsersAPIClaimInvitationJSONBody

// EvictorAPIUpsertAdvancedConfigJSONRequestBody defines body for EvictorAPIUpsertAdvancedConfig for application/json ContentType.
type EvictorAPIUpsertAdvancedConfigJSONRequestBody = EvictorAPIUpsertAdvancedConfigJSONBody

// NodeTemplatesAPIFilterInstanceTypesJSONRequestBody defines body for NodeTemplatesAPIFilterInstanceTypes for application/json ContentType.
type NodeTemplatesAPIFilterInstanceTypesJSONRequestBody = NodeTemplatesAPIFilterInstanceTypesJSONBody

// NodeConfigurationAPICreateConfigurationJSONRequestBody defines body for NodeConfigurationAPICreateConfiguration for application/json ContentType.
type NodeConfigurationAPICreateConfigurationJSONRequestBody = NodeConfigurationAPICreateConfigurationJSONBody

// NodeConfigurationAPIUpdateConfigurationJSONRequestBody defines body for NodeConfigurationAPIUpdateConfiguration for application/json ContentType.
type NodeConfigurationAPIUpdateConfigurationJSONRequestBody = NodeConfigurationAPIUpdateConfigurationJSONBody

// NodeTemplatesAPICreateNodeTemplateJSONRequestBody defines body for NodeTemplatesAPICreateNodeTemplate for application/json ContentType.
type NodeTemplatesAPICreateNodeTemplateJSONRequestBody = NodeTemplatesAPICreateNodeTemplateJSONBody

// NodeTemplatesAPIUpdateNodeTemplateJSONRequestBody defines body for NodeTemplatesAPIUpdateNodeTemplate for application/json ContentType.
type NodeTemplatesAPIUpdateNodeTemplateJSONRequestBody = NodeTemplatesAPIUpdateNodeTemplateJSONBody

// PoliciesAPIUpsertClusterPoliciesJSONRequestBody defines body for PoliciesAPIUpsertClusterPolicies for application/json ContentType.
type PoliciesAPIUpsertClusterPoliciesJSONRequestBody = PoliciesAPIUpsertClusterPoliciesJSONBody

// ScheduledRebalancingAPICreateRebalancingJobJSONRequestBody defines body for ScheduledRebalancingAPICreateRebalancingJob for application/json ContentType.
type ScheduledRebalancingAPICreateRebalancingJobJSONRequestBody = ScheduledRebalancingAPICreateRebalancingJobJSONBody

// ScheduledRebalancingAPIUpdateRebalancingJobJSONRequestBody defines body for ScheduledRebalancingAPIUpdateRebalancingJob for application/json ContentType.
type ScheduledRebalancingAPIUpdateRebalancingJobJSONRequestBody = ScheduledRebalancingAPIUpdateRebalancingJobJSONBody

// ScheduledRebalancingAPIPreviewRebalancingScheduleJSONRequestBody defines body for ScheduledRebalancingAPIPreviewRebalancingSchedule for application/json ContentType.
type ScheduledRebalancingAPIPreviewRebalancingScheduleJSONRequestBody = ScheduledRebalancingAPIPreviewRebalancingScheduleJSONBody

// ExternalClusterAPIRegisterClusterJSONRequestBody defines body for ExternalClusterAPIRegisterCluster for application/json ContentType.
type ExternalClusterAPIRegisterClusterJSONRequestBody = ExternalClusterAPIRegisterClusterJSONBody

// ExternalClusterAPIUpdateClusterJSONRequestBody defines body for ExternalClusterAPIUpdateCluster for application/json ContentType.
type ExternalClusterAPIUpdateClusterJSONRequestBody = ExternalClusterAPIUpdateClusterJSONBody

// ExternalClusterAPIDisconnectClusterJSONRequestBody defines body for ExternalClusterAPIDisconnectCluster for application/json ContentType.
type ExternalClusterAPIDisconnectClusterJSONRequestBody = ExternalClusterAPIDisconnectClusterJSONBody

// ExternalClusterAPIHandleCloudEventJSONRequestBody defines body for ExternalClusterAPIHandleCloudEvent for application/json ContentType.
type ExternalClusterAPIHandleCloudEventJSONRequestBody = ExternalClusterAPIHandleCloudEventJSONBody

// ExternalClusterAPIAddNodeJSONRequestBody defines body for ExternalClusterAPIAddNode for application/json ContentType.
type ExternalClusterAPIAddNodeJSONRequestBody = ExternalClusterAPIAddNodeJSONBody

// ExternalClusterAPIDrainNodeJSONRequestBody defines body for ExternalClusterAPIDrainNode for application/json ContentType.
type ExternalClusterAPIDrainNodeJSONRequestBody = ExternalClusterAPIDrainNodeJSONBody

// ExternalClusterAPIUpdateClusterTagsJSONRequestBody defines body for ExternalClusterAPIUpdateClusterTags for application/json ContentType.
type ExternalClusterAPIUpdateClusterTagsJSONRequestBody ExternalClusterAPIUpdateClusterTagsJSONBody

// UsersAPIUpdateCurrentUserProfileJSONRequestBody defines body for UsersAPIUpdateCurrentUserProfile for application/json ContentType.
type UsersAPIUpdateCurrentUserProfileJSONRequestBody = UsersAPIUpdateCurrentUserProfileJSONBody

// UsersAPICreateOrganizationJSONRequestBody defines body for UsersAPICreateOrganization for application/json ContentType.
type UsersAPICreateOrganizationJSONRequestBody = UsersAPICreateOrganizationJSONBody

// UsersAPIEditOrganizationJSONRequestBody defines body for UsersAPIEditOrganization for application/json ContentType.
type UsersAPIEditOrganizationJSONRequestBody = UsersAPIEditOrganizationJSONBody

// InventoryAPIAddReservationJSONRequestBody defines body for InventoryAPIAddReservation for application/json ContentType.
type InventoryAPIAddReservationJSONRequestBody = InventoryAPIAddReservationJSONBody

// InventoryAPIOverwriteReservationsJSONRequestBody defines body for InventoryAPIOverwriteReservations for application/json ContentType.
type InventoryAPIOverwriteReservationsJSONRequestBody = InventoryAPIOverwriteReservationsJSONBody

// UsersAPIAddUserToOrganizationJSONRequestBody defines body for UsersAPIAddUserToOrganization for application/json ContentType.
type UsersAPIAddUserToOrganizationJSONRequestBody = UsersAPIAddUserToOrganizationJSONBody

// UsersAPIUpdateOrganizationUserJSONRequestBody defines body for UsersAPIUpdateOrganizationUser for application/json ContentType.
type UsersAPIUpdateOrganizationUserJSONRequestBody = UsersAPIUpdateOrganizationUserJSONBody

// ScheduledRebalancingAPICreateRebalancingScheduleJSONRequestBody defines body for ScheduledRebalancingAPICreateRebalancingSchedule for application/json ContentType.
type ScheduledRebalancingAPICreateRebalancingScheduleJSONRequestBody = ScheduledRebalancingAPICreateRebalancingScheduleJSONBody

// ScheduledRebalancingAPIUpdateRebalancingScheduleJSONRequestBody defines body for ScheduledRebalancingAPIUpdateRebalancingSchedule for application/json ContentType.
type ScheduledRebalancingAPIUpdateRebalancingScheduleJSONRequestBody = ScheduledRebalancingAPIUpdateRebalancingScheduleJSONBody

// CommitmentsAPIImportAzureReservationsJSONRequestBody defines body for CommitmentsAPIImportAzureReservations for application/json ContentType.
type CommitmentsAPIImportAzureReservationsJSONRequestBody = CommitmentsAPIImportAzureReservationsJSONBody

// CommitmentsAPIImportGCPCommitmentsJSONRequestBody defines body for CommitmentsAPIImportGCPCommitments for application/json ContentType.
type CommitmentsAPIImportGCPCommitmentsJSONRequestBody = CommitmentsAPIImportGCPCommitmentsJSONBody

// CommitmentsAPIUpdateCommitmentJSONRequestBody defines body for CommitmentsAPIUpdateCommitment for application/json ContentType.
type CommitmentsAPIUpdateCommitmentJSONRequestBody = CommitmentsAPIUpdateCommitmentJSONBody

// CommitmentsAPIReplaceCommitmentAssignmentsJSONRequestBody defines body for CommitmentsAPIReplaceCommitmentAssignments for application/json ContentType.
type CommitmentsAPIReplaceCommitmentAssignmentsJSONRequestBody = CommitmentsAPIReplaceCommitmentAssignmentsJSONBody

// SSOAPICreateSSOConnectionJSONRequestBody defines body for SSOAPICreateSSOConnection for application/json ContentType.
type SSOAPICreateSSOConnectionJSONRequestBody = SSOAPICreateSSOConnectionJSONBody

// SSOAPIUpdateSSOConnectionJSONRequestBody defines body for SSOAPIUpdateSSOConnection for application/json ContentType.
type SSOAPIUpdateSSOConnectionJSONRequestBody = SSOAPIUpdateSSOConnectionJSONBody

// WorkloadOptimizationAPICreateWorkloadScalingPolicyJSONRequestBody defines body for WorkloadOptimizationAPICreateWorkloadScalingPolicy for application/json ContentType.
type WorkloadOptimizationAPICreateWorkloadScalingPolicyJSONRequestBody = WorkloadOptimizationAPICreateWorkloadScalingPolicyJSONBody

// WorkloadOptimizationAPIUpdateWorkloadScalingPolicyJSONRequestBody defines body for WorkloadOptimizationAPIUpdateWorkloadScalingPolicy for application/json ContentType.
type WorkloadOptimizationAPIUpdateWorkloadScalingPolicyJSONRequestBody = WorkloadOptimizationAPIUpdateWorkloadScalingPolicyJSONBody

// WorkloadOptimizationAPIAssignScalingPolicyWorkloadsJSONRequestBody defines body for WorkloadOptimizationAPIAssignScalingPolicyWorkloads for application/json ContentType.
type WorkloadOptimizationAPIAssignScalingPolicyWorkloadsJSONRequestBody = WorkloadOptimizationAPIAssignScalingPolicyWorkloadsJSONBody

// WorkloadOptimizationAPIUpdateWorkloadJSONRequestBody defines body for WorkloadOptimizationAPIUpdateWorkload for application/json ContentType.
type WorkloadOptimizationAPIUpdateWorkloadJSONRequestBody = WorkloadOptimizationAPIUpdateWorkloadJSONBody

// WorkloadOptimizationAPIUpdateWorkloadV2JSONRequestBody defines body for WorkloadOptimizationAPIUpdateWorkloadV2 for application/json ContentType.
type WorkloadOptimizationAPIUpdateWorkloadV2JSONRequestBody = WorkloadOptimizationAPIUpdateWorkloadV2JSONBody

// Getter for additional properties for ExternalClusterAPIUpdateClusterTagsJSONBody. Returns the specified
// element and whether it was found
func (a ExternalClusterAPIUpdateClusterTagsJSONBody) Get(fieldName string) (value string, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for ExternalClusterAPIUpdateClusterTagsJSONBody
func (a *ExternalClusterAPIUpdateClusterTagsJSONBody) Set(fieldName string, value string) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]string)
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for ExternalClusterAPIUpdateClusterTagsJSONBody to handle AdditionalProperties
func (a *ExternalClusterAPIUpdateClusterTagsJSONBody) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]string)
		for fieldName, fieldBuf := range object {
			var fieldVal string
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for ExternalClusterAPIUpdateClusterTagsJSONBody to handle AdditionalProperties
func (a ExternalClusterAPIUpdateClusterTagsJSONBody) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for CastaiEvictorV1LabelSelector_MatchLabels. Returns the specified
// element and whether it was found
func (a CastaiEvictorV1LabelSelector_MatchLabels) Get(fieldName string) (value string, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for CastaiEvictorV1LabelSelector_MatchLabels
func (a *CastaiEvictorV1LabelSelector_MatchLabels) Set(fieldName string, value string) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]string)
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for CastaiEvictorV1LabelSelector_MatchLabels to handle AdditionalProperties
func (a *CastaiEvictorV1LabelSelector_MatchLabels) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]string)
		for fieldName, fieldBuf := range object {
			var fieldVal string
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for CastaiEvictorV1LabelSelector_MatchLabels to handle AdditionalProperties
func (a CastaiEvictorV1LabelSelector_MatchLabels) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for ExternalclusterV1Cluster_Tags. Returns the specified
// element and whether it was found
func (a ExternalclusterV1Cluster_Tags) Get(fieldName string) (value string, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for ExternalclusterV1Cluster_Tags
func (a *ExternalclusterV1Cluster_Tags) Set(fieldName string, value string) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]string)
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for ExternalclusterV1Cluster_Tags to handle AdditionalProperties
func (a *ExternalclusterV1Cluster_Tags) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]string)
		for fieldName, fieldBuf := range object {
			var fieldVal string
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for ExternalclusterV1Cluster_Tags to handle AdditionalProperties
func (a ExternalclusterV1Cluster_Tags) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for ExternalclusterV1EKSClusterParams_Tags. Returns the specified
// element and whether it was found
func (a ExternalclusterV1EKSClusterParams_Tags) Get(fieldName string) (value string, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for ExternalclusterV1EKSClusterParams_Tags
func (a *ExternalclusterV1EKSClusterParams_Tags) Set(fieldName string, value string) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]string)
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for ExternalclusterV1EKSClusterParams_Tags to handle AdditionalProperties
func (a *ExternalclusterV1EKSClusterParams_Tags) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]string)
		for fieldName, fieldBuf := range object {
			var fieldVal string
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for ExternalclusterV1EKSClusterParams_Tags to handle AdditionalProperties
func (a ExternalclusterV1EKSClusterParams_Tags) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for ExternalclusterV1Node_Annotations. Returns the specified
// element and whether it was found
func (a ExternalclusterV1Node_Annotations) Get(fieldName string) (value string, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for ExternalclusterV1Node_Annotations
func (a *ExternalclusterV1Node_Annotations) Set(fieldName string, value string) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]string)
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for ExternalclusterV1Node_Annotations to handle AdditionalProperties
func (a *ExternalclusterV1Node_Annotations) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]string)
		for fieldName, fieldBuf := range object {
			var fieldVal string
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for ExternalclusterV1Node_Annotations to handle AdditionalProperties
func (a ExternalclusterV1Node_Annotations) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for ExternalclusterV1Node_InstanceLabels. Returns the specified
// element and whether it was found
func (a ExternalclusterV1Node_InstanceLabels) Get(fieldName string) (value string, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for ExternalclusterV1Node_InstanceLabels
func (a *ExternalclusterV1Node_InstanceLabels) Set(fieldName string, value string) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]string)
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for ExternalclusterV1Node_InstanceLabels to handle AdditionalProperties
func (a *ExternalclusterV1Node_InstanceLabels) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]string)
		for fieldName, fieldBuf := range object {
			var fieldVal string
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for ExternalclusterV1Node_InstanceLabels to handle AdditionalProperties
func (a ExternalclusterV1Node_InstanceLabels) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for ExternalclusterV1Node_Labels. Returns the specified
// element and whether it was found
func (a ExternalclusterV1Node_Labels) Get(fieldName string) (value string, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for ExternalclusterV1Node_Labels
func (a *ExternalclusterV1Node_Labels) Set(fieldName string, value string) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]string)
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for ExternalclusterV1Node_Labels to handle AdditionalProperties
func (a *ExternalclusterV1Node_Labels) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]string)
		for fieldName, fieldBuf := range object {
			var fieldVal string
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for ExternalclusterV1Node_Labels to handle AdditionalProperties
func (a ExternalclusterV1Node_Labels) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for ExternalclusterV1NodeConfig_KubernetesLabels. Returns the specified
// element and whether it was found
func (a ExternalclusterV1NodeConfig_KubernetesLabels) Get(fieldName string) (value string, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for ExternalclusterV1NodeConfig_KubernetesLabels
func (a *ExternalclusterV1NodeConfig_KubernetesLabels) Set(fieldName string, value string) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]string)
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for ExternalclusterV1NodeConfig_KubernetesLabels to handle AdditionalProperties
func (a *ExternalclusterV1NodeConfig_KubernetesLabels) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]string)
		for fieldName, fieldBuf := range object {
			var fieldVal string
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for ExternalclusterV1NodeConfig_KubernetesLabels to handle AdditionalProperties
func (a ExternalclusterV1NodeConfig_KubernetesLabels) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for NodeconfigV1NewNodeConfiguration_Tags. Returns the specified
// element and whether it was found
func (a NodeconfigV1NewNodeConfiguration_Tags) Get(fieldName string) (value string, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for NodeconfigV1NewNodeConfiguration_Tags
func (a *NodeconfigV1NewNodeConfiguration_Tags) Set(fieldName string, value string) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]string)
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for NodeconfigV1NewNodeConfiguration_Tags to handle AdditionalProperties
func (a *NodeconfigV1NewNodeConfiguration_Tags) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]string)
		for fieldName, fieldBuf := range object {
			var fieldVal string
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for NodeconfigV1NewNodeConfiguration_Tags to handle AdditionalProperties
func (a NodeconfigV1NewNodeConfiguration_Tags) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for NodeconfigV1NodeConfiguration_Tags. Returns the specified
// element and whether it was found
func (a NodeconfigV1NodeConfiguration_Tags) Get(fieldName string) (value string, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for NodeconfigV1NodeConfiguration_Tags
func (a *NodeconfigV1NodeConfiguration_Tags) Set(fieldName string, value string) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]string)
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for NodeconfigV1NodeConfiguration_Tags to handle AdditionalProperties
func (a *NodeconfigV1NodeConfiguration_Tags) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]string)
		for fieldName, fieldBuf := range object {
			var fieldVal string
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for NodeconfigV1NodeConfiguration_Tags to handle AdditionalProperties
func (a NodeconfigV1NodeConfiguration_Tags) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for NodeconfigV1NodeConfigurationUpdate_Tags. Returns the specified
// element and whether it was found
func (a NodeconfigV1NodeConfigurationUpdate_Tags) Get(fieldName string) (value string, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for NodeconfigV1NodeConfigurationUpdate_Tags
func (a *NodeconfigV1NodeConfigurationUpdate_Tags) Set(fieldName string, value string) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]string)
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for NodeconfigV1NodeConfigurationUpdate_Tags to handle AdditionalProperties
func (a *NodeconfigV1NodeConfigurationUpdate_Tags) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]string)
		for fieldName, fieldBuf := range object {
			var fieldVal string
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for NodeconfigV1NodeConfigurationUpdate_Tags to handle AdditionalProperties
func (a NodeconfigV1NodeConfigurationUpdate_Tags) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for NodeconfigV1SecurityGroup_Tags. Returns the specified
// element and whether it was found
func (a NodeconfigV1SecurityGroup_Tags) Get(fieldName string) (value string, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for NodeconfigV1SecurityGroup_Tags
func (a *NodeconfigV1SecurityGroup_Tags) Set(fieldName string, value string) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]string)
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for NodeconfigV1SecurityGroup_Tags to handle AdditionalProperties
func (a *NodeconfigV1SecurityGroup_Tags) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]string)
		for fieldName, fieldBuf := range object {
			var fieldVal string
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for NodeconfigV1SecurityGroup_Tags to handle AdditionalProperties
func (a NodeconfigV1SecurityGroup_Tags) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for NodeconfigV1SubnetDetails_Tags. Returns the specified
// element and whether it was found
func (a NodeconfigV1SubnetDetails_Tags) Get(fieldName string) (value string, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for NodeconfigV1SubnetDetails_Tags
func (a *NodeconfigV1SubnetDetails_Tags) Set(fieldName string, value string) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]string)
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for NodeconfigV1SubnetDetails_Tags to handle AdditionalProperties
func (a *NodeconfigV1SubnetDetails_Tags) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]string)
		for fieldName, fieldBuf := range object {
			var fieldVal string
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for NodeconfigV1SubnetDetails_Tags to handle AdditionalProperties
func (a NodeconfigV1SubnetDetails_Tags) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for NodetemplatesV1NewNodeTemplate_CustomLabels. Returns the specified
// element and whether it was found
func (a NodetemplatesV1NewNodeTemplate_CustomLabels) Get(fieldName string) (value string, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for NodetemplatesV1NewNodeTemplate_CustomLabels
func (a *NodetemplatesV1NewNodeTemplate_CustomLabels) Set(fieldName string, value string) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]string)
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for NodetemplatesV1NewNodeTemplate_CustomLabels to handle AdditionalProperties
func (a *NodetemplatesV1NewNodeTemplate_CustomLabels) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]string)
		for fieldName, fieldBuf := range object {
			var fieldVal string
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for NodetemplatesV1NewNodeTemplate_CustomLabels to handle AdditionalProperties
func (a NodetemplatesV1NewNodeTemplate_CustomLabels) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for NodetemplatesV1NodeTemplate_CustomLabels. Returns the specified
// element and whether it was found
func (a NodetemplatesV1NodeTemplate_CustomLabels) Get(fieldName string) (value string, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for NodetemplatesV1NodeTemplate_CustomLabels
func (a *NodetemplatesV1NodeTemplate_CustomLabels) Set(fieldName string, value string) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]string)
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for NodetemplatesV1NodeTemplate_CustomLabels to handle AdditionalProperties
func (a *NodetemplatesV1NodeTemplate_CustomLabels) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]string)
		for fieldName, fieldBuf := range object {
			var fieldVal string
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for NodetemplatesV1NodeTemplate_CustomLabels to handle AdditionalProperties
func (a NodetemplatesV1NodeTemplate_CustomLabels) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for NodetemplatesV1UpdateNodeTemplate_CustomLabels. Returns the specified
// element and whether it was found
func (a NodetemplatesV1UpdateNodeTemplate_CustomLabels) Get(fieldName string) (value string, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for NodetemplatesV1UpdateNodeTemplate_CustomLabels
func (a *NodetemplatesV1UpdateNodeTemplate_CustomLabels) Set(fieldName string, value string) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]string)
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for NodetemplatesV1UpdateNodeTemplate_CustomLabels to handle AdditionalProperties
func (a *NodetemplatesV1UpdateNodeTemplate_CustomLabels) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]string)
		for fieldName, fieldBuf := range object {
			var fieldVal string
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for NodetemplatesV1UpdateNodeTemplate_CustomLabels to handle AdditionalProperties
func (a NodetemplatesV1UpdateNodeTemplate_CustomLabels) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}
